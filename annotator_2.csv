Unnamed: 0,commit,author,date,repo,project_size,time_period,strat_label,message,emotion,intensity
0,b90f6afa8bf33f8fbc8bec143eb6c6bba55eede8,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Thu May 7 13:15:17 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"roll swiftshader afddeccdfeaa commits git log afddeccdfeaa firstparent format'ad ae s' produce msvc error when virtual class misses virtual destructor created with gclient setdep r swiftshadercdfeaa if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.luci.chromium.luci.chromium.swangletryluci.chromium.swangletry bug none tbr",caution,4.0
1,06f2fa0ec01cf00dbeace71fae41f61cafd0493f,Xing Liu <xingliu@chromium.org>,Thu Apr 30 02:45:19 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,query tiles add a debug switch to immediately launch background task. this cl adds a debug switch for manually testing to instantly launch the background task. also move the main feature flag to . bug,satisfaction,3.0
2,232076f55e01fa311dea82cc802fd30e290a85ff,Yuzu Saijo <yuzus@chromium.org>,Fri May 29 07:14:02 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"remove backforwardcache specific ipc and use mojo this cl removes putpageintobackforwardcache and restorefrombackforward cache ipcs and use mojo instead. now the page state is managed by pagelifecyclestatemanager, which is responsible for sending updates to renderer via mojo messages.",frustration,2.0
3,6a19a15fb7b5d7e92fd49b20b74f3f73ea7de6c9,Aaron Krajeski <aaronhk@chromium.org>,Tue Jun 16 21:17:35 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,add ios to texturelayerskipwaitforactivation config bug,neutral,6.0
4,ce6d2b585d2a62c0e36f4d49723b7aec838d9488,Minoru Chikamune <chikamune@chromium.org>,Fri Apr 24 00:14:49 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,migrate beforeinstallpromptevent to use gc mojo wrappers. no behavior change. this cl reduces potential risks of useafterfree bugs. bug,caution,4.0
5,7ef9e481befd9a8ede73c5266a6126b509bf2664,Tim van der Lippe <tvanderlippe@chromium.org>,Fri May 1 12:22:36 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,remove networktoggletypefilter test this has been replaced by a unittest and is blocking a devtools change. chromium.org bug,frustration,2.0
6,2bb9ed48d18f67c1c86eb297843d42396018ee82,Yue Zhang <yuezhanggg@chromium.org>,Thu May 14 20:44:05 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,add notifications.quiet.continueblockingclicked to actions.xml bug,neutral,5.0
7,452f39c650ccec3c584ce585ff49436edf98b2c2,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Tue May 26 14:15:53 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"roll chromeos airmont afdo profile from .benchmark to .benchmark if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here tbr",caution,4.0
8,47a20fb1467c1ea9066a2ccab73f649b5769b90b,Dirk Pranke <dpranke@google.com>,Wed Jun 24 22:36:46 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,update for compatibility. chromium.org,neutral,5.0
9,6f345381bec027a89046b5e61130e9b64bd12cbe,Antonio Gomes <tonikitoo@igalia.com>,Tue Apr 14 15:44:46 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"migrate emptygrid.html to wpt , chromium.org",neutral,5.0
10,7b094c6281659d2ae5ebcae107990e841340f866,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Mon Jun 8 15:35:29 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"roll devtools frontend from fde to faa revisions update devtools deps. set min width for datagrid columns if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here bug none tbr",caution,4.0
11,ba4354289cd0d57a8e43bd8f340fc72d2151bd78,Kyle Horimoto <khorimoto@chromium.org>,Thu Jun 18 16:26:09 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,add search tags for nonsplit sync settings this cl adds search tags for nonsplit sync settings when the split sync flag is disabled. fixed,caution,5.0
12,2f96e417e755587e8405f51e681389f9d441bf40,Patrick Noland <pnoland@chromium.org>,Wed Jun 24 15:16:26 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"revert weblayer hook up cookiecontrolsbridge. this reverts commit bdfedbeaeef. reason for revert causes several tests to crash on lollipop tablet tests see e.g. original change's description weblayer hook up cookiecontrolsbridge. when enabled, and when third party cookies are being blocked, this will show an extra toggle in the page info bubble. test run_weblayer_shell example.com argsenablefeaturesimprovedcookiecontrols bug",satisfaction,5.0
13,95c179c499f445316d2fd69b0a15c75d40648a00,Kevin Marshall <kmarshall@chromium.org>,Fri Apr 10 02:05:43 2020 +0000,chromium/chromium,4568,2020Q2,4568 chromium/chromium 2020Q2,"connect the agent's metricsrecorder to webengine. allows the webengine to connect to an agentpublished metricsrecorder service. some simplification of castrunner code, eliminating the need for an alternate constructor for isolated runners by decoupling service publishing from runner construction. added an integration test. bug",neutral,3.0
14,acbbf5443865a4f0ae1ecf6ca1dc7a2a12fdaf8c,Xiaodan Zhu <zxdan@chromium.org>,Fri Jan 15 01:29:51 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"reorder virtual desks with drag and drop this cl implements desks reordering with drag drop. the main changes are listed as below added response methods for mouse pressed, drag and released events in desk preview to trigger drag and drop. added dragdesk methods in desks bar view to handle drag and drop. added a new class deskdragproxy to create a proxy of desk being dragged. added a method performminiviewreorderanimation to animate the movement of desks while reordering. bug",satisfaction,4.0
15,236354d74c15d15250cc6111ca273ca84fad40b3,Alexander Cooper <alcooper@chromium.org>,Wed Mar 24 01:46:55 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"refactor ar compositor to use the vizcompositor refactors arcore's usesharedbuffer mode to leverage the viz compositor rather than directly compositing itself. this allows integration with framesinkvideocapturedevices and ultimately tab capture. significant changes are creating and register a rootcompositorframesink and the relevant interfaces for that changes to how the state machine behaves advancing is on a best effort when we submit changes, but now ultimately driven by viz. always copying the raw camera image to the gpu process though only sending to blink when raw camera access is enabled. changes to the calculation of renderedframestats note that this first implementation does not yet composite domoverlay, which is still a separate rendered on top of the ar surfaceview, with the viz compositor so it still functions the same as it did previously. migrating the domoverlay surface to work with the viz compositor will be addressed in a future change. bug",frustration,3.0
16,d9c9dffe1805da7afaa92670833a5833ecc74709,Weblayer Skew Tests Version Updates <chrome-weblayer-builder@chops-service-accounts.iam.gserviceaccount.com>,Wed Feb 24 03:13:33 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"refresh skew tests for this cl will add skew tests for version see crbug. and crbug. for more information. chromium.org, bug none",neutral,5.0
17,9a64e4336d6e5ad9b72dd1ec28b5430e7960a8e4,Eric Orth <ericorth@chromium.org>,Fri Jan 29 22:15:16 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,extend some doh query metrics to months from now fixed,satisfaction,2.0
18,22d9cbedc5c4a0c71661737b714d056f9ff5a5c8,Hui Yingst <nigi@chromium.org>,Fri Jan 22 23:44:37 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"migrate invalidate, invalidateafterpaintdone to pdfviewpluginbase. this cl migrates deferred_invalidates_ to pdfviewpluginbase so that invalidate and invalidateafterpaintdone can be migrated as well, which will allow these two methods to be shared by both outofprocessinstance and pdfviewwebplugin. this cl also removed pdfviewpluginbasein_paint since all uses of in_paint_ are within the same class. bug",caution,3.0
19,78e58e4a1e0f689ca2f2ca922130a9be92c65807,Ioana Pandele <ioanap@chromium.org>,Thu Feb 4 14:42:18 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,add and launch an empty edit fragment bug,neutral,4.0
20,8a3fe31d9de5de944e28c42d5d18cbed3519912f,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Mon Mar 29 16:54:49 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"roll devtools frontend from cabf to acf revisions migrate formatter_worker migrate droptarget in ui migrate contextflavorlistener in ui update devtools deps. migrate diff if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here bug tbr",caution,5.0
21,eda5af030e5ac9e4dd167459a430cae46da637fd,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Mon Feb 1 18:39:27 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"roll angle from aecbf to eddf revisions roll swiftshader from dbb to dfdeeab revisions roll vulkandeps from to ddbfd revisions if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.asanluci.chromium.luci.chromium.swangletryluci.chromium.swangletry bug none tbr",caution,4.0
22,f6d48ae43e0dad18e1ecc7407039899c95a9164e,Hazem Ashmawy <hazems@chromium.org>,Fri Jan 29 16:11:18 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"replace old resourcegetidentifier histogram mark resourcegetidentifier histogram as obsolete and replace it with the new which records an enum instead. the new histogram should help record the cases the old histogram didn't catch like when a resource is missing. this should help us make an informed decision whether we can remove reflection or keep it as a fallback. bug , fixed test",caution,6.0
23,ce886f2a79f51e6d6170f9c2627d84014b19ff48,Justin Novosad <junov@chromium.org>,Tue Mar 23 02:21:13 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,canvas roundrect add radius validation new behaviour fail silently if a radius value is nonfinite. throw an indexsizeerror if a radius value is negative. bug,frustration,3.0
24,f890fb507d197aa4bbfd9b4b4d67725a607e5092,Sonny Sasaka <sonnysasaka@chromium.org>,Fri Feb 12 18:35:14 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"remove bluetooth battery experiment flag bluetooth battery indicator feature is launched, so this is removing the experiment flag. bug",neutral,5.0
25,019d34e0c9201a5a6a0e1ab1d480b7b1e91c2eeb,Lily Chen <chlily@chromium.org>,Thu Jan 14 00:08:27 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,remove android.webview.cookiemanager.samesite histograms these are no longer needed. bug,satisfaction,6.0
26,8828e43c680f597b47ab1b610f2c2145f3911d98,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Sat Jan 9 23:13:54 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"roll srcinternal from deef to bbe revision if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug none tbr",caution,5.0
27,730931c9f5f443ce14e64442af412bd066774bca,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Mar 31 20:21:47 2021 +0000,chromium/chromium,4568,2021Q1,4568 chromium/chromium 2021Q1,"roll chrome linux pgo profile roll chrome linux pgo profile from chromelinuxmasterececcafefbfb.profdata to chromelinuxmasterdefbcabebfefca.profdata if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chrome tbr",caution,3.0
28,2c1e160fd0ce31df18b22b2693514d9a14ab2e1b,Xianzhu Wang <wangxianzhu@chromium.org>,Mon Aug 31 19:22:44 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"disable raster translation for chromium ui chromium ui sets layers_always_allowed_lcd_text to true , indicating that it can almost always align raster pixels to physical pixels and doesn't care about temporary misalignment, so don't bother raster translation to avoid performance regression during noncomposited animations. in the future, the performance hint is better to be passed through transformnodewill_change_transform when we convert ui compositor to layer list paint properties mode. bug",caution,2.0
29,9c64f9452f4fe2c5cae2b963924119ac06065dca,Peng Huang <penghuang@chromium.org>,Wed Aug 26 17:01:01 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"fix a crash in . bug ,",frustration,6.0
30,db3f6b087813b00b8cdb7a058fac2727d8c91bbb,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Mon Jul 6 11:38:39 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"roll devtools frontend from efefcce to efbee revisions fix stylelintconfigstandard issues in disable eslint test name check temporarily fix typescript verification build disable flaky tests that are blocking trybots fix stylelintconfigstandard issues in .css if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here bug tbr",caution,5.0
31,e12ea56dcfd6a56c6768b0c86f3554640a34aec7,Rakib M. Hasan <rmhasan@google.com>,Thu Jul 9 00:10:30 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"android, wpt catch deleted wpt tests in android wpt override files during presubmit bug",neutral,7.0
32,089bee64bc48a5d86fe28631897b60fc68f45ef2,Rune Lillesveen <futhark@chromium.org>,Thu Aug 13 08:39:18 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,advance lifecycle to kinstylerecalc before resolving style in tests. trying to add dchecks to avoid styleresolverstyleforelement and pseudostyleforelement caused a few unit tests to break. this cl advances the lifecycle to allow styleforelement to be called on a styledirty tree in style_resolver_test.cc.,caution,2.0
33,282e809659b7b27a8e043b441b1e520db5e271ed,Roman Sorokin <rsorokin@chromium.org>,Wed Jul 8 05:03:29 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"retire expired captive portal metrics fixed ,",neutral,4.0
34,95cd9b72727fb85ba3d95b87e0a40a1b3cf6de85,Xianzhu Wang <wangxianzhu@chromium.org>,Tue Aug 18 01:10:42 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"allow a layer to use lcd text again previously once a layer became not lcdtext capable, it would never use lcdtext again. i think this was to avoid reraterization during animation. as we don't allow lcd text with will and during animation, and we skip rerasterization on lcd text status change during animation, there is no reason to keep that logic. bug",caution,3.0
35,dd1f68c99cee9c025c16aac1178ee943ded4f3e3,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Fri Sep 11 04:09:53 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"roll srcinternal from edaebae to cbc revision if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug none tbr",caution,5.0
36,b658d53be86d314f7b1738fc8c828035223fb590,Keishi Hattori <keishi@chromium.org>,Thu Jul 9 01:46:29 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"revert abstract portal activation handling to avoid hack of making a fake promise. this reverts commit fdccacabafdffd. reason for revert portalactivatedefault.html test timeout failure original change's description abstract portal activation handling to avoid hack of making a fake promise. this is somewhat verbose, but allows us to avoid the unhandled rejection being visible to script without having to make this hack even worse. instead of actually calling activate, this mirrors the spec structure by simply calling to underlying logic, passing a resolver where it makes sense and not in this case, passing a substitute object where it doesn't. bug",caution,3.0
37,bfa59294ddc9bb4ec70e73f90e1755daf5c38fc1,Andrei-Laurențiu Olteanu <lolteanu@google.com>,Thu Sep 3 16:11:01 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,add ac power routine add converters. add implementation to chrome. add implementation to chromeuntrusted. add tests. bug,frustration,5.0
38,8fad69fbbc6628825cf34a72b831819785319c60,Xianzhu Wang <wangxianzhu@chromium.org>,Mon Jul 6 17:08:45 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"unify most clippath code paths of precap and cap previously in precap, because we always created a composited mask layer for any mask clippath either pathbased or maskbased if the object needed to be composited, we needed to handle clippath differently in precap and cap, now always apply pathbased clippath after paint. no longer create a mask layer for pathbased clippath in precap. rename clippath to clippathmask to make it clear that this effect node is for the mask created for a maskbased clippath. if there are both mask and maskbased clippath, always let clippathmask effect node be the child of the mask effect node. this is required by precap unchanged to apply the clippath in the mask layer, but also works in cap previously both mask clippathmask were directly under effect because dstindstina, mask, clippathmask dstina, dstinmask, clippathmask where clippathmask is blackandwhite. if there is only a maskbased clippath, we'll only create clippathmask for both precap now no mask and maskclip nodes and cap unchanged. the precap mask layer will use clippathmask as the effect state, which avoids the need of filling a black mask before applying the clip path mask. now the only difference between precap and cap about clippath is that that when a layerobject with maskbased clippath is composited, precap creates a graphicslayer for the clippath mask before paint, while cap creates a cclayer for the mask after paint. bug",caution,6.0
39,ca3fb0b65a14ea14ff4034c810b89444f441b433,Yusuf Sengul <yusufsn@google.com>,Thu Jul 30 23:16:56 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"gcpw extension service as part of setup add hooks into gcpw setup library to gcpw extension. also, refactors the installable gcpw files out of setup library to have the ability to override them in the tests. bug",neutral,5.0
40,e384305105fd123223d4df97f0b44afb8a337ae7,Andrew Grieve <agrieve@chromium.org>,Wed Aug 19 04:18:26 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"android capture more tombstones in instrumentation tests when chrome_public_smoke_test has a crash, our test runner does not notice and so does not collect tombstones. this changes the are there tombstones logic to look for a tombstone message in logcat rather than looking to see if any tests crashed. bug",satisfaction,2.0
41,a4df6cf81db0a88d8c1e390538cc84c4a41c37a4,Benoit Lize <lizeb@chromium.org>,Mon Aug 24 11:43:00 2020 +0000,chromium/chromium,4568,2020Q3,4568 chromium/chromium 2020Q3,"make partitionroot layouts identical. there are a few places where we access a partitionroot with the wrong thread safety template parameter. this is fragile, but also forces us to remove some dchecks as their layouts don't match. this cl makes sure the layouts do match, which then removes the issue. the only downside is making partitionroot a tiny bit larger, but otherwise this does not add any runtime cost. bug",satisfaction,2.0
42,c30206d81b45ae0ca5043753f85ff678859ccdd8,Gabriel Charette <gab@chromium.org>,Thu Sep 5 17:20:06 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,backport some tests in tether to singlethreadtaskenvironment these tests were previously migrated from singlethreaded messageloop to a multithreaded taskenvironment then named scopedtaskenvironment as part of crbug base owners decided in retrospect that it was better to keep a singlethreaded option for taskenvironment and introduced singlethreadtaskenvironment. this cl retrofits that decision for tether. this cl is a noop if it passes cq. this cl was uploaded by git cl split. chromium.org bug,satisfaction,5.0
43,1f72a8fea595ed4049949065a56e70d0511b96fe,Michael Spang <spang@google.com>,Tue Jul 16 00:33:35 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"chromecast set display size to x on audio only devices set the default display size to x to minimize memory usage and cpu associated with the graphics pipeline on devices with no display. we had this mitigation in the past, but it was lost in a refactor. unfortunately, cast applications may have graphical elements even on audio only devices and fully disabling the graphics pipeline breaks compatibility. this reduces the total cpu runtime in a simple benchmark that loads a cast audio application assistant voice query to audio playback by .. bug",frustration,2.0
44,7d223cc8e3caf6f78af72ad7ca4e369630b24ff4,Dirk Pranke <dpranke@chromium.org>,Tue Sep 10 23:43:15 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,add latest gn roll script and update instructions. this adds a roll_gn.py script that can be run to roll deps to the latest version of gn or an alternate version of your choosing. chromium.org,neutral,6.0
45,0a3aa0d57e38c8b7a1aa771f685aec8e49ac3218,David Bokan <bokan@chromium.org>,Wed Jul 3 18:43:02 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,fix rootscrolloffset for scale factor the setsynchronousinputhandlerrootscrolloffset api used by webview expects to set a root scroll offset specified in document coordinates. i.e. the same offset should go to the same part of a document regardless the current zoom level. in i changed this method from layertreeimpldistributerootscrolloffset to viewportscrollby to reduce the number of scrolling code paths. this cl accidentally missed the fact that viewportscrollby expects the delta to be in screen coordinates and so it scales the delta by the scale factor inverse so that content appears to stick to the finger. this means the setsynchronousinputhandlerrootscrolloffset was dependent on the zoom level and broke cases like those in the linked bug. this cl fixes the issue by having setsynchronousinputhandlerrootscrolloffset apply the scale factor before calling scrollby so that the desired delta gets applied to the document. bug,neutral,4.0
46,433c87aa362da5076a4d90376e829d248a18d85d,nancy <nancylingwang@chromium.org>,Fri Aug 9 04:38:55 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,fix the icon size to resolve the icons missing issue on glinux with . factor.,frustration,3.0
47,90a6203de65fed3f9821f8cce8088aa1edecf892,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Fri Aug 9 01:36:01 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"roll webrtc eafc commits git log eafc nomerges format'ad ae s' roll chromium_revision eacfbfc created with gclient setdep r webrtceafc the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. bug",neutral,4.0
48,5d7eccb12eb66cbfbfb73dfd7682d44ff2cb5cba,Martin Šrámek <msramek@chromium.org>,Mon Sep 9 10:45:52 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,disable the flaky requestpictureinpicturetwicefromsamevideo test tbr bug,caution,3.0
49,243479944443b26a2af6f485c159fff233036d45,v8-ci-autoroll-builder <v8-ci-autoroll-builder@chops-service-accounts.iam.gserviceaccount.com>,Mon Jul 8 18:39:58 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"update to version summary of changes available at please follow these instructions for 'ing issues please close rolling in case of a roll revert this only works with a google account. .chromium.blinkrel .chromium. .chromium. .chromium. .chromium. chromium.org,",neutral,5.0
50,c1a3b486458780e150c0a6c53819b118e99bb3f6,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Jul 17 23:01:36 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"roll fuchsia sdk from to the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .chromium.castluci.chromium.cast",frustration,6.0
51,7897a989c78719ae4d96ed3fe9da14254a7e7291,Christopher Cameron <ccameron@chromium.org>,Fri Sep 6 17:53:51 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"send app url from app shim to browser this serves to identify app shims that should be treated as multiprofile only shortcut apps and pwas are to be multiprofile, so that, in a future patch, they can ignore their profile path. also in the future, in the event that an app is not installed on any profile, but the shim still exists e.g, a user wipes their prefs, then this url can be used to open that shortcut url in a browser tab rather than just fail. rename the function that is called when a shim connects to the browser from launchapp to onshimconnected. change the function from taking a halfdozen arguments to taking an appshiminfo structure, and pass that structure directly to appshimhostbootstrap. bug",frustration,3.0
52,304b34aa0c9380525ad4df08f1ad87691cb670ab,Anand K. Mistry <amistry@chromium.org>,Mon Sep 2 05:45:43 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"add down icon to cr_searchable_dropdown the down icon changes colour to match the underline when the input is focused. ,",frustration,4.0
53,e5894810c14ece397a750c715024e72c957d58e6,Ian Vollick <vollick@chromium.org>,Wed Aug 21 20:33:47 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,disable trustedwebactivitysharetargettest on touchless it is based on ctatestrule which does not apply. bug none,caution,2.0
54,07009f6c0418136a3637706ad3041b8eb1668ece,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Thu Jul 4 04:45:44 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,"roll dbeea commits git log dbeea nomerges format'ad ae s' rolling dependencies and updating known_failures created with gclient setdep r dbeea the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary.",neutral,
55,a2350063bcac686e5dc79879fd40bff4d615f46d,Gabriel Charette <gab@chromium.org>,Wed Sep 11 23:23:27 2019 +0000,chromium/chromium,4568,2019Q3,4568 chromium/chromium 2019Q3,backport some tests in geolocation to singlethreadtaskenvironment these tests were previously migrated from singlethreaded messageloop to a multithreaded taskenvironment then named scopedtaskenvironment as part of crbug base owners decided in retrospect that it was better to keep a singlethreaded option for taskenvironment and introduced singlethreadtaskenvironment. this cl retrofits that decision for geolocation. this cl is a noop if it passes cq. this cl was uploaded by git cl split. chromium.org bug,neutral,5.0
56,c8c01bae393ba38d1d5221cf46846beb5b178192,cfredric <cfredric@chromium.org>,Thu Dec 3 18:03:49 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"modify firstparty set parsing to store owners explicitly, and disallow singleton sets. this is required since we need to be able to quickly distinguish sites that are members of a nonsingleton set from those that are members of a singleton set i.e. they are not a member of any set provided by component updater or on the command line. this, in turn, is needed because we need chrome to ignore the sameparty attribute for cookies set by sites that are not in a firstparty set, in order to avoid site breakage in the event of a race condition between the site registering their firstparty set and applying the sameparty attribute, and chrome receiving the updated set list from component updater. bug",caution,2.0
57,57b26807550951cc7a6b5183adbe8b03c07136a4,Esmael El-Moslimany <aee@chromium.org>,Thu Nov 19 02:08:32 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,webui ntp disable onegooglebar by default to allow finch to control flag bug,caution,7.0
58,f554bc807c66b6d469c6e26ae0eb1ca5c0ebf078,danakj <danakj@chromium.org>,Wed Nov 11 16:57:01 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"remove unused includes of legacy ipc traits headers. convert renderwidgethostnsview mojom to use uicursor instead of webcursor. then webcursor is no longer used, which was previously using the skbitmap param traits chromium.org chromium.org bug",neutral,7.0
59,403b0ccbebbd29215144e969132fa3357b700548,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Fri Oct 30 16:55:01 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"roll help app from to release_notes if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug tbr",caution,
60,598917eb82c1a0e321088e8b42ee6410e2dc4f32,Meilin Wang <meilinw@google.com>,Mon Nov 23 21:47:04 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,add metrics for notification interactions. this cl implements the histogram ash.phonehub.notificationinteraction to log the number of times user interacts with a phonehub notification by sending an inline reply or dismissing it. bug,neutral,3.0
61,31eec6596e7190e1de8a31ec01ef8a8e471abed0,Omer Katz <omerkatz@chromium.org>,Wed Nov 4 18:48:24 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"heap avoid multiple retracing of weak containers we found that erasing from the weak container worklist caused timeouts in some blink_perf benchmarks. the erase operation was meant to avoid retracing the same backing store multiple times an iterator to a hash table would result in at least onstack references to the backing store. instead of erasing, this cl pushes retraced backing stores to a vector. backing stores are retraced only if they are not yet in the vector. thus iterators should trigger only a single retracing of the backing store. the vector is limited in size to avoid making it uncontrollably large. that means it is possible to retrace the same backing store multiple times if it was already ejected from the backing store. however this is very unlikely in practice. driveby reenable skipped tests. bug",caution,1.0
62,f11e7ff7edf4d1b4f1f5645b3286d0f40501b0a7,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Tue Dec 8 10:26:07 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"roll srcinternal from caffef to eddc revision if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug none tbr",caution,7.0
63,6bf22e0163394cce753e6d57e295f1160e69b32e,Gavin Williams <gavinwill@chromium.org>,Mon Nov 23 20:14:08 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,scanning add webui helper function for scanninghandler test function asserts the expected values after a handler webui call. bug,neutral,2.0
64,3b3e971c3b68a76565edc533d6886a73fb2d632e,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Tue Nov 17 03:25:00 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"roll srcinternal from beebffbe to bdeccab revisions if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc , on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug tbr ,",caution,5.0
65,ee633e37f9a504c99c90ed16df080f38678d0f39,Egor Pasko <pasko@chromium.org>,Thu Dec 3 11:08:24 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"split loading and relro sharing in modernlinker api the current modernlinker loading primitives look like loadlibrarycreaterelrospath, loadaddress, libinfo loadlibraryuserelrospath, loadaddress, fd this change replaces them with loadlibrarypath, loadaddress, libinfo, boolean spawnrelroregion userelroslibinfo the userelros can be called while the library code is running, atomically replacing the relro region with its version backed by shared memory, if all stars align. motivation the main motivation is to allow the app zygote to provide the relro region on systems with app zygote enabled, and use the usual mechanism when app zygote is not available. implementation highlights with this change the modernlinker still waits for mlibinfo to arrive from the browser process, as usual, but relro sharing already happens after the library is loaded. i believe, there is no code path to replace concurrently with execution. semantically there are a few notable changes . when spawned, the relro fd is sealed as prot_read, making it impossible to make it writable ever again even by privileged processes. this way we should not worry where the code runs, in the browser process or in the app zygote. . library load ranges are explicitly including the range of pt_gnu_relro segment. it should not affect anything now, but can potentially eliminate hard to debug crashes in distant future. the main changes are in modern_linker_jni.cc where 'class nativelibinfo' is introduced to hold basically the same information as the javaside libinfo, with the ability to perform the primitives described above, and internally between javalibinfo and nativelibinfo. retrospectively the move into the class does not provide much useful encapsulation at the moment, but seems like a good direction if we later decide to use it for legacylinker, mock out parts for testing. the most part i dislike most is that the class behaves like two independent parts loadinfo and relroinfo, some operations affect one, but not the other. i did not attempt to make the split, as things are still a bit coupled sometimes, maybe later. ok, this was long. bug",satisfaction,2.0
66,b7c8a2dc864305e8381c27d2023ee4e894e19211,Bailey Berro <baileyberro@google.com>,Thu Oct 1 15:58:44 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"observe powermanagerclient from systemdataprovider this change makes systemdataprovider an observer of powermanagerclient. whenever updatebatterychargestatus is called or an event is received from powermanagerclient, updated batterychargestatus information will be fetched from croshealthd powermanagerclient. bug",neutral,3.0
67,7420a23d4319a9e8668b49c16555877e2c9d5fc3,Patrick Monette <pmonette@chromium.org>,Thu Dec 3 18:30:36 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,add frameaudiblevoter this voter casts a user_blocking priority vote when a frame is audible. bug,neutral,4.0
68,c5e6207efe06efd4cead21100e0e791c0593223b,Rune Lillesveen <futhark@chromium.org>,Thu Oct 29 10:03:56 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,revert make netreportsender take a networkisolationkey. this reverts commit bfcddacacfaeffbedcbbd. reason for revert suspected culprit for linux msan failures for proofverifierchromiumtest.pkpreport see original change's description make netreportsender take a networkisolationkey. and update all consumers to pass one in. bug,frustration,2.0
69,3644ea3027f6c33843b02ee285b936c00299c036,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Oct 28 14:40:29 2020 +0000,chromium/chromium,4568,2020Q4,4568 chromium/chromium 2020Q4,"roll chrome linux pgo profile roll chrome linux pgo profile from chromelinuxmasterebfafbfbbfaaeca.profdata to chromelinuxmaster.profdata if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chrome tbr",caution,5.0
70,903079c08a90f8e39015d0dd992ad380334c603f,dpapad <dpapad@chromium.org>,Fri Feb 28 21:44:25 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"settings mark all entries in settingsroutes typedef as always defined. previously every member of that typedef was marked as potentially undefined. this required a typecasting whenever a !settings.route was expected, which was tedious without producing any typecoverage benefits. as a result of this change a lot of typecasts like the following type !settings.route settings.routes.fonts are no longer necessary and are removed. bug",satisfaction,5.0
71,55c1af170c6fa164f81c850c13dd3db0240c371e,Koji Ishii <kojii@chromium.org>,Thu Mar 12 10:06:52 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,add ngfragmentitemisblockformattingcontextroot this is a follow up for crrev. this patch has no behavior changes. bug,neutral,6.0
72,0f0e53821e4452db39bbd876d058d4d268287681,Jose Lopes <jabolopes@google.com>,Wed Feb 19 22:26:34 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,migrate notify promotion callback. the callback is repeating because it can be executed in the following locations invoked by a for loop in this is part of the basecallback migration. context bug,neutral,7.0
73,a0ed230e2bbee2b516f9e1ba40e8cedb68978ce1,Xianzhu Wang <wangxianzhu@chromium.org>,Tue Feb 11 02:29:40 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"skip mainthreadcsspaint on tests under mainthreadcsspaint flakily on . because of crbug run_web_tests.py crashes when any of the tests fails, and because of crbug the crash is not caught by the try bot, so we have to skip these tests on for now to ensure coverage of other tests. chromium.org, bug ,",caution,3.0
74,22f2c4be6d3538f960d80a944d60f5f1e6fdfcce,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Thu Feb 20 21:38:30 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"roll srcinternal eedfafbdeac commits created with gclient setdep r srcinternaldeac if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chromeoschrome bug tbr",caution,5.0
75,01e90fe0ea308ea2889668e5a7a1f6e97bbc93d2,Denis Kuznetsov <antrim@google.com>,Mon Feb 24 16:32:53 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,apply css to slot fallback values in oobe bug,caution,6.0
76,98c08b2f31062b472afc6678c11eb3b8b778909b,Peng Huang <penghuang@chromium.org>,Thu Mar 5 19:29:29 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,enable pixel_webglreadpixelstabswitch for vulkan on android pixel bug,neutral,5.0
77,2a236d52313739d00055cde20634da3eca7e518e,Andrey Zaytsev <andzaytsev@google.com>,Wed Mar 4 12:44:37 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,safety check page implemented an observer for the password leak check api also implemented all of the states for the password check matches the js frontend ones and added tests for the observer logic. bug,neutral,4.0
78,14243dea9a1bd4a4de19f18e43dcc521e1a00c01,Annie Sullivan <sullivan@chromium.org>,Fri Jan 31 21:47:57 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"add additional histograms for os event latency on mac. these will be used to debug extreme outlier values of the pageload. histogram. first, add all event types used to calculate pageload. to event.latency.os. move the calls to generate the histogram into the functions that build the events, because the calling functions for the new event types have much more complex logic. second, add new versions of event.latency.os without the call to validateeventtimeclock. this call fixes some potential causes of extreme values, so adding histograms which do not include it can help determine if it masks the problem. bug",caution,4.0
79,0b063634ec898b99289713e890a4f8b11cd63fdb,Abhijeet Kandalkar <abhijeet@igalia.com>,Tue Mar 3 04:50:39 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"use new downcast helper for blinkloadabletexttrack this cl has two goals, . use to and dynamicto as new downcast helper . use isaelement in place of isloadabletexttrackelement bug",neutral,5.0
80,465c88185d76d959037726ecf5d1baa540db93a5,Peter Kasting <pkasting@chromium.org>,Mon Jan 6 04:30:56 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,"use correct colors for location barrelated views. this fixes a variety of color issues reported bugs, e.g. incorrectly using the native theme colors when a custom theme is installed unreported bugs, e.g. not correctly plumbing all colors for pwas bug",satisfaction,5.0
81,96f9d859f2757955661544e2de6e5e7f85081821,Nick Harper <nharper@chromium.org>,Fri Jan 31 22:47:24 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,add teams.microsoft.us to hsts preload list,neutral,7.0
82,6baf22dddfa2d562114eff8782e331215c7eb24f,Krishna Govind <govind@chromium.org>,Wed Mar 18 20:45:45 2020 +0000,chromium/chromium,4568,2020Q1,4568 chromium/chromium 2020Q1,updating xtbs based on .grds from branch master chromium.org,neutral,6.0
83,76f37705459471a6006ad8c2b4763221d182551b,Rob Schonberger <robsc@chromium.org>,Fri May 3 05:52:25 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,"add policy control for appreinstallrecommendations. this cl adds a policy control ability for the fast app recommendation reinstall feature. this allows enterprise managers to the policy as per other features. bug ,",satisfaction,3.0
84,8c9500e7302569feb5f34328ef083c969e6889ff,Sharon Yang <yangsharon@chromium.org>,Fri Jun 14 17:41:40 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,update links in accessibility overview added a missing link and fixed a broken link.,satisfaction,4.0
85,cc3ae3ec317f41700c5263c23fbe1bed005d2eb8,Giovanni Panaro <tsrwebgl@gmail.com>,Fri May 31 17:35:20 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,increased text padding on status bubbles. increased the left padding on the status bubble from to and the right padding from to . this way the url looks less cramped. bug,satisfaction,4.0
86,cd9b808982584d67c045f844d5764743b72b6fc4,Min Qin <qinmin@chromium.org>,Mon May 6 19:18:14 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,setting simpledownloadmanagercoordinator in reduced mode this cl allows us to set the simpledownloadmanagercoordinator in reduced mode. so that downloadservice can use the inprogressdownloadmanager and start new downloads while in reduced mode.,satisfaction,3.0
87,459db08a346583f491b39ea4bb1b1ecfa38258ba,Xiaocheng Hu <xiaochengh@chromium.org>,Tue Apr 16 08:37:09 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,"convert movebylinecyclesintable.html with selection_test this patch converts the web test with selection_test to promote usage of test harness, and also to ease the implementation of hit test based up and down caret movements bug",neutral,5.0
88,d5b64646391c3bb5676663df85b759af0b59bf8f,Elly Fong-Jones <ellyjones@chromium.org>,Mon Apr 8 21:10:23 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,flags assign expensivebackgroundtimerthrottling bug none,satisfaction,7.0
89,43fded42027cb9774ee2218e44bc1a389d3b1955,Caitlin Fischer <caitlinfischer@google.com>,Tue Jun 18 11:25:11 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,"fix for chromevox reading two suggestions when changing hover. when a user hovers over the first suggestion, the entire suggestion is read once. when a user hovers over the second suggestion, the first suggestion is read again and the second suggestion is then read. we send a selection event when the first suggestion becomes unselected. one solution is to send a selection event only when a suggestion was unselected and becomes selected. video of the problem googlers only chromevoxdoublesuggestionsread you can read the text that is read at the top of the screen. pay attention to what is read when hover changes from the first suggestion to the second, from the second suggestion to the footer manager addresses, etc. video of the fix googlers only chromevoxdoublesuggestionsreadfix bug",frustration,3.0
90,a28ee301daffad323b08af6a05cdc81a7df5019e,Henrique Ferreiro <hferreiro@igalia.com>,Fri Apr 12 17:33:35 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,"inline static create from as advised in , this cl ports calls to foocreate factory functions to use makegarbagecollected from classes in svg. bug",neutral,7.0
91,56c486c5ac81738b560241af693f4f7f5369006a,Chromium WPT Sync <wpt-autoroller@chops-service-accounts.iam.gserviceaccount.com>,Fri Jun 28 22:32:02 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,"import wptfedbbfbefabaefdfae using wptimport in chromium abedbffdcbbdfbcfadd. with chromium commits locally applied on wpt bcec mse test addsourcebuffer and changetype relaxed type strictness and allowance for implicit changetype note to sheriffs this cl imports external tests and adds expectations for those tests if this cl is large and causes a few new failures, please fix the failures by adding new lines to testexpectations rather than reverting. see noexport true",frustration,3.0
92,43c860f74550b2a82c656212c5e43da959f3a26c,Esmael El-Moslimany <aee@chromium.org>,Thu May 23 20:00:04 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,webui remove paperinkfocusbehavior from,neutral,5.0
93,0e7768384fb9cab47ebbec66c810ef4768aca704,Hirokazu Honda <hiroh@chromium.org>,Thu May 30 08:18:46 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,video_decode_accelerator.mojom remove providepicturebuffersdeprecated bug test play videos with youtube app,neutral,4.0
94,07341f2878971de8aa2af1b9b28a17a528c0fef9,Peter Kotwicz <pkotwicz@chromium.org>,Wed May 15 10:22:31 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,change min os version for newstyle webapks to n this cl changes the minimum android os version for newstyle webapks to android n. the minimum android os version is determined by by the minimum android os version that transitions from the webapk's splash screen to chrome's splash screen can be done without visual artifacts. see for more details,satisfaction,6.0
95,14cd42b6c11da6c7a5f20c2af4c13290b5482c01,Rohit Rao <rohitrao@chromium.org>,Wed Jun 12 12:09:43 2019 +0000,chromium/chromium,4568,2019Q2,4568 chromium/chromium 2019Q2,stops crashing in clipboardrecentcontentiostest when the clipboard is empty. switches to using assert_true when verifying that a baseoptional has a value. this prevents us from trying to read the value if it is unexpectedly missing.,caution,4.0
96,6216be03fea4d16279b92b1afe650f49a92482cb,Yannic Bonenberger <yannic.bonenberger@gmail.com>,Fri Oct 11 17:05:18 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"stop resurrecting uninstalled workers previously, service workers were resurrected when they were updated or when the same script was registered while the service worker was still alive. now, registering a service worker will always create a new instance, regardless of whether there already is a running instance or not. chrome status intent to implement and ship bug ,",neutral,5.0
97,70c4ad01c8caf63420cbc430ab9f5b8e5f0dfafb,Ionel Popescu <iopopesc@microsoft.com>,Wed Oct 2 03:02:08 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,introduce support to input type'time' popup. this cl introduces support to the popup by adding a new column when the inpage controls has the option. tests were added for validating the new ui and for selecting a value using the column. bug,satisfaction,3.0
98,3421db3861cd568aa35ab1f63315ef0c16e01fd5,Eric Orth <ericorth@chromium.org>,Sun Oct 20 02:35:52 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"use a cancellable timer for delayed doh probe start allows dnsclientcancelprobesforcontext to cleanly cancel probes when still waiting on initial startup delay. nulling the url_request_context_for_probes_ was not sufficient for this case because the context was already bound in the delayed task. for testability, moved mockdnstransactionfactory to be visible from dns_test_util.h instead of just being a private internal class of mockdnsclient. allows use with a real dnsclient for dnsclienttests. bunch of code churn from moving, but no real change to mockdnstransactionfactory other than adding a doh_probes_running_ to track when the probes have been started or canceled. fixed",neutral,6.0
99,56ac23444d2d560b383b9f8ddf2a43c7135c2500,Will Harris <wfh@chromium.org>,Tue Oct 22 23:26:38 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,only send oscrypt key to network service if running out of process.,neutral,6.0
100,14371f98d9d9a1d797a89a7102b298521db92950,Mikel Astiz <mastiz@chromium.org>,Thu Oct 10 15:45:10 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"introduce sync trustedvaultclient the abstraction allows injecting platformspecific logic about retrieving locally known encryption keys, as well as the optional ability to store them independently of signout state or sync engine initialization state. the api is designed to be asynchronous in order to support io or ipcs. syncservicecrypto is extended with an intermediate state where keys are being fetched, before actually prompting the user for action. bug ,",satisfaction,2.0
101,7d851ec1d978bf2a33336bc43475f6b5a7c0cd96,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Dec 18 13:20:33 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"roll angle efbde commits git log efbde firstparent format'ad ae s' roll bede commits created with gclient setdep r angleefbde if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.asanluci.chromium. bug none tbr",caution,5.0
102,aa9bd3df74f7f77e0049e53b1a7f97861d7d83b1,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Fri Nov 22 15:33:20 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"roll skia ecbffdacdbb commits git log ecbffdacdbb nomerges format'ad ae s' add dockerbased gcc test tasks created with gclient setdep r skiadacdbb if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here .chromium.luci.chromium.blinkrelluci.chromium.chromeoscompiledbgluci.chromium.luci.chromium.luci.chromium. google.com bug none",caution,5.0
103,314711cc46f6d0db8d2b433f2117a5977fb32816,sczs <sczs@chromium.org>,Wed Oct 16 17:06:58 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,creates infobarsavecardcoordinator creates infobarsavecardcoordinator and implements stop and infobarwasdismissed which is common between all infobarcoordinators. creates kinfobartypesavecard and expands infobar_metrics_recorder to handle this case. the histogram suffix is being updated on bug,frustration,7.0
104,d21f86a1cf29162104e74e70d7d6276d5a6a28f1,Umut Baris Oztunc <umutoztunc@google.com>,Wed Dec 11 06:12:45 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,create a utility file for arcfilesystemwatcherservice this creates a utility file for the functions and constants that will be shared by filesystemscanner fsscanner and arcfilesystemwatcher. this also introduces getandroidpath function to convert chrome paths to android paths. bug test manually tested.,satisfaction,1.0
105,6d5ef36f22d4aea232a0bb1a2279926e60ca9261,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Fri Dec 6 12:33:20 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"roll swiftshader bffdfdce commits git log bffdfdce firstparent format'ad ae s' reactor switch swizzles over to bit hex codes created with gclient setdep r swiftshaderdce if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.luci.chromium. bug none tbr",caution,5.0
106,b9b24e93485234ea4a829eb4efff85aa2fb173bd,Dominique Fauteux-Chapleau <domfc@chromium.org>,Tue Nov 26 18:38:31 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,add dcheckis_valid to dmtokenvalue. this dcheck was not included to avoid causing problems with older code that would read the value of empty tokens. now that this code is migrated the check can be included.,caution,3.0
107,b0ebaa2e850bf6c8dba2b6c2b0054c19b75999e5,Alan Screen <awscreen@chromium.org>,Wed Nov 27 19:53:31 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,"remove obsolete printpreview.pagecount.initial metric cleanup triggered by review multiple printpreview. metrics are marked as obsolete and identified to expire after . one of these, printpreview.pagecount.initial, was autoextended based on frequent use and did not get removed from the code even though it is marked as obsolete. restore the expires_after value to for this to be like its sibling metrics and remove the code which uses it. bug",neutral,4.0
108,26cc91c3979e0921248c1b34132456804e1c1104,Sergio Villar Senin <svillar@igalia.com>,Mon Oct 28 15:42:35 2019 +0000,chromium/chromium,4568,2019Q4,4568 chromium/chromium 2019Q4,make webcontextmenudatainputfieldtype an enum class and extract to a file in order to remove the webcontextmenudata dependency from we need to extract all the data types used in from web_context_menu_data.h and move them to different files under . webcontextmenudatainputfieldtype is converted to a strongly typed enum class and moved to a different file under so that does not depend on . bug,frustration,5.0
109,8e38c6a80c6133a501d58952b2ca345fac744ab7,Tsuyoshi Horo <horo@chromium.org>,Thu Mar 14 15:13:50 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,fix trace_event in signed_exchange_signature_verifier.cc,frustration,2.0
110,af93ec05da7b848412e3857cdd4baed719c64553,Hayato Ito <hayato@chromium.org>,Wed Jan 30 06:20:20 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,disable fullscreencontrollertest.topviewstatuschange chromium.org,caution,7.0
111,9d480a8c969272a2fc56cc9307ad6184b722f3e0,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Sun Feb 3 21:24:05 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"roll srcinternal efaafefdc commits created with gclient setdep r srcinternalefdc the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. chromium.org",frustration,5.0
112,930a0f786355a7ce53129de4f647ab9a3f8a212a,Peter Kasting <pkasting@chromium.org>,Fri Jan 18 03:38:00 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"compute separator color against correct background color. the existing code was mistakenly still using the text color when i'd intended to change it to the background color. fix that. along the way, i discovered that the omnibox theme uses different background colors than our spec claims. adjusted the alpha value slightly based on this. as a result of the different background colors and the new alpha, the actual contrast ratios of this patch are normal incognito which is nearlyidentical to the originallylandedin design's bug",satisfaction,3.0
113,b1dde971209028a613162899a727b286384269c5,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Feb 6 02:56:36 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"roll angle fcbfdbddfe commits git log fcbfdbddfe nomerges format'ad ae s' skip whitelistmatchessupport test on android. created with gclient setdep r anglebfdbddfe the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .chromium.luci.chromium.luci.chromium.luci.chromium. chromium.org",neutral,5.0
114,c427f4114b6420cb8d11015a55133f2e3af98f98,Gyuyoung Kim <gyuyoung@igalia.com>,Mon Jan 28 17:27:49 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"replace most uses of accounttrackerservice in signin_ui_util_unittest.cc as a step to make to use identitymanager, this cl replaces all uses of ats with identitymanager's ones in signin_ui_util_unittest.cc. test all tests in dicesigninuiutiltest bug",neutral,6.0
115,b89c1d51e0b97cef3e349599852d6f8b192d11f9,Tarun Bansal <tbansal@chromium.org>,Wed Jan 16 06:56:29 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"previews move check for ect at commit for optimization hints previews if the ect is unknown at navigation time, then currently we do not trigger the preview. this cl changes the logic to rather recheck the ect at the commit time. if it's still unknown at the commit time, the preview is not .",caution,2.0
116,4e42db9ae5a99dc29a66a93ff81b0ee8b00382e3,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Sat Mar 9 01:43:26 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"roll chromite faadadfd commits git log faadadfd nomerges format'ad ae s' revert upload goma logs include all files in folder instead. created with gclient setdep r chromiteadfd the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .chromium.kevinrel",frustration,4.0
117,b815500c12eae519b6a9b4c09b93fcf5494940a2,Camille Lamy <clamy@chromium.org>,Wed Mar 13 13:46:39 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,make some tests use navigationsimulator this cl converts several content_unittests to use navigationsimulator instead of calls to testrenderframehost. this is needed to start enforcing having a navigationrequest at commit time and swap renderframehost on each navigation. bug,satisfaction,2.0
118,6889870f6345dad759fab1f2d5a0db9fc5820cd4,James Lissiak <jalissia@microsoft.com>,Tue Mar 5 18:02:07 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"devtools adding new cdp tests for css domain adds a test to ensure that css.getinlinestylesfornode and css.getmatchedstylesfornode work for both element and nonelement type nodes adds a test to ensure that add, change, and remove events fire for",caution,5.0
119,64f874d0c46cc1d1ae915656e1b41469f5445493,Khushal Sagar <khushalsagar@chromium.org>,Thu Jan 10 19:31:42 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,cc reinstate crash dumps for paint deserialization failures. reinstate crash dumps for deserialiation failures during rasterchromium in the gpu process. this was previously disabled due to a paint caching bug which has now been fixed see crbug.. also rate limit the crash dumps to . generating the dump is an expensive operation which holds the gpu main thread. its good practice to limit the instances where we do it. chromium.org bug,caution,4.0
120,b984d674d204cff353d036942d8b82c6c302cf6a,Gabriel Charette <gab@chromium.org>,Tue Feb 12 21:53:27 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"clarify threadcompatible terms threadcompatible i initially thought we didn't have those in chromium but after reading docs some more they are what we call initializedoncereadonlyforeverafter types. immutable a subset of threadcompatible types which are never modifed. internal docs are using it. our nomenclature as referred to it as threadaffine forever so we can't all of a sudden stop defining threadaffine. as such, let's just mention that they're the same internal docs also frown upon them they appear to be much less frequent there though, probably because of not having to deal with old third_party apis. threadhostile some developers are more familiar with this term and",frustration,4.0
121,15285b0d2341fe97de606e095697ec0195e50687,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Fri Feb 1 07:50:16 2019 +0000,chromium/chromium,4568,2019Q1,4568 chromium/chromium 2019Q1,"roll srcinternal bcabbcf commits created with gclient setdep r srcinternalbbcf the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. chromium.org",frustration,2.0
122,f83ad555a070dee268b6725d8391337c066349ee,catapult-chromium-autoroll <catapult-chromium-autoroll@skia-buildbots.google.com.iam.gserviceaccount.com>,Wed May 9 18:03:14 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"roll catapult dbedaa commit git log dbedaa nomerges format'ad ae s' dtu use telemetry quests for the performance_test_suite isolate. created with rolldep catapult bug autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. chromium.org",frustration,2.0
123,9dd345d0e616ff5003ae9289087dfc2297ddd6e5,Lei Zhang <thestig@chromium.org>,Thu Jun 21 23:21:45 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,simplify backgroundmodemanager. return bool instead of int for counts if the count does not matter. delete dead code. remove unused parameters in an observer. modernize code.,frustration,5.0
124,4ea69447605a5534230fbf1751a5fa22464f460c,Katie D <katie@chromium.org>,Mon Apr 2 23:17:30 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"change the sts eventrewriter to an eventhandler at priority. this makes the sts eventrewriter work with sticky keys mode, and is basically a revert of commit cfabddfaeababb along with porting other modifications made since that commit. bug",neutral,5.0
125,27bd1f258ee86989474682832e7db43762ee1739,Darren Shen <shend@chromium.org>,Fri Jun 29 02:53:12 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,only register observer once in virtualkeyboardcontroller. bug,neutral,6.0
126,289afd805a5fd0f001d7076d94177bc8a8b99f04,Maksim Sisov <msisov@igalia.com>,Thu Jun 21 09:39:03 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,fixup! add support for menu window type. remove accidentely added check in the popup wrapper . added in chromium.org bug,frustration,3.0
127,08465996879a09600314d070c3a528756b979d7e,Anna Offenwanger <offenwanger@chromium.org>,Mon Jun 18 23:18:49 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"reland merging webvr . requestpresent into webxr requestsession this is a reland of dcebdadafbfbdccadcfc chromium.org original change's description merging webvr . requestpresent into webxr requestsession in the webvr . spec, the blink code was informed about devices then sent requests for pipelines to those devices via the mojo interfaces. in the webxr spec, the decision about which device to use is left up to the browser, and not decided until the pipline request has been made. this cl moves the blinkdevice interface pointers from being call parameters to being return parameters to better align with webxr. as webvr is being deprecated, as much of the old vr code as is possible has been cleaned out. bug cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.luci.chromium.master.tryserver.luci.chromium.luci.chromium.",neutral,2.0
128,c815c7478fce1e7c8b03cb8ab470c326ab48cb07,Artur Khachatryan <khachatryan@chromium.org>,Wed Apr 25 20:12:31 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,enabling flaky test on android build test chromeloggingcapabilitytest.testperformancelogger is not flaky anymore on android build. enabling test execution on waterfall for android builds. bug,satisfaction,4.0
129,ea94f1c38a0afb6a4729e8ffaba324be404b611a,edchin <edchin@chromium.org>,Mon May 21 23:49:06 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"add recent_tabs to showcase showcase helps to build pure ui layer components. currently, the recenttabstableviewcontroller has a mix of ui layer and model layer code. dependencies on the model layer make it difficult to reuse ui layer components. this cl begins to refactor recenttabstableviewcontroller to become pure ui layer, by adding it to showcase. bug cqincludetrybots luci.chromium.simulatorfullconfigsmaster.tryserver.chromium.simulatorcronet",satisfaction,4.0
130,3a29af35cda32ae21b6793cd940a68998fc2830a,Toni Barzic <tbarzic@chromium.org>,Fri May 11 23:20:59 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"remove getassociatedwebcontents from echoprivate implementation getassociatedwebcontents has been used in echoprivate.getuserconsent to determine to which window to attach the user consent dialog. the api function is used from a component echo extension's event page, and was relying on getassociatedwebcontents to select the active tab as the target for the dialog note that this was not always the right to use. to address this issue, the echoprivate.getuserconsent has been updated to accept tabid, which identifies the tab to use for the user constent dialog, and the extension was updated to pass the target tabid in. it should now be ok to stop depending on getassociatedwebcontentsdeprecated to select the target tab. calls from extension contexts will now require the tabid to be specified. the only circumstance the tabid can be omitted is when the function is called from a platform app window in which the sender web contents will point to the desired target for the user consent dialog.",satisfaction,1.0
131,fa744efac3f841d8be912acdffdbf550d37e2460,Noel Gordon <noel@chromium.org>,Sun May 6 23:32:32 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,is deprecated bug,neutral,7.0
132,350211de0c531b9d41ab9815c884e829580d6dbf,Hwanseung Lee <hs1217.lee@samsung.com>,Sat Jun 16 02:03:20 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,use containsvalue instead of stdfind at replace stdfind with basecontainsvalue at bug,neutral,5.0
133,3cf7a4cbf033d180866c49cceacf11d34eaf26b7,skia-chromium-autoroll <skia-chromium-autoroll@skia-buildbots.google.com.iam.gserviceaccount.com>,Mon Jun 4 23:39:49 2018 +0000,chromium/chromium,4568,2018Q2,4568 chromium/chromium 2018Q2,"roll skia de commits git log de nomerges format'ad ae s' rm dead code created with gclient setdep r skia the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .tryserver.luci.chromium.luci.chromium.luci.chromium.luci.chromium. chromium.org",frustration,5.0
134,4749da135f8f09803659d0e6a1b0828544c97a2f,Alex Clarke <alexclarke@chromium.org>,Mon Dec 10 18:42:37 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"rename sweepcancelleddelayedtasks to reclaimmemory we now also call maybeshrinktofit on all queues. this should reduce immediate task related memory consumption after loading. bug ,",satisfaction,2.0
135,35c76d4b9f57f9cbce2625426d7db68f5637e066,Mike Dougherty <michaeldo@chromium.org>,Tue Nov 27 20:59:45 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,remove usage of noop macro define_web_state_user_data_key. this cl removes macro usage from . this cl was uploaded by git cl split. chromium.org bug,satisfaction,7.0
136,9ce5a6743ef251e6509ff1eae579367fe7485964,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Fri Nov 2 03:01:04 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"roll catapult bdbdcc commits git log bdbdcc nomerges format'ad ae s' revert adb commands should only retry errors, not exceptions. created with gclient setdep r catapultcc the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .chromium.luci.chromium.luci.chromium.luci.chromium. bug",frustration,7.0
137,1f97a5535c2a2f9a03c97dc201780a54b927a01b,Heng-Ruey Hsu <henryhsu@chromium.org>,Tue Dec 11 16:54:37 2018 +0800,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"generalize downloads folder for external file system after myfiles feature is enabled in chromium, downloads folder is under myfiles instead of root. bug",frustration,6.0
138,2d026cf8b5e9f9f8c03d2019430ca5b942428df2,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Wed Dec 12 10:44:23 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"roll skia bbaadceb commits git log bbaadceb nomerges format'ad ae s' update go_deps asset roll beadaffbad commits created with gclient setdep r skiaadceb the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. .chromium.luci.chromium.blinkrelluci.chromium.chromeoscompiledbgluci.chromium.luci.chromium.luci.chromium. chromium.org",neutral,6.0
139,895bd797322a487584fe9f1b191847d26f4c32fd,Sunny Sachanandani <sunnyps@chromium.org>,Thu Nov 15 01:36:59 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"reland viz dcheck that clients don't send empty frames this is a reland of bfdbaaccaefa original change's description viz dcheck that clients don't send empty frames the service rejects a compostiorframe if it has an empty render pass list, or an empty output rect. add a dcheck to ensure that clients don't send these.",caution,4.0
140,f144f4a9852b708a30e8710f66ff57c55ce3cfa1,Nektarios Paisios <nektar@chromium.org>,Fri Oct 26 18:16:01 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"reland adds code in viewaccessibility to manage the focus of axvirtualview descendants this is a reland of cbccabacaf chromium.org original change's description adds code in viewaccessibility to manage the focus of axvirtualview descendants also renamed some methods to make interface more consistent. in preparation for more changes in axvirtualview. chromium.org,",satisfaction,2.0
141,1aaf9f1ecd500142cb76c4ec0fbe2cd4963e5dbe,Alex Clarke <alexclarke@chromium.org>,Tue Dec 11 15:07:20 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,ensure minidumps capture lazilydeallocateddeque size as a temporary measure add an aliased variable to record the size of the queue. bug,caution,4.0
142,62d2bd99255082967be127282cd2ecc0ce5fcc7e,Shik Chen <shik@chromium.org>,Mon Oct 15 17:22:30 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"wait until vivid is detected in chromeos vm bug capture_unittests vivid enabled on generic vm, and verify vivid is used when it's enabled. capture_unittests on teemo a chromebox, and verify it doesn't wait for camera.",neutral,5.0
143,db38cfa32f83cb5201b4dbcb0c7c049678010af6,Luciano Pacheco <lucmult@chromium.org>,Fri Nov 2 00:30:52 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"refactor directorytree part of this is part of a reverted cl crrev., but this is the safe part of it. i don't expect this to cause flakiness. change updatesubdirectories use arrow function and const change error callback calling style to match the same style used by success callback without if. change check from isfakeentry to check for presence of the method that's used createreader. change the sorting to be an method, so it can be customized per subclass, later it will be used to sort my files to show linux and play files at the bottom. no changes in behaviour for users.",caution,3.0
144,84d0845e7e0f0973109ed05420815e9267f6119d,Xida Chen <xidachen@chromium.org>,Fri Nov 2 20:36:54 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"ack touch start from compositor instead of blink right now if there is a touch start that hits a main thread touch action region, we'd ack the touch start from the renderer and the allowed touch action is sent together with that ack. for example, when we touch a main thread touch action region, the inputrouterimpltoucheventhandled callback is executed when the browser receives the ack from the main thread. this cl changes the logic a bit without changing the behavior. specifically, we change inputhandlerproxyhittesttouchevent to return did_handle_non_blocking instead of did_not_handle, which means that we are now sending the ack for the touch start form the compositor instead of the main thread. with this change, inputrouterimpltoucheventhandled callback will be executed when the browser receives the ack from the compositor, and that the touch action computed from the main thread may be unknown. once the toucheventhandled callback is executed, it calls the processtouchack which processes the touch ack and generates gesture events from them. to keep the same behavior as what it is now, this cl queues all the generated gesture events until the effective touch action is received. to preserve the touch ack timeout behavior, what we did in this cl is that when calling processtouchack, don't stop the timeout monitor if the main thread touch action is not received yet. when the main thread touch action is received, then stop the timeout monitor. we can use the existing tests to make sure that there is no behavior change. bug",neutral,5.0
145,1873214fbb3cb8507df7a80fe2f3000da7aae1a0,Xiaocheng Hu <xiaochengh@chromium.org>,Tue Oct 23 22:00:07 2018 +0000,chromium/chromium,4568,2018Q4,4568 chromium/chromium 2018Q4,"fix baseline of beaconbasic.html on android the test has an androidspecific baseline, which was missed out in crrev., causing bot failures. this patch fixes it. notry true tbr bug ,",satisfaction,5.0
146,29d7b36ce98eb1bfba2c5c9b2ea0d58ff778a2d4,Dan Murphy <dmurphy@ti.com>,Wed Sep 23 08:25:55 2020 -0500,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,dtbindings add shutdown gpio property add the shutdowngpios property to the yaml to define the gpio that can be used to place the device in shutdown mode or wake the device up. murphy link brown,neutral,4.0
147,0255b1e3d84962f8f8d19f9e2768a8a4f0de7487,Stanley Chu <stanley.chu@mediatek.com>,Fri Jul 24 22:16:27 2020 +0800,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"scsi ufsmediatek prevent lpm operation on undeclared vcc in some platforms, vcc regulator may not be declared in device tree to keep itself alwayson. in this case, hbavreg_info.vcc is null and shall not be operated during any flow. prevent possible null hbavreg_info.vcc access in lpm mode by checking if it is valid first. link altman chu k. petersen",caution,3.0
148,0d982de3e27e8091dfa62368cd3eefbc7c17c8a2,Peng Ma <peng.ma@nxp.com>,Tue Aug 18 14:36:09 2020 +0800,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"rtc fslftmalarm update acpi device id original device id would conflict with crypto driver, change it. ma wang belloni link",frustration,6.0
149,e093256d14fbf9e8aaf02ed0ac69087eef6792bd,Mark Brown <broonie@kernel.org>,Wed Aug 19 12:48:37 2020 +0100,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,selftests add build and documentation for fp tests integrate the fp tests with the build system and add some documentation for the ones run outside the kselftest infrastructure. the content in the readme was largely written by dave martin with edits by me. brown martin khan link deacon,neutral,4.0
150,6259c8441c4de3f1727a0db61465a8dc8f340c05,Peter Ujfalusi <peter.ujfalusi@ti.com>,Fri Sep 11 21:47:39 2020 -0700,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,dmaengine ti udmaglue fix parameters for rx ring pair request the original commit mixed up the forward and completion ring ids for the rx flow configuration. koul strashko fixes bab dmaengine ti udma switch to k_ringacc_request_rings_pair ujfalusi shilimkar,neutral,4.0
151,3558698b9fdff6d9097c48e5b9eab81a35d6afdf,Oleksij Rempel <linux@rempel-privat.de>,Fri Sep 11 10:25:27 2020 +0200,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,net add ethtool support add basic ethtool support. the functionality was tested on soc. rempel kicinski s. miller,satisfaction,1.0
152,d958e343bdc3de2643ce25225bed082dc222858d,Randy Dunlap <rdunlap@infradead.org>,Thu Jul 30 18:42:33 2020 -0700,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,block blktimeout delete duplicated word drop the repeated word request. change to the correct kerneldoc notation for function name separtor. dunlap cc jens axboe cc axboe,neutral,7.0
153,12923365eb3db5710adcd6abb69e93899e003554,Tom Parkin <tparkin@katalix.com>,Sat Aug 22 15:59:01 2020 +0100,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"don't log data frames had logging to trace data frame receipt and transmission, including code to dump packet contents. this was originally intended to aid debugging of core packet handling, but is of limited use now that code is stable. parkin s. miller",satisfaction,5.0
154,900ffe39fec908e0aa26a30612e43ebc7140db79,Kees Cook <keescook@chromium.org>,Sat Sep 19 01:09:36 2020 -0700,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"fix typo in comments for syscall_enter_from_user_mode just to help myself and others with finding the correct function names, fix a typo for usermode vs user_mode. cook petkov link",satisfaction,2.0
155,92e67a9c4f206dc9c859c405e67448a8be59ac5d,Katsuhiro Suzuki <katsuhiro@katsuster.net>,Sat Jul 25 00:59:33 2020 +0900,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,asoc convert everest binding to yaml this patch converts everest semiconductor low power audio codec binding to dt schema. suzuki herring link brown,neutral,5.0
156,d5f1e6a2bb61db8d4bd269edac8b52a853b48ce8,Dong Aisheng <aisheng.dong@nxp.com>,Wed Jul 29 16:00:15 2020 +0800,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"clk imx lpcg add parsing clocks from device tree one lpcg controller supports up to clock outputs while each of them is fixed to bits. it supports only gating function with fixed bits. so we can use the clkindices to fetch the corresponding clock idx from device tree. with this way, we can write a generic lpcg clock drivers. this patch add that support to parse clocks from device tree. cc shawn guo cc sascha hauer cc michael turquette boyd aisheng guo",neutral,1.0
157,9a36c6fd09952e1018cca734871ff43d850dd971,satya priya <skakit@codeaurora.org>,Mon Sep 14 19:28:35 2020 +0530,torvalds/linux,4589,2020Q3,4589 torvalds/linux 2020Q3,"dts qcom add wakeup support for bt uart on idp add the necessary pinctrl, interrupt property and a suitable sleep config to support bluetooth wakeup feature. gpio mode is configured in sleep state to drive the line low. if qup function is selected in sleep state, uart is pulled high during suspend and bt soc not able to send wakeup bytes. kaehlcke anderson priya link andersson",frustration,3.0
158,fea3a60a377dc6f2314b4f558432a1a7442bbd94,Fady Samuel <fsamuel@chromium.org>,Thu Jul 19 03:41:25 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,surfacerange add convenience methods for debugging add some methods to allow printing out surfaceranges. bug none cqincludetrybots luci.chromium.,neutral,5.0
159,03123704059d389882458a7161e99fb2169e65bf,Michael Lippautz <mlippautz@chromium.org>,Tue Sep 25 11:13:40 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,layouttests move internal gc functions to .js bug,neutral,4.0
160,65bdc77cd0d39b67ac54ad527e90b7b4d0a5ee3d,liberato@chromium.org <liberato@chromium.org>,Wed Aug 8 21:00:14 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,"release codec buffers during drain in mcvd. previously, mediacodecvideodecoder would only release codec buffers when starting a drain if it wasn't going to elide the drain itself. however, since the drain elided or not is going to be followed by a codec flush or destruction, we still invalidate any unrendered output buffers. while this isn't techincally required, avda did it and seems to have much fewer codec hangs. bug cqincludetrybots luci.chromium.luci.chromium.luci.chromium.luci.chromium.",caution,5.0
161,ada8f6dbc7b47747b3916da418d5cd7e0cf32db1,Kevin McNee <mcnee@chromium.org>,Tue Jul 17 17:47:32 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,link to touchpad pinch zoom design doc in readme bug,neutral,7.0
162,f3e8a3f52a8270f98567a6149d845e3cf8ba02e9,Kenneth Russell <kbr@chromium.org>,Sat Jul 28 02:44:12 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,disable webrtc for viz_content_browsertests on . pass disablehwithopenhffmpeg to viz_content_browsertests on chromium. tests similarly to how it's being done for content_browsertests. tbr bug,caution,4.0
163,dab534357763fbe122191d6c7f749816e2c08696,Mikel Astiz <mastiz@chromium.org>,Mon Jul 16 07:14:05 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,"revert snaps after scrollbar clicking. this reverts commit edfceaabbcafddcadd. reason for revert suspect for webkit_layout_tests consistently failing, e.g. original change's description snaps after scrollbar clicking. after user clicking on the scrollbar's track or arrows, we should snap to the closest snap position of the container. this is done by simply moving snapafterscrollbardragging from scrollableareamousereleasedscrollbar up to scrollbarmouseup. this patch also rewrites the previous snapsafterscrollbardragging.html test using the gestureutil.js, and adds the new clicking tests to it as well. bug cqincludetrybots luci.chromium.master.tryserver.",neutral,5.0
164,25a1b05e17903e7284f7a005e268cfb4b9918e36,James Wallace-Lee <jamwalla@chromium.org>,Tue Jul 24 00:06:31 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,chromeaccessibility save internal checkbox as preference saves the option to show the internal accessibility tree as the preference kshowinternalaccessibilitytree.,neutral,7.0
165,1f9155f1145f5bc38504c297655430fa9b217970,chromium-internal-autoroll <chromium-internal-autoroll@skia-corp.google.com.iam.gserviceaccount.com>,Fri Sep 21 10:10:53 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,"roll srcinternal dbcfbc commits created with gclient setdep r srcinternalfbc the autoroll server is located here documentation for the autoroller is here if the roll is causing failures, please contact the current sheriff, who should be cc'd on the roll, and stop the roller if necessary. chromium.org",frustration,5.0
166,4caeecdd685239c61ec9b6b2d5285ceaebf1a510,Evan Stade <estade@chromium.org>,Mon Sep 10 20:11:50 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,mash browser frame enable tests for ktopviewinset. bug,neutral,6.0
167,f48cf76c2016e3dd04ea9be5dcea608971cb8e6f,Johannes Henkel <johannes@chromium.org>,Sat Aug 4 07:01:29 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,"remove the inspectoragentstatemapfieldclearall method. use clear instead. and for the dom_debugger_agent, use clearallfields. this does reset the boolean field pauseonallxhrs as well, which is probably desired. bug",satisfaction,3.0
168,5bdfb585c5afb7b421464e2970634206f3b672d4,Koji Ishii <kojii@chromium.org>,Wed Sep 12 15:05:38 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,flagspecific rebaseline for image failures rebaseline differences by a manual review of build . chromium.org cqincludetrybots luci.chromium.,neutral,4.0
169,35264e311018e40cd631483b8d5477f9224bcb9c,Lukasz Anforowicz <lukasza@chromium.org>,Mon Aug 20 17:54:31 2018 +0000,chromium/chromium,4568,2018Q3,4568 chromium/chromium 2018Q3,adjust test expectations siteperprocess is no longer differs on official bots removed differences between and official bots by removing fieldtrial_testing_config.json entries related to siteperprocess and making siteperprocess the default even in absence of field trials. this makes it possible to remove the if definedofficial_buildrelated expectations from webdriversiteperprocesspolicybrowsertest. removed the not_site_per_process_browser_tests step from the bots. this makes it possible to remove the kdisablesiteisolationtrialsrelated expectations from webdriversiteperprocesspolicybrowsertest bug tbr,caution,5.0
170,d7442ba13d62de9afc4e57344a676f9f4623dcaa,Martin Fuzzey <martin.fuzzey@flowbird.group>,Fri Jun 12 12:50:33 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,regulator fix suspend and warning. commit fce regulator fix suspend converted the regulators to use a common corrected suspend bit setting but one of regulators slipped through the crack. this means that the original problem was not fixed for and also leads to a warning found by the test robot. regulator. warning initialized field overwritten fix this by converting that regulator too like the others. fixes fce regulator fix suspend reportedby kernel test robot fuzzey link brown,caution,2.0
171,03e909acd95afe5077e61fd2a9968000c329f7db,Sebastian Reichel <sebastian.reichel@collabora.com>,Wed Apr 15 19:27:25 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,simple add support for auo gean. panel add timings for the auo gean. panel. reichel ravnborg link,neutral,6.0
172,aad4b4d15f30de087c5972cfb767fadb5dbc3c52,Christoph Hellwig <hch@lst.de>,Sat Jun 20 09:13:02 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"scsi libata fix the ata_scsi_dma_need_drain stub we not only need the stub when libata is disabled, but also if it is modular and there are builtin sas drivers which can happen when scsi_sas_ata is disabled. link fixes bfde scsi wire up ata_scsi_dma_need_drain for sas hba drivers hellwig k. petersen",caution,3.0
173,7740dda5b465b67df7cbe3c4c2b96c10e874b09f,Linus Walleij <linus.walleij@linaro.org>,Sat May 9 00:37:04 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"merge tag 'shpfcfor.' of into devel pinctrl shpfc updates for . fix swio pins on , add missing bindings to maintainers.",neutral,7.0
174,93a5b668806c1d868f7f9f0438321006200c049f,Anilkumar Kolli <akolli@codeaurora.org>,Tue Jun 16 11:27:34 2020 +0300,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,rename default board file rename default bdf to make it consistent with board.bin naming. kolli valo link,neutral,7.0
175,b8fc22803e594dee6597de4c81ccab5b37abecbb,Arnaldo Carvalho de Melo <acme@redhat.com>,Tue Apr 14 09:21:56 2020 -0300,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"tools headers kvm sync .h with the kernel sources to pick up the changes from acf kvm ppc hv add a capability for enabling secure guests cbdbfc kvm enable dirty log gradually in small chunks daaecdbf kvm protvirt introduce and enable kvm_cap_s_protected eddc kvm protvirt uv calls in support of , e kvm protvirt introduce instruction data area bounce buffer bfec kvm protvirt add initial vm and cpu lifecycle handling so far we're ignoring those arch specific ioctls, we need to revisit this at some time to have arch specific tables, etc grep kvm_ioctl.sh egrep v armppc_et_debugregsxsavetsc_khzcreate_spapr_tce_ this addresses these build warnings warning kernel abi header at 'kvm.h' differs from latest version at '.h' diff u kvm.h .h cc adrian hunter cc christian borntraeger cc janosch frank cc jay zhou cc jiri olsa cc namhyung kim cc paolo bonzini cc paul mackerras carvalho de melo",caution,4.0
176,5679b803e44ed8947e8c2a7f44cdef1d93ea24d5,Paolo Bonzini <pbonzini@redhat.com>,Mon May 4 11:28:25 2020 -0400,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"kvm svm keep synchronized with vcpuarch. kvm_x_ops.set_dr is only ever called with vcpuarch. as the second argument. ensure that the vmcb value is synchronized to vcpuarch. on db both normal and nested and nested vmentry, so that the current value of is always available in vcpuarch the get_dr callback can just access vcpuarch. and becomes redundant. bonzini",caution,6.0
177,e913a9f5e5108b0524499dc175f184fd74d0fa64,Roland Scheidegger <sroland@vmware.com>,Tue May 12 02:27:43 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,update maintainers entry maintainer switch from thomas hellstrom to roland scheidegger lee bhende hellstrom scheidegger,neutral,2.0
178,2b01b293f359ddd67e08bbe8def42a7082310b82,Suganath Prabu <suganath-prabu.subramani@broadcom.com>,Tue Apr 28 02:45:22 2020 -0400,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"scsi capture ioc data for debugging purposes information needed to debug driver problems and firmware faults is stored in the iocs mptsas_adapter data structure. parameters such as iocfacts, ioc flags related to sge, msix, error recovery etc., performance mode type, tms, internal commands reply status, etc. are present. for debugging purposes, it is therefore helpful to be able to capture this information so that the fault can be analyzed. export the mptsas_adapter data structure in debugfs. the data is available in link prabu k. petersen",satisfaction,2.0
179,35e4be1136e69710ffe559d173c9d66ff7d32730,Vijendar Mukunda <Vijendar.Mukunda@amd.com>,Tue May 19 01:17:00 2020 +0800,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,asoc amd add acp pdm dma driver pm ops add acp pdm dma driver pm ops. mukunda bossart link brown,neutral,5.0
180,bfe3bd493b3d3f9a08d1751338ccc711840e4590,Joerg Roedel <jroedel@suse.de>,Wed Apr 29 15:37:02 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,"convert to callbacks convert the qcom iommu driver to use the probe_device and release_device callbacks of iommu_ops, so that the iommu core code does the group and sysfs setup. roedel link roedel",neutral,7.0
181,96f8d30a7cb820d8704c71ef5941b872dd54e710,Benjamin Gaignard <benjamin.gaignard@st.com>,Wed May 13 16:59:30 2020 +0200,torvalds/linux,4589,2020Q2,4589 torvalds/linux 2020Q2,arm dts update nodes names for stmh pinctrl fix the nodes names to be aligned with yaml description gaignard torgue,neutral,2.0
182,187f69b644f33ff3dbec23972e3b18dcc1222930,wzang <wzang@chromium.org>,Tue Apr 25 18:20:26 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,report login.successreason in loginperformer login.successreason already exists in histograms.xml but was not used. do not report offline and online login success separately as i think it's unnecessary. reviewurl cr,frustration,5.0
183,67095448eb212b9f8e09f071515669d9618e7534,aseren <aseren@yandex-team.ru>,Tue Jun 6 11:14:12 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,"fix process_singleton_posix handling of hostname changes not deleting a stale lockfile or not killing a frozen browser. first issue . chrome is run. . hostname is changed. . chrome crashes, leaving the lock file with the old hostname. . a different chrome runs with a different userdatadir and just happens to get the same pid as from step . . chrome is run again with the original userdatadir. it sees there is a lock file with a different hostname, but sees that there is a chrome process with the same pid, so it can reach the killprocessbylockpath in the connect retry loop. in this case, lockfile is not deleted. we need to delete lock file without killing anything. second issue . chrome is run. . hostname is changed. . chrome freezes, it's still listening on the socket with the old hostname, but not responding to any messages. . chrome is run again. it can connect to the socket, but times out waiting for a response, hitting one of read timeout or write timeout killprocessbylockpath calls. in this case, we'd actually want to kill the frozen chrome in addition to deleting the lockfile, which the code currently doesn't do. cl fixes both of these issues. chromium.org, reviewurl cr",frustration,4.0
184,f51a09272db6c06dcca92fa0e2c4811dc8d5e828,pastarmovj <pastarmovj@chromium.org>,Tue Apr 25 01:33:04 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,allow sync to resume in local backend mode after it has been disabled. if sync has been disabled manually or by policy it was not resuming in local sync mode afterwards because there is no external event to trigger that. reviewurl cr,caution,7.0
185,04b1442d27ae436d542e0e2ad0a072f7d4a5ec12,John Budorick <jbudorick@chromium.org>,Thu Jun 1 00:05:24 2017 +0000,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,revert ensure the archive folder exists when saving a page. this reverts commit cbcefcabfdadbafddee. reason for revert original change's description ensure the archive folder exists when saving a page. move the logic ensuring archives directory is created from the startup of offlinepagemodel to every time saving a page. this change will also handle the directory creation gracefully to not crash chrome. bug,caution,3.0
186,3eb67a8404b818203d0498faf86438681c4a6c97,trevordixon <trevordixon@chromium.org>,Fri Jun 9 05:21:32 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,predictors create loadingdatacollector class and have observers rely on it instead of resourceprefetchpredictor. part of a refactoring effort to split resourceprefetchpredictor. reviewurl cr,satisfaction,3.0
187,08ec0ff5c352c9ab52ced3a6b44f0796530fc4a2,tzik <tzik@chromium.org>,Tue Jun 6 14:07:06 2017 +0900,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,"use oncecallback on mojo interfaces in this cl flips use_once_callback flag on the mojo code generator, and fixes all compile errors after it. after this cl, mojo interfaces in starts using baseoncecallback instead of basecallback on its return value handling. the migration recipe was convert passbyref callback objects to passbyvalue. use stdmove to forward it to other consumer, or to invoke it with callbackrun. handle wherever copies are required manually. check if the conversion doesn't change the semantics. as the transfer and invocation clobber the callback object, care about useaftermove. it's considered safe to consume almost scopedout callback. bug",neutral,3.0
188,23eb89766671bd74f9d4643ea2be4c65e81a867d,v8-autoroll <v8-autoroll@chromium.org>,Tue May 30 14:16:11 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,update to version summary of changes available at please follow these instructions for 'ing issues please close rolling in case of a roll revert this only works with a google account. .tryserver.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium. chromium.org reviewurl cr,neutral,5.0
189,60b0c7c484dcdf25c80f4038cddd9120c4e1b970,Quinten Yearsley <qyearsley@google.com>,Mon Jun 26 11:06:59 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,"put the default pr history window size in wptgithub. this cl would remove the number of prs to fetch at once constant from test_exporter and put it in wptgithub, so that this number would also be used by the importer when fetching prs. i believe that after this, the importer will be able to more accurately decide whether a chromium commit corresponds to an open or closed pr since it will fetch more prs. bug",satisfaction,4.0
190,45739334a54b563922c9af81bfa2519787d453fa,trchen <trchen@chromium.org>,Fri Apr 7 15:35:31 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,add translated rasterization support for picturelayertilingset below this cl extends picturelayertiling to support tiles rasterized with scale and translation. tilings still use only the scale factor as their key. it is an error to have tilings with the same scale but a different translation in the same picturelayertilingset. this cl implements a policy to evict old tiling when syncing from a tiling set with a slot conflict. .tryserver. reviewurl cr,neutral,4.0
191,efe47735cb33458311b6d71a3ff47ff65f4200e8,calamity <calamity@chromium.org>,Tue Jun 6 23:44:58 2017 -0700,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,"add toasts. this cl adds a bookmarkstoastmanager element which shows toasts for the bookmark manager. toasts currently show for item deletion, copying urls, and sorting a folder. an undo button may also be shown in the toast. .tryserver.chromium. reviewurl cr",satisfaction,2.0
192,b795d8f53c5dd9940e6cb057cab69ec6bfe8d274,gambard <gambard@chromium.org>,Thu Jun 29 10:28:57 2017 +0200,chromium/chromium,4568,2017Q2,4568 chromium/chromium 2017Q2,"invalidate ntp layout when change search engine when changing the default search engine, the ntp layout changes the logo is removed, the header size is changed as we moved from framebased layout to autolayout constraints, the collection layout should be invalidate to reflect the changes in the header. the old way to updates the frame directly is removed.",caution,5.0
193,39c9f10639a3e8ead677492a7ab41cee5fa481a7,Quentin Monnet <quentin@isovalent.com>,Fri Apr 12 14:29:35 2019 +0100,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"tools bpftool reset errno for bpftool cgroup tree when trying to dump the tree of all cgroups under a given root node, bpftool attempts to query programs of all available attach types. some of those attach types do not support queries, therefore several of the calls are actually expected to fail. those calls set errno to einval, which has no consequence for dumping the rest of the tree. it does have consequences however if errno is inspected at a later time. for example, bpftool batch mode relies on errno to determine whether a command has succeeded, and whether it should carry on with the next command. setting errno to einval when everything worked as expected would therefore make such command fail echo 'cgroup tree n net show' bpftool batch file to improve this, reset errno when its value is einval after attempting to show programs for all existing attach types in do_show_tree_fn. monnet kicinski liu borkmann",frustration,2.0
194,0b156947b88956cc97015c91a37529073416381b,Thomas Gleixner <tglx@linutronix.de>,Wed May 29 16:57:39 2019 -0700,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,treewide replace with spdx rule based on normalized patterns this file is provided under the license gpl license summary this program is free software you can redistribute it and or modify it under the terms of version of the gnu general public license as published by the free software foundation this program is distributed in the hope that it will be useful but without any warranty without even the implied warranty of merchantability or fitness for a particular purpose see the gnu general public license for more details the full gnu general public license is included in this distribution in the file called copying extracted by the scancode license scanner the spdx license identifier gpl.only has been chosen to replace the in files. gleixner randal hemel zavras stewart cc link kroahhartman,neutral,1.0
195,76356a966e332fa0f70d10fd74a66d518af8ce0a,Joel Stanley <joel@jms.id.au>,Fri Apr 5 18:41:17 2019 +1030,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"drm aspeed clean up kconfig options the gfx ip is inside of the aspeed bmc soc so there is little use enabling it on a kernel that does not support aspeed. when building with compile_test the architecture many not have cma support, so to avoid breaking the build we only select these options if the architecture supports the contiguous allocator. i suspect the drm_panel came from a error. fixes fafec drm add aspeed gfx driver reportedby stephen rothwell reportedby kernel test robot stanley vetter link",caution,3.0
196,527bd754d1ffc4bbd89a33c643e74c53d713eb4e,Kefeng Wang <wangkefeng.wang@huawei.com>,Tue Apr 23 15:50:16 2019 +0800,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,rtc use dev_get_drvdata using dev_get_drvdata directly. cc alessandro zummo cc alexandre belloni cc wang belloni,neutral,7.0
197,18e8817126d2551fb9b0f90ceb6e130efc2196ca,David S. Miller <davem@davemloft.net>,Sun May 26 13:22:50 2019 -0700,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"merge branch 'addsupport' oleksij rempel says mips add support remove double union reverse christmas tree for all functions add lunn remove mii_cmd_write, the name is confusing. it is actually disables mii_cmd_read. rework set proper mask for the addr in kconfig remove mdio_bitbang ..pl it. dt define eth and mdio clocks remove module parameters return proper error value on use proper mdio clock registration add agxx_dma_wait_stop for agxx_dma_reset remove agxx_speed_str use phydevduplex instead of ag variants use warn instead of bug drop big part of agxx_phy_link_adjust drop most of agxx_do_ioctl register eth clock remove agxx_eth_no_mdio quirk. use phy_modes instead of agxx_get_phy_if_mode_name remove .ndo_poll_controller support unregister_netdev before disconnecting phy. add list of openwrt authors remove redundant phy_poll assignment use phy_attached_info instead of netif_info remove redundant netif_carrier_off on .stop. dt use ethernet instead of eth this patch series provide ethernet support for many mips based socs. i reworked driver which was previously maintained within openwrt repository. so far, following changes was made to make upstreaming easier everything what can be some how used in user space was removed. most of it was debug functionality. most of deficetree bindings was removed. not every thing made sense and most of it is soc specific, so it is possible to detect it by compatible. mac and mdio parts are merged in to one driver. it makes easier to maintaine soc specific quirks. s. miller",caution,1.0
198,fed7026adc7c3a67f992d28d7a5309ff749d3776,Andy Shevchenko <andriy.shevchenko@linux.intel.com>,Wed Apr 10 18:39:16 2019 +0300,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"gpiolib make use of enum gpio_lookup_flags consistent the library uses enum gpio_lookup_flags to define the possible characteristics of gpio pin. since enumerator listed only individual bits the common use of it is in a form of a bitmask of gpio_lookup_flags gpio_ values. the more correct type for this is unsigned long. due to above convert all users to use unsigned long instead of enum gpio_lookup_flags except enumerator definition. while here, make field and parameter descriptions consistent as well. suggestedby mika westerberg shevchenko westerberg walleij",neutral,2.0
199,e1bfa87399e372446454ecbaeba2800f0a385733,Thomas Lendacky <Thomas.Lendacky@amd.com>,Wed Jun 19 18:40:59 2019 +0000,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"create a workarea in the kernel for sme early encryption in order for the kernel to be encrypted in place during boot, a workarea outside of the kernel must be used. this sme workarea used during early encryption of the kernel is situated on a boundary after the end of the kernel text, data, etc. sections _end. this works well during initial boot of a compressed kernel because of the relocation used for decompression of the kernel. but when performing a kexec boot, there's a chance that the sme workarea may not be mapped by the kexec pagetables or that some of the other data used by kexec could exist in this range. create a section for sme in vmlinux.lds.s. position it after _end, which is after __end_of_kernel_reserve, so that the memory will be reclaimed during boot and since this area is all zeroes, it compresses well. this new section will be part of the kernel image, so kexec will account for it in pagetable mappings and placement of data after the kernel. here's an example of a kernel size without and with the sme section without vmlinux bzimage system ram eed kernel code xd ed kernel data xcea e kernel bss with vmlinux bzimage system ram cfcfd kernel code xd cfdcfeebf kernel data xcea d kernel bss lendacky petkov he hansen testedby lianbo jiang cc andy lutomirski cc brijesh singh cc h. peter anvin cc ingo molnar cc joerg roedel cc kees cook cc nick desaulniers cc peter zijlstra cc rafael ávila de espíndola cc sami tolvanen cc thomas gleixner cc link",neutral,5.0
200,6d79d86f9600510e08ad45c72b9d7e664e439e62,Christoph Hellwig <hch@lst.de>,Tue Jun 4 09:15:23 2019 +0200,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"simplify kernel_fpu_begin merge two helpers into the main function, remove a pointless local variable and flatten a conditional. hellwig petkov andrzej siewior cc dave hansen cc h. peter anvin cc ingo molnar cc nicolai stange cc rik van riel cc thomas gleixner cc ml link",frustration,1.0
201,4489da7183099f569a7d3dd819c975073c04bc72,Linus Torvalds <torvalds@linux-foundation.org>,Fri May 17 10:17:29 2019 -0700,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,merge tag 'forlinus.' of pull updates from greentime hu clean up codes and makefile fix a vdso bug remove useless files update git repo path in maintainers tag 'forlinus.' of fix vdso clock_getres maintainers update git repo path don't export lowlevel cache flushing routines arch kconfig pedantic formatting fix semicolon code style issue vdso drop unnecessary ccldoption remove unused genericy cmpxchglocal.h use the correct style for spdx license identifier remove __virt_to_bus and __bus_to_virt vdso fix and cleanup makefile add vmlinux.lds and vdso.so to .gitignore exexit remove unneeded need_resched loop remove useless definition of mmiowb removed unused thread flag tif_usedfpu,frustration,2.0
202,e244c4699f859cf7149b0781b1894c7996a8a1df,"Lee, Chiasheng <chiasheng.lee@intel.com>",Thu Jun 20 10:56:04 2019 +0300,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,"usb handle remote wakeup for lpm enabled devices correctly with link power management lpm enabled links transition to low power link states from state automatically. current hub code detects remote wakeups by checking if the software state still shows suspended, but the link has transitioned from suspended to enabled state. as it takes some time before the hub thread reads the port link state after a wake notification, the link may have transitioned from to , and wake is not detected by hub code. fix this by handling states in the same way as in wakeup handling this patch should be added to stable kernels since . where lpm was kept enabled during cc . chiasheng nyman kroahhartman",neutral,7.0
203,c1fee0c4a2ad63147a9260939114a0f78537d051,Neil Armstrong <narmstrong@baylibre.com>,Mon May 20 16:01:33 2019 +0200,torvalds/linux,4589,2019Q2,4589 torvalds/linux 2019Q2,meson update with spdx licence identifier armstrong sang,neutral,4.0
204,53da93259afe2627b3f82ca964006dc0c9c779ac,David S. Miller <davem@davemloft.net>,Sun Feb 23 16:07:31 2020 -0800,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,merge branch 'mlxswcosmeticfixes' jiri pirko says mlxsw cosmetic fixes this is a set of mainly related cosmetic fixes. no functional changes. s. miller,satisfaction,7.0
205,206bd0a735d432d8dcb8e60d1cc2f5bf9ee9aa0f,David S. Miller <davem@davemloft.net>,Mon Mar 9 18:16:06 2020 -0700,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,"merge branch 'qethnext' julian wiedmann says updates please apply the following patch series for qeth to netdev's netnext tree. just a small update to take care of a regression wrt to irq handling in netnext, reported by qian cai. the fix needs some qdio layer changes, so you will find vasily's ackedby in that patch. s. miller",satisfaction,2.0
206,5058b692c69997f9736b94df786509366c32f34d,Sean Christopherson <seanjc@google.com>,Fri Mar 20 14:28:14 2020 -0700,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,kvm vmx move vmx_flush_tlb to vmx.c move vmx_flush_tlb to vmx.c and make it noninline static now that all its callers live in vmx.c. no functional change intended. christopherson messageid bonzini,neutral,7.0
207,792a4f2ed24fcdf0a1956e84fe2a71ada318ba7c,Jason Wang <jasowang@redhat.com>,Thu Mar 26 22:01:18 2020 +0800,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,vhost allow per device message handler this patch allow device to register its own message handler during vhost_dev_init. vdpa device will use it to implement its own dma mapping logic. wang link s. tsirkin,frustration,2.0
208,2d186fcd6d8d3a493894de48611e4925ddf7b951,Abhishek Pandit-Subedi <abhishekpandit@chromium.org>,Thu Mar 19 17:07:13 2020 -0700,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,"bluetooth fix incorrect branch in connection complete when handling autoconnected devices, we should execute the rest of the connection complete when it was previously discovered and it is an acl connection. panditsubedi holtmann",neutral,2.0
209,83cf4213bafc4e3c747f0a25ad22cfbf55af7e84,Taehee Yoo <ap420073@gmail.com>,Sat Feb 1 16:43:39 2020 +0000,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,"netdevsim use __gfp_nowarn to avoid memalloc warning vfnum buffer size and binary_len buffer size is received by userspace. so, this buffer size could be too large. if so, kmalloc will internally print a warning message. this warning message is actually not necessary for the netdevsim module. so, this patch adds __gfp_nowarn. test commands modprobe netdevsim echo echo splat looks like warning cpu pid at . __alloc_pages_nodemask modules linked in netdevsim veth openvswitch nsh nf_conncount nf_nat nf_conntrack nf_defrx cpu pid comm bash tainted g b hardware name innotek gmbh , bios virtualbox rip code fe ff ff be rsp eflags rax rbx rcx rdx rsi rdi rbp dc fs fdabc cs ds es ceba bdbe f call trace ? lock_contended ? __alloc_pages_slowpath ? _kstrtoull ? alloc_pages_current kmalloc_order kmalloc_order_trace __kmalloc nsim_bus_dev_numvfs_store ? kernfs_get_active ? new_device_store ? kernfs_get_parent ? sysfs_file_ops kernfs_fop_write ? __sb_start_write vfs_write ksys_write kicinski fixes netdevsim add sriov functionality fixes cabfb netdevsim implement couple of testing devlink health reporters yoo kicinski",caution,4.0
210,90c49d6a1f2446ae61b3631b4d8950842a4b3edf,Yong Zhi <yong.zhi@intel.com>,Wed Mar 25 16:32:43 2020 -0500,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,"asoc intel sof_da_max add speaker switch add spk switch and associated widget, route to speaker amp for power saving, also remove the speaker_amp_init callback with complete separated tables for and . uday m bossart zhi link brown",neutral,7.0
211,5cde05c61cbe13cbb3fa66d52b9ae84f7975e5e6,Jakub Kicinski <kuba@kernel.org>,Mon Mar 2 21:10:58 2020 -0800,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,add missing attribute validation for channel switch add missing attribute validation for nl_attr_oper_class to the netlink policy. fixes deded introduce tdls channel switch commands kicinski link berg,neutral,6.0
212,86d7476078b87874ce5dee39cbbd094055c73d49,Sunil Goutham <sgoutham@marvell.com>,Mon Jan 27 18:35:26 2020 +0530,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,"pf tcp segmentation offload support adds tcp segmentation offload tso support. first version of the silicon didn't support tso offload, for this driver level tso support is added. goutham s. miller",satisfaction,2.0
213,d46eec8e975a8180e178e01ba505801c44bc9a6c,Arnaldo Carvalho de Melo <acme@redhat.com>,Wed Mar 4 10:29:19 2020 -0300,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,merge remotetracking branch 'urgent' into to pick up fixes. carvalho de melo,satisfaction,4.0
214,13f2e64b94eaf9131472a1102e1ee25b32e86fed,Ido Schimmel <idosch@mellanox.com>,Mon Mar 30 22:38:28 2020 +0300,torvalds/linux,4589,2020Q1,4589 torvalds/linux 2020Q1,mlxsw spectrum_trap add devlinktrap policer support register supported packet trap policers with devlink and implement callbacks to change their parameters and read their counters. prevent user space from passing invalid policer parameters down to the device by checking their validity and communicating the failure via an appropriate extack message. remove the validity checks from __mlxsw_sp_trap_policer_set schimmel pirko s. miller,caution,3.0
215,a8d338393f7ab70be591959b247e6c0e6dcf11b1,Chong Zhang <chongz@chromium.org>,Tue Sep 12 01:50:21 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,"disable unbuffereddispatch when usingsynchronouscompositing webview has different frame model and may handle events differently e.g. synchronous zoom. we don't want to enable vsyncalignedinput on webview for now, and will leave it as a separate issue as suggested in . note updated inputhandlerproxy to forward events immediately. bug",caution,4.0
216,6df9082337f66e00ef580420a265a809d22e15b0,bshe <bshe@chromium.org>,Thu Jul 13 18:27:24 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,fix webgl crash when try to open a new site which use the same gamepad bug,satisfaction,4.0
217,4c0e4cbfb52bf05fa9957e61f35efad905790fb7,Han Leon <leon.han@intel.com>,Wed Aug 23 02:56:51 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,update devicesendbuffer to avoid unnecessary vector copy makes devicesendbuffer ctor take 'const stdvector' rather than 'const stdvector' changes type of its member data_ from 'const stdvector' to 'const stdvector'. chromium.org,caution,2.0
218,7603dc313cc97e1a1674d63c72dcd9b8c4fb755a,kristipark <kristipark@chromium.org>,Thu Jul 6 22:28:22 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,trigger manual compaction bug,neutral,5.0
219,1a11ed901e72565077a6d4b86675e9715900ecf3,Andrew Grieve <agrieve@chromium.org>,Tue Aug 22 17:42:30 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,"apk_operations add commands compiledex, diskusage bug",frustration,7.0
220,33e9adfd064d2af4085944599372440e170c5b40,Hidehiko Abe <hidehiko@chromium.org>,Wed Sep 13 06:12:23 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,"move arc related prefs to arc_prefs. this is preparation to move some code from to , so that those moved code can refer prefs. trybot.",neutral,4.0
221,87cec1cd9c3d2cf845e299ffd29f2231f80130cc,kapishnikov <kapishnikov@chromium.org>,Mon Aug 28 14:50:34 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,copy predesugared cronet jars to the distribution package cqincludetrybots master.tryserver.chromium.,neutral,5.0
222,3285bf798ca08d899e0f31fe1560031390acfdc6,v8-autoroll <v8-autoroll@chromium.org>,Wed Sep 20 15:50:31 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,update to version summary of changes available at please follow these instructions for 'ing issues please close rolling in case of a roll revert this only works with a google account. .tryserver.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium. chromium.org,neutral,5.0
223,4cf85698736a3f277db8cc2f06ab18226e79a94b,Ian Vollick <vollick@chromium.org>,Mon Jul 31 19:25:15 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,"support rounded rects for all textured elements with this change, external textured rects are handled the way that textured rects are handled. i have not, in this patch, moved the shaders out of this file, but i did rearrange them to keep related shader pairs together. this also allowed the contentelement to handle its own rendering, so that fill type was eliminated. bug none",satisfaction,5.0
224,89a278c8a89ebaaa6a941166672c7ead4f019709,Gauri Manikpure <gmanikpure@chromium.org>,Wed Jul 19 00:18:24 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,disabling tests on android chromium head. bug,neutral,6.0
225,34ac1f469cc65e9f44d7b07f7c7d905825c34b8a,Aaron Leventhal <aleventhal@chromium.org>,Fri Sep 8 01:59:50 2017 +0000,chromium/chromium,4568,2017Q3,4568 chromium/chromium 2017Q3,space nodes should be exposed consistently regardless of where line breaks fall bug none,frustration,2.0
226,43c2bec53d9206f8bf281a7d859afb8b6ed2d397,Luna Lu <loonybear@chromium.org>,Tue Nov 7 18:06:39 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,feature policy onion soup step remove unnecessary layer in platform.h previously needed for type conversion see feature policy onion soup at see feature policy onion soup at see feature policy onion soup at bug,neutral,7.0
227,0b58b7d1bd47f22453023055f0acdce0a7b13c9a,Mounir Lamouri <mlamouri@chromium.org>,Mon Nov 20 13:07:22 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,media capabilities allow api to be used via origin trial. bug,neutral,5.0
228,f9cc077c60117c3c16fce8d37b04de384200824f,Sylvain Defresne <sdefresne@chromium.org>,Tue Nov 14 12:28:26 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,allow webstateobserver to observe n webstates . convert forminputaccessoryviewtabhelper to directly track registration with the observed webstate instead of relying on the deprecated code in webstateobserver. bug cqincludetrybots master.tryserver.chromium.simulatorcronetmaster.tryserver.chromium.simulatorfullconfigs,neutral,5.0
229,62855fe8d5f0274a2e544e0268e2b31d058061cd,Nick Carter <nick@chromium.org>,Wed Nov 29 00:17:17 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,remove origin_pid from download split off from bug,neutral,4.0
230,61453dff32d108bb227fe1f9ee024b70fae612a4,Yuki Shiino <yukishiino@chromium.org>,Mon Dec 11 08:09:17 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,"makes navigatorusermediasuccess,errorcallback callback functions. converts navigatorusermediasuccesscallback and navigatorusermediaerrorcallback into callback functions as the spec specifies. bug ,",frustration,3.0
231,e9d9276f01cc151c9718ec82cd5ee8ff7f07fde2,Jiaquan He <hejq@google.com>,Tue Nov 21 22:32:01 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,remove applistitemlistobserver from applistmodelbuilder. the interface is not used. bug,neutral,7.0
232,91cd26551327a00234dbe51bce1acddca6d1fd75,Piotr Swigon <piotrs@chromium.org>,Thu Oct 5 07:02:43 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,removes webappactivity's tabobserver before tab reparenting. this fixes a problem where navigating after tab reparenting could cause webappactivity's tabobserver to interact with destroyed activity and crash chrome due to npe. bug,satisfaction,6.0
233,99f2c57cf39521324b2d9056616940883d0be820,Matt Reynolds <mattreynolds@google.com>,Thu Oct 12 22:11:42 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,"add product ids for xbox one gamepads on mac in chrome for mac, when xbox gamepads are connected over usb but no driver is installed, chrome uses an internal driver to read button and axis data from the gamepads. the internal driver recognizes product and vendor ids for the xbox usb gamepad and xbox one gamepad version, but fails to recognize the newer xbox one version or one s gamepads because they advertise different product ids. this cl adds these product ids so the gamepads can be used in chrome even when a driver is not installed. it also modifies the xbox one initialization packet so it functions correctly with newer xbox one gamepads older gamepads are unaffected. and one more unrelated fix the product and vendor id fields were reversed when creating the gamepad id string for xbox controllers.",satisfaction,3.0
234,d8a3f543e6b65c68707132353c344e14024107aa,Vaclav Brozek <vabr@chromium.org>,Thu Nov 16 14:21:13 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,"split kpasswordimportexport feature into two while importing and exporting of passwords are closely related, the two features are to a significant extent independent, as is their development. in particular, the export feature has its own merits even in the temporary absence of the importing counterpart. to allow flexible scheduling of work and launching of the different parts in different milestones, the existing kpasswordimportexport feature is gettign split into two, one for import, one for export. bug cqincludetrybots master.tryserver.chromium.",satisfaction,5.0
235,0657d7be268ad57cce7c9ea889e8f979d6333fb9,Varun Khaneja <vakh@chromium.org>,Tue Nov 14 01:08:41 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,change experiment name to make it consistent with bug,neutral,1.0
236,635b2ea321b23a526ce1e3e92c6bc24fa067b308,scypher <scypher@google.com>,Fri Nov 3 23:32:07 2017 +0000,chromium/chromium,4568,2017Q4,4568 chromium/chromium 2017Q4,added new update engine error codes from error_code.h,satisfaction,7.0
237,72a299ffd36a88fb88797946a396fdf123c53f9f,dmazzoni@chromium.org <dmazzoni@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jun 19 23:40:08 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,fix interface in views accessibility. this was accidentally broken in when i added support for the iaccessible_ interface i got the confusing com_interface_entry syntax subtly wrong. review url dcbdfc,frustration,3.0
238,e56975691186fba63a20fa73dc0b8d245c86ca07,hong.zheng@intel.com <hong.zheng@intel.com@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Apr 25 08:55:49 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,"cache total_delayable_count for in_flight_requests in resourcescheduler in resourceschedulergetnumdelayablerequestsinflight, total_delayable_count has no relation to active_request_host, so we do not need to compute it for each request. the patch can boost browsingbench workload performance. review url dcbdfc",satisfaction,2.0
239,0823c68db6cb9be5975740a6cbf1ac719c944bc9,grt@chromium.org <grt@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jun 13 22:23:47 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,safe browsing incident reporting service. review url dcbdfc,neutral,7.0
240,5585bfb43e3643a373de51f15ab550bf9d5031cd,jbroman@chromium.org <jbroman@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed May 21 23:59:01 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,remove webcrypto_hmac_key_has_length. this is no longer needed since month ago review url bb,frustration,2.0
241,cbdc38e51fd9c5705d259fe5ccc093aa9bab346b,ericwilligers@chromium.org <ericwilligers@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Apr 1 04:40:23 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,"web animations expose timeline currenttime in idl animationtimeline has currenttime of type double the time value for this timeline. web animations spec, section . the animationtimeline interface review url bb",neutral,4.0
242,b6f34fbeb011683117b33639ca78d66ff32d5bfd,fgorski@chromium.org <fgorski@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu May 22 23:08:04 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,revert reland linux window control alignment reland linux window control alignment modifying customframeview to layout window controls based on user configurations. for linux begin observing the configs and changes. for other systems fall back on a default ordering. update tests that were originally missed. original review revert review revert revert of linux aura task manager frame buttons misaligned this reverts commit . review url chromium.org review url dcbdfc,frustration,3.0
243,95a8c3a94ba679a75c7d2e90af67c8dfa2d81142,aandrey@chromium.org <aandrey@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu May 15 15:19:43 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,devtools allow pinning lossless objects printed to console. for nonlossless it already works via objectpropertiessection. we should do the same for lossless objects. review url bb,neutral,7.0
244,dfb4a9d16122d903d026b8bba069ca144b8b729c,alekseys@chromium.org <alekseys@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jun 5 21:44:45 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,convert local printer capabilites to cdd format to unify with cloud printers and pdf printer. this is a necessary step for adding paper size capability to local printers. review url dcbdfc,frustration,7.0
245,065e7ed91895afaead1a6feffd0911c728d0d3c5,thestig@chromium.org <thestig@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Jun 9 21:49:09 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,"revert ensure that inprocess plugins can't destroy them ensure that inprocess plugins can't destroy themselves by closing a urlloader previously inprocess plugins could close the main urlloader, which could result destruction of themselves. this only happens inprocess because calling urlloader.close results in synchronously calling in to blink, whereas the call is asynchronous due to ipc when oop. this is fixed here by adding a hack to the inprocess router. we should probably post every message to the message loop, but there is a chance this might break something and we will be removing inprocess plugins altogether soon. there are also two other related bugs this fixes the pepperplugininstanceimpldiddatafromweburlresponse could be called after pepperplugininstanceimpldelete has been run, in which case the plugin instance may also be destroyed, so we should not run handledocumentload in that case. the instance may be destroyed before the pepperurlloaderhost so we need to check if it is null. review url chromium.org review url dcbdfc",caution,2.0
246,0ae5be32598989d1ee9b0d3536f0ce0544a1e1fa,pavely@chromium.org <pavely@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue May 20 06:14:54 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,invoke attachmentuploader and update attachmentids. when genericchangeprocessor calls attachmentservicestoreattachments attachmentservice invokes attachmentuploader to upload attachments. when attachment gets uploaded attachmentservice invokes attachmentservicedelegateonattachmentuploaded. genericchangeprocessor implements attachmentservicedelegate for now. when attachment is uploaded it call writetransaction to update entries referring this attachment with new attachment id. chromium.org review url dcbdfc,neutral,6.0
247,1c8c702d6510886e0ff651a0c1678d8f94d40865,vogelheim@chromium.org <vogelheim@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Apr 10 11:39:44 2014 +0000,chromium/chromium,4568,2014Q2,4568 chromium/chromium 2014Q2,replace unsafepersistent with persistentvaluevector. depends on bug url bb,neutral,4.0
248,83d80b20ca438399756aed6e61e3f78bbb302b21,Vladimir Levin <vmpstr@chromium.org>,Mon Jan 8 15:47:53 2018 -0800,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"svg ensure that turbulence filter doesn't taint origin. since feturbulence doesn't take any inputs and doesn't taint origin, we can always say that the element doesn't taint origin. this ensures that we can use turbulence with a displacement filter. this patch adds the override for taintsorigin and a layout test to verify that turbulence is correctly applied with displacement. chromium.org cqincludetrybots master.tryserver.master.tryserver.chromium.",caution,7.0
249,4073666cea48f3dee77e27022a137577621029ff,Alexander Shalamov <alexander.shalamov@intel.com>,Fri Jan 19 08:17:14 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"add site settings entry for sensors this cl adds sensors entry to the site specific settings as well as to the global settings. access device's sensors is enabled by default and allows users to disable access to device's sensors if needed. in a followup cls, pageinfo, disclosure ui and omnibox indicators would be added. visibility of the new settings entry is controlled by kgenericsensorextraclasses feature flag. bug cqincludetrybots master.tryserver.chromium.",caution,7.0
250,efe133060a2337440c35e658ac77a74feb83f787,Yuwei Huang <yuweih@chromium.org>,Wed Mar 21 20:44:19 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"fix a crash when session is disconnected while the cursor is still flinging the issue is that disconnectfromhost invalidates gestureinterpreter before clientgesture is destroyed which is destroyed when the host view is removed. if the user is interacting with the view after gestureinterpreter is destroyed but before the view is removed then clientgesture will call gestureinterpreter's methods on null, which crashes the app. this cl fixes this by always checking _client and _client.gestureinterpreter before using them. bug",caution,2.0
251,f87cca5c9ceae85dbd39c92d51d55a674209d22d,Nate Fischer <ntfschr@chromium.org>,Fri Mar 16 20:56:29 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"aw modify test for plznavigate no change to production code. this test was previously modified to anticipate the behavior change for loaddatawithbaseurl namely, that we now call shouldinterceptrequest caused by plznavigate, with backwards compatibility for the old code path. this removes the support for the old code path, and asserts the new behavior. as with this leaves a todo to actually assert the url intercepted for the main resource, since this value is not yet finalized. bug test run_webview_instrumentation_test_apk f awcontentsclientshouldinterceptrequesttesttestbaseurlofloaddatasentinrefererheader",neutral,4.0
252,848ef69a5ef32d54882d9716193a4c1d467749a2,Allen Bauer <kylixrd@chromium.org>,Thu Mar 8 23:45:29 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"don't use the odd yellowish highlight rect around the whole browseractionscontainer. instead, highlight each button as needed. chromium.org bug",frustration,1.0
253,c733f289533b9057cc520fb19df90dec4ef34bee,Patrik Höglund <phoglund@chromium.org>,Fri Mar 23 08:40:45 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,revert add proprietary_codecs to webrtc win builders. this reverts commit . reason for revert breaks webrtc win builder original change's description add proprietary_codecs to webrtc win builders. this should get webrtc perf tests running again. bug,frustration,4.0
254,aa1e78d26a25a7dcc98d995e671295aaf27f85e8,Michael Thiessen <mthiesse@chromium.org>,Tue Jan 16 17:03:47 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"fix black screen when clicking link in reader mode added a helper function for updating the windowandroid that refreshed its visibility. however, calling this during compositor initialization was leading to a black screen when exiting reader mode, so revert to not updating visibility mode during initialization. bug",frustration,1.0
255,c3c5b11d11f96e44c3762d17227bd8b27ba2611e,Eric Willigers <ericwilligers@chromium.org>,Fri Jan 12 03:58:07 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"css shapes wpt for shape property parsing web platform tests for parsing of shapeimagethreshold shapemargin shapeoutside blink and safari fail to reject shapeoutside ellipse at i.e. blink and safari support singleradius ellipse, contrary to spec. requested csswg discussion blink and safari fail to accept shapeoutside crossfadeurl green this is a known issue we haven't unprefixed webkitcrossfade edge, firefox don't support the css shapes properties.",frustration,5.0
256,831cd095ae74e5e7e614b2c74eb51b6c6a8df69c,chromeos-commit-bot@chromium.org <chromeos-commit-bot@chromium.org>,Thu Jan 4 07:37:58 2018 -0800,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,automated commit committing new lkgm version for chromeos.,satisfaction,3.0
257,8075b262cc3d1d5f4e178d70e3bc5cf1c4c861e5,Francois Doray <fdoray@chromium.org>,Thu Mar 29 21:06:16 2018 +0000,chromium/chromium,4568,2018Q1,4568 chromium/chromium 2018Q1,"increase the number of times that occlusion can be recomputed by aurawindowocclusiontracker. a change to the window tree can cause occlusion to be computed. if a windowdelegate changes the window tree when it is notified that the occlusion of its window changed, occlusion has to be computed again. the number of times that occlusion can be recomputed before it has to be stable was previously set to . this cl increases it to to support this case shos tab's webcontents compute occlusion show modal dialog's webcontents webcontentsmodaldialogmanager compute occlusion show modal dialog's renderwidgethostviewaura compute occlusion !! once showing or hiding a webcontents no longer involves calling showhide on the aurawindow of a renderwidgethostviewaura, the value can be changed back to . bug",neutral,4.0
258,e45ed9435fda13d418872260d510eb01f23aa5d0,Alex Deucher <alexander.deucher@amd.com>,Fri Oct 4 10:17:05 2019 -0500,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"add supports_baco callback for vi asics. baco bus active, chip off check the baco capabilities from the powerplay table. quan deucher",neutral,3.0
259,ba5a5615d54f8adfeb4edd005bbd0dfeb65feb9f,Marcel Ziswiler <marcel.ziswiler@toradex.com>,Sat Oct 26 11:04:02 2019 +0200,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"dts freescale add initial support for colibri this patch adds the device tree to support toradex colibri a computer on module which can be used on different carrier boards. the module consists of an nxp i.mx family soc either i.mx or , a pmic, a fastethernet phy, or gb of ram, some level shifters, a micron emmc, a usb hub, an resistive touch controller, an audio codec and onmodule csi as well as dsilvds ffc receptacles plus an optional fi module. anything that is not selfcontained on the module is disabled by default. the device tree for the colibri evaluation board includes the module's device tree and enables the supported peripherals of the carrier board the colibri evaluation board supports almost all of them. so far there is no display or usb functionality supported at all but basic console uart, emmc and ethernet functionality work fine. ziswiler suvorov guo",caution,2.0
260,dca147b3dce5abb5284ff747211960fd2db5ec2e,Maxim Mikityanskiy <maximmi@mellanox.com>,Thu Oct 31 09:39:34 2019 +0200,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"rename hw_modify to preactivate mlxe_safe_switch_channels accepts a callback to be called before activating new channels. it is intended to configure some hardware parameters in cases where channels are recreated because some configuration has changed. recently, this callback has started being used to update the driver's internal mlxe_state_xdp_open flag, and the following patches also intend to use this callback for software preparations. this patch renames the hw_modify callback to preactivate, so that the name fits better. mikityanskiy toukan mahameed",satisfaction,2.0
261,94e44b9ca52a72cddd07111a8beb12a2f217c6a2,Arnaldo Carvalho de Melo <acme@redhat.com>,Mon Nov 4 16:52:19 2019 -0300,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"perf annotate stop using mapgroups, use map_symbolmg instead these were the last uses of mapgroups, next cset will nuke it. cc adrian hunter cc andi kleen cc jiri olsa cc namhyung kim link carvalho de melo",neutral,7.0
262,f2988e67144a263e33aa3b916457bf3095288c94,Yongqiang Sun <yongqiang.sun@amd.com>,Fri Oct 18 18:24:59 2019 -0400,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"display optimize bandwidth after commit streams. system is unable to enter si due to display_off_mask not asserted in smu. optimized bandwidth should be called paired and to resolve unplug display underflow issue, optimize bandwidth after commit streams is moved to next page flip, in case of si, there is a change for no flip coming causing display count is in smu side. add optimize bandwidth after commit stream. sun cheng lakha deucher",frustration,3.0
263,4e7120d79edb31e4ee68e6f8421448e4603be1e9,Eric Auger <eric.auger@redhat.com>,Fri Nov 8 16:58:03 2019 +0100,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"d fix qi_dev_iotlb_pfsid and qi_dev_eiotlb_pfsid macros for both pasidbaseddevicetlb invalidate descriptor and devicetlb invalidate descriptor, the physical function sourceid value is split according to this layout pfsid is set at offset and pfsid is put at offset . fix the part laid out at offset . fixes fe d add definitions for pfsid auger pan cc . baolu roedel",caution,5.0
264,768ea88bcb235ac3a92754bf82afcd3f12200bcc,Lyude Paul <lyude@redhat.com>,Fri Nov 15 14:57:13 2019 -0800,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"input synaptics enable rmi mode for extreme generation just got one of these for debugging some unrelated issues, and noticed that lenovo seems to have gone back to using over smbus with synaptics touchpads on some of their new systems, particularly this one. so, let's enable rmi mode for the extreme generation. paul link torokhov",neutral,6.0
265,30b2c0cae4303a9691174968482c43bfedcb7d76,changzhu <Changfeng.Zhu@amd.com>,Wed Nov 13 17:17:09 2019 +0800,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"powerplay enable gpu_busy_percent sys interface for renoir to get the value of gpu_busy_percent, it needs to realize get_current_activity_percent and get_metrics_table. the framework of renoir smu is different from old ones like raven. it needs to realize get_current_activity_percent and get_metrics_table in renoir_ppt.c like . remove unused variable alex quan deucher",frustration,3.0
266,3d5f3a67e466f08920b3a2e5964bc03743932552,Lars Poeschel <poeschel@lemonage.de>,Tue Oct 29 15:43:14 2019 +0100,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,nfc as dt compatible string it is favourable to have one unified compatible string for devices that have multiple interfaces. so this adds simply as the devicetree binding compatible string and makes a note that the old ones are deprecated. cc johan hovold cc simon horman poeschel s. miller,satisfaction,2.0
267,031c8cd8bd24e716162aadeacda83f7c506144f8,Andreas Kemnade <andreas@kemnade.info>,Mon Dec 2 21:47:47 2019 +0100,torvalds/linux,4589,2019Q4,4589 torvalds/linux 2019Q4,"media dtbindings media fslpxp add missing i. also has a pxp, so mention it among others in the bindings doc. kemnade herring guo",neutral,1.0
268,ff7b0d27208bd730aa71bd91087f0ff80ca60eda,Arkadi Sharshevsky <arkadis@mellanox.com>,Sat Mar 11 09:42:51 2017 +0100,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,mlxsw spectrum add support for counter allocator add implementation for counter allocator. the asic has special memory pool for various counting purposes. counter memory is distributed between equal size banks. the static subpool configuration should specify the following parameters for each subpool number of required banks. maximum entry size. each module can add dedicated subpool or use existing one. sharshevsky schimmel pirko s. miller,frustration,2.0
269,1caccc2565a83b79dd6e4af15bea35995487a379,Chris Chiu <chris.chiu@canonical.com>,Wed Mar 1 15:48:51 2017 -0600,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"hid asus support republic of gamers special keys add support for the special keys found on the internal keyboard of the asus republic of gamers rog laptop models , , and . chiu tissoires kosina",neutral,3.0
270,7a9b248446dfd7c2d65030159e5c152a911aaf42,Tony Lindgren <tony@atomide.com>,Tue Mar 14 17:39:42 2017 -0700,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"arm dts configure ehci so modems can be accessed droid has two modems, and . both are on the hci usb controller. let's add a configuration for the hci so the modems can be enabled. note that the modems still need additional gpio based configuration. cc cc marcel partap cc michael scott testedby sebastian reichel lindgren",neutral,6.0
271,84b90e0cabf6b71a1d6292fbe936f669328a3881,Charles Keepax <ckeepax@opensource.wolfsonmicro.com>,Thu Feb 16 13:27:15 2017 +0000,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,pinctrl samsung remove unused local variable the local variable drvdata is not used in samsung_gpio_set_direction. keepax kozlowski walleij,neutral,4.0
272,f6b254513cffedbd380b31ed7963cb639df319ee,Tomohiro Kusumi <tkusumi@tuxera.com>,Tue Mar 28 16:49:27 2017 +0300,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"scsi ufs add missing macros for register bits from ufshci spec add macros for register bits that can be found in .. not all registers are defined in ufshci.h i.e. some are unused whether macros are defined or undefined, but all the bits for those registers that are already defined should appear here. kusumi jadavani k. petersen",satisfaction,1.0
273,73eba2be9203c0eef37df6939ebba4d34227f284,Subhash Jadavani <subhashj@codeaurora.org>,Tue Jan 10 16:48:25 2017 -0800,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"scsi ufs fix arguments order some trace calls colin ian king reported that with commit ffab scsi ufs add tracing support static analysis is reporting that we may have swapped arguments on calls to trace_ufshcd_runtime_resume, trace_ufshcd_runtime_suspend, trace_ufshcd_system_suspend, trace_ufshcd_system_resume, and trace_ufshcd_init where hbauic_link_state is passed to dev_state hbacurr_dev_pwr_mode is passed to link_state this wasn't intentional so it's a bug. this change fixed this bug. reportedby colin ian king jadavani ian king k. petersen",satisfaction,6.0
274,4e64e5539d152e202ad6eea2b6f65f3ab58d9428,Chris Wilson <chris@chris-wilson.co.uk>,Thu Feb 2 21:04:38 2017 +0000,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"drm improve drm_mm search and fix topdown allocation with rbtrees the drm_mm range manager claimed to support topdown insertion, but it was neither searching for the topmost hole that could fit the allocation request nor fitting the request to the hole correctly. in order to search the range efficiently, we create a secondary index for the holes using either their size or their address. this index allows us to find the smallest hole or the hole at the bottom or top of the range efficiently, whilst keeping the hole stack to rapidly service evictions. search for holes both high and low. rename flags to mode. discover rb_entry_safe and use it! kerneldoc for enum drm_mm_insert_mode. wilson lahtinen cc alex deucher cc christian könig cc david airlie cc russell king cc daniel vetter cc jani nikula cc sean paul cc lucas stach cc christian gmeiner cc rob clark cc thierry reding cc stephen warren cc alexandre courbot cc eric anholt cc sinclair yeh cc thomas hellstrom deucher yeh vmwgfx stach etnaviv vetter link",neutral,5.0
275,ddb2397e30896626831dbac31a75eeb1991c4819,Chris Wilson <chris@chris-wilson.co.uk>,Fri Mar 24 16:35:39 2017 +0000,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"remove unused intel_flush_status_page intel_flush_status_page is defunct since commit fddcec remove bxt incoherent seqno write workaround, time to remove it. wilson cc mika kuoppala cc joonas lahtinen cc ville syrjälä link lahtinen",neutral,4.0
276,1762ed65c700efb843df8d19a55742566872aade,Philipp Zabel <p.zabel@pengutronix.de>,Mon Feb 6 12:44:08 2017 +0100,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"gpu ipucpmem add bayer formats to ipu_cpmem_set_image the ipu does not natively understand bayer formats, but it can pass them through unchanged. add support for setting the image base address and cropping offset to ipu_cpmem_set_image. zabel",neutral,5.0
277,6464d294d251551223a2c359d8b74c6965b5740a,Ingo Molnar <mingo@kernel.org>,Sat Jan 28 14:03:04 2017 +0100,torvalds/linux,4589,2017Q1,4589 torvalds/linux 2017Q1,"rename update_e to e__update_table update_e should have '' as a prefix as most of the other functions have but it's also a bit unclear about its purpose, as it's unclear what is updated the whole table, or an entry? also, the name does not express that it's a trivial wrapper around sanitize_e_table that also prints out the resulting table. so rename it to e__update_table_print. this also makes it harmonize with the e__update_table_firmware function which has a very similar purpose. no change in functionality. cc alex thorlton cc andy lutomirski cc borislav petkov cc brian gerst cc dan williams cc denys vlasenko cc h. peter anvin cc huang, ying cc josh poimboeuf cc juergen gross cc linus torvalds cc paul jackson cc peter zijlstra cc rafael j. wysocki cc tejun heo cc thomas gleixner cc wei yang cc yinghai lu cc molnar",caution,2.0
278,48d634c8d8719f518ab7928bfd7a9123d6b9b438,rniwa@webkit.org <rniwa@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Mar 20 22:19:28 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,mac rebaseline after . caretattheedgeofcontenteditableexpected.png revealcaretofmultilinecontenteditableexpected.png revealcaretofmultilineinputexpected.png divoverflowscrolhiddenexpected.txt testexpectations caretattheedgeofcontenteditableexpected.txt revealcaretofmultilinecontenteditableexpected.txt revealcaretofmultilineinputexpected.txt bb,caution,6.0
279,01c5426dc47660641b79bfd58ba9993af2a4ca62,tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jan 30 23:34:08 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"do not use private inheritance. google c style guide says all inheritance should be public. if you want to do private inheritance, you should be including an instance of the base class as a member instead. so in this case it really means a isa relationship, so it should be public. gtest_filterhttpserver chromium.org review url dcbdfc",frustration,2.0
280,490366664448baf8bb83b66387be17f8c868c0dc,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Feb 15 11:40:27 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"unreviewed, rolling out . broke relative url linkification in the computed styles pane requested by apavlov on webkit. patch by sheriff bot on .js webinspector.stylessidebarpane.prototype._rebuildsectionsforstylerules bb",frustration,5.0
281,9b3f7e24be4d7417ddb409470818cbfebc722a40,jam@chromium.org <jam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Feb 12 17:51:29 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"fix crash when closing a constrained window in win aura. the crash happens because the aurawindow for the constrained window is removing itself from its parent window, and its parent_ pointer is already null'd before the focus manager is retrieved which fails because auraclientgetfocusclient can't get to a root window. see the bug for the callstack. review url dcbdfc",frustration,3.0
282,eec3b5b0b668257c7aef02f122a6d7360dc5e36f,yosin@chromium.org <yosin@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Jan 23 09:42:37 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"regression pan icon remains on screen on chromiumwinxp reviewed by hajime morita. the issue is caused by autoscrollcontrollerstopautoscrolltimer doesn't call viewremovepanscrollicon because m_autoscrolltype is reset before checking it. this patch changes to reset m_autoscrolltype after all references. test panicon.html .cpp webcoreautoscrollcontrollerstopautoscrolltimer layouttests this test checks no pan icon after pan scroll. paniconexpected.png added. paniconexpected.txt added. panicon.html added. testexpectations changed to skip entry for panscrollpanicon.html for android, linux and mac. bb",neutral,5.0
283,5170788ea990619de9e6d7f92c7990d9e9b35332,kaiwang@chromium.org <kaiwang@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat Mar 16 05:38:08 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,remove autofill notification types replace with a simple autofillmanagertestdelegate review url dcbdfc,neutral,4.0
284,3710b5663a81cbb0d1dd74947763d160f6275b9c,estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Jan 22 20:08:43 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,mark flaky test localfilesyncservicetest.localchangeobservermultiplecontexts review url dcbdfc,neutral,5.0
285,df9a0ad05ac0c631c9b9a7305dd11b0f62db3b8f,eric@webkit.org <eric@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Feb 22 22:57:14 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"teach the tests how to test the threaded html parser reviewed by adam barth. this adds a way to force data url parsing to go through the threaded parser, to enable us to test the threaded parser using the test harness. htmlparseroptions.cpp webcorehtmlparseroptionshtmlparseroptions .in layouttests testexpectations runner.js window.onload templateexpected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt expected.txt bb",satisfaction,2.0
286,e41a07e08dda7eace29c62bf7db40286b1e4c1d4,rsesek@chromium.org <rsesek@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Feb 19 20:55:37 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"implement the basic zoom bubble. the bubble can be opened in response to a click on the zoom decoration in the omnibox, or when the page zoom changes and it is opened automatically. in the second case, it is dismissed automatically after a fixed period of time. a web page in or out. a zoom icon appears in the omnibox. clicking it opens the bubble. chromium.org review url dcbdfc",caution,3.0
287,90a78b39d62518917009af23f578d81f4bb7295c,sbc@chromium.org <sbc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jan 24 20:23:42 2013 +0000,chromium/chromium,4568,2013Q1,4568 chromium/chromium 2013Q1,"fix bufferalignment test on arm linux. it seems that linux's arm gcc has the same problem that android's did. this change disables the check for byte alignment for all gcc arm compilers, not only android. review url dcbdfc",caution,2.0
288,641307df71fe77d7b38a477067495ede05d47295,Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>,Sat Jul 29 02:31:33 2017 +0300,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"drm rcardu fix race condition when disabling planes at crtc stop when stopping the crtc the driver must disable all planes and wait for the change to take effect at the next vblank. merely calling drm_crtc_wait_one_vblank is not enough, as the function doesn't include any mechanism to handle the race with vblank interrupts. replace the drm_crtc_wait_one_vblank call with a manual mechanism that handles the vblank interrupt race. pinchart bingham",neutral,4.0
289,ba63b6352c753f592e35b6b828f9ffd4e9ac6aa1,Laurent Pinchart <laurent.pinchart@ideasonboard.com>,Fri Aug 11 16:49:05 2017 +0300,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"drm omapdrm hdmi configure the pll from the hdmi core version the and plls have different properties that require specific handling in the hdmi pll driver. this needs knowledge of the pll version, which is currently inferred from the dss version. as part of the effort to remove usage of the dss version, use the hdmi controller version instead. pinchart valkeinen",frustration,2.0
290,8447e4781f033f56cb18c2ec0301ea5d207877fc,H Hartley Sweeten <hsweeten@visionengravers.com>,Wed Aug 9 08:51:26 2017 +1200,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"spi spi use bit for all registers all the ssp registers are bit. since most of the upper bits are unused, this driver tries to be tricky and uses or bit to access the registers. this really just adds a bit of confusion. simplify the by using bit 's for all of the registers. hartley sweeten packham shevchenko brown",neutral,1.0
291,18d5e6c34a8eda438d5ad8b3b15f42dab01bf05d,Michael Davidson <md@google.com>,Mon Jul 24 16:51:55 2017 -0700,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"undef memcpy et al in string.c undef memcpy and friends in .c so that the functions defined here will have the correct names, otherwise we end up up trying to redefine __builtin_memcpy etc. surprisingly, gcc allows this and, helpfully, discards the __builtin_ prefix from the function name when compiling it, but clang does not. adding these undef's appears to preserve what i assume was the original intent of the code. davidson kaehlcke peter anvin cc arnd bergmann cc cc greg hackmann cc kees cook cc linus torvalds cc nick desaulniers cc peter zijlstra cc thomas gleixner link molnar",satisfaction,2.0
292,dff37b58ca53b1978e02edf6f8c1dd681799342b,Nogah Frankel <nogahf@mellanox.com>,Wed Sep 20 16:15:01 2017 +0200,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,mlxsw spectrum_switchdev change mc_router to mrouter change the naming of mc_router to mrouter to keep consistency. frankel pirko s. miller,neutral,4.0
293,67bd22c09ac1b54b5f42445783d2dc8e011f7a71,Andrew F. Davis <afd@ti.com>,Wed Jul 19 12:04:07 2017 -0500,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"power supply move platform driver code into .c when the driver was originally written the subsystem only allowed device drivers for attached devices to live in the subsystem. kernel driver subsystems expect that the driver for a device live in the directory of the subsystem for which it implements functionality, not in the directory of the bus that it is attached. to work around this, the driver was implemented as a platform device driver and the interface driver would instantiate this device from within the directory, then pass a read callback as platform data. as we can now have the interface driver in the directory like we do already with the interface driver we can remove this middlelayer platform driver. f. davis rohár reichel",satisfaction,5.0
294,c23c2a0f236601c635d9a9d18d7993641e72aa8c,Arnaldo Carvalho de Melo <acme@redhat.com>,Mon Sep 11 10:50:26 2017 -0300,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"perf tools make copyfile_offset static there are no usage outside util.c and this is the only remaining reason for fcntl.h to be included in util.h, to get the loff_t definition in alpine linux, so make it static. cc adrian hunter cc david ahern cc jiri olsa cc namhyung kim cc wang nan link carvalho de melo",satisfaction,4.0
295,c17c02040bf0d186cebd3e66ff349f955575bf38,Tobias Klauser <tklauser@distanz.ch>,Fri Sep 22 09:42:42 2017 +0200,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,"arch remove unused _segments some architectures define the noop copy_segments, release_segments and forget_segments. these are used nowhere in the tree, so removed them. klauser gupta torvalds",caution,5.0
296,c0b3dda7ed4d7f08b6a39ff8b35895780a68e384,Dan Carpenter <dan.carpenter@oracle.com>,Wed Aug 23 13:44:20 2017 +0300,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,skd uninitialized variable in skd_isr_completion_posted someone got too agressive about removing initializations and accidentally removed the rc which is required. fixes cdacbcb skd remove superfluous initializations from skd_isr_completion_posted carpenter axboe,neutral,4.0
297,0284f1ead87463bc17cf5e81a24fc65c052486f3,Christian König <christian.koenig@amd.com>,Wed Sep 20 15:06:12 2017 +0200,torvalds/linux,4589,2017Q3,4589 torvalds/linux 2017Q3,add transparent huge page support for cached allocations try to allocate huge pages when it makes sense. avoid compound pages for now könig kuehling deucher deucher,neutral,3.0
298,d521093a5f84cacf9935e8c9834ad3054b423ee1,Boyuan Zhang <boyuan.zhang@amd.com>,Mon Apr 30 16:51:33 2018 -0400,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,"add jpeg packet defines to .h add new packet for vcn jpeg, including condition checks, types and packet zhang könig deucher",frustration,4.0
299,3453c92731884bad7c4c3a0667228b964747f3d5,Pablo Neira Ayuso <pablo@netfilter.org>,Sat Jun 2 23:38:48 2018 +0200,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,"netfilter nf_tables pass ctx to nf_tables_expr_destroy nft_set_elem_destroy can be called from call_rcu context. annotate netns and table in set object so we can populate the context object. moreover, pass context object to nf_tables_set_elem_destroy from the commit phase, since it is already available from there. neira ayuso",neutral,
300,df9267f1fb6b56fa573cc93c611009b0bd126878,Hans de Goede <hdegoede@redhat.com>,Sun Apr 8 18:06:21 2018 +0200,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,firmware fix firmware documentation for recent file renames firmware_class.c was split into several files under firmware_loader. the new main.c has the functions which request_firmware.rst references. r. rodriguez de goede testedby randy dunlap kroahhartman,satisfaction,3.0
301,98014068328c5574de9a4a30b604111fd9d8f901,Boris Ostrovsky <boris.ostrovsky@oracle.com>,Tue May 8 19:56:22 2018 -0400,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,set up gs segment for stack canary we are making calls to c code e.g. xen_prepare_pvh which may use stack canary stored in gs segment. ostrovsky gross gross,satisfaction,3.0
302,013567be19761e2d14fc2a2676fe7686ac54c9ac,Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>,Fri May 11 16:02:00 2018 -0700,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,"mm migrate fix double call of radix_tree_replace_slot radix_tree_replace_slot is called twice for head page, it's obviously a bug. let's fix it. link fixes eae mm enable thp migration for shmem thp horiguchi reportedby matthew wilcox morton cc michal hocko cc kirill a. shutemov cc zi yan cc vlastimil babka morton torvalds",satisfaction,2.0
303,1b22fc609cecd1b16c4a015e1a6b3c9717484e3a,Oleg Nesterov <oleg@redhat.com>,Fri May 18 18:55:35 2018 +0200,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,"simplify the isownerspinnable checks add the trivial owner_on_cpu helper for rwsem_can_spin_on_owner and rwsem_spin_on_owner, it also allows to make rwsem_can_spin_on_owner a bit more clear. nesterov zijlstra intel long cc amir goldstein cc davidlohr bueso cc jan kara cc linus torvalds cc matthew wilcox cc peter zijlstra cc theodore y. ts'o cc thomas gleixner link molnar",satisfaction,5.0
304,190c462d5be19ba622a82f5fd0625087c870a1e6,Daniel Vetter <daniel.vetter@ffwll.ch>,Fri Apr 20 08:51:58 2018 +0200,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,drop drm_control_allow control nodes are no more! hellstrom paul vetter cc vmware graphics cc sinclair yeh cc thomas hellstrom link,satisfaction,5.0
305,3992516af3846bc2dcba002de5d7c908be5c06de,Jagan Teki <jagan@amarulasolutions.com>,Thu Jun 7 19:21:32 2018 +0530,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,arm dts icoremipi add camera sensor camera sensor is connected in i. . mipi starter kit. this patch also move pinctrl from ic to pinctrl. teki guo,neutral,5.0
306,28a7b4f4498546c0d4d41c084abd0496f9922bf3,Evan Quan <evan.quan@amd.com>,Mon Jun 11 17:22:33 2018 +0800,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,powerplay set pre display configurations set num_displays to and force uclk high as part of the mode set sequence. quan deucher deucher,caution,4.0
307,44842d4555e39d821171f3753d370c245396db32,Takeshi Kihara <takeshi.kihara.df@renesas.com>,Wed Apr 11 18:36:23 2018 +0900,torvalds/linux,4589,2018Q2,4589 torvalds/linux 2018Q2,soc renesas identify rcar this patch adds support for identifying the rcar ra soc. kihara shimoda uytterhoeven horman,satisfaction,2.0
308,4d60ed6088425ad6189e7851dd96ea2dd3a4cf89,tguilbert <tguilbert@chromium.org>,Wed Jan 18 16:10:36 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"fix crash in mediaurlresolvergetmediatype this has been around since at least, but has not been on anyone's radar due to relatively low cpms or noise. it's unclear why the path returned is null, but at least, we will avoid the null deref. reviewurl cr",neutral,4.0
309,d7178e48283e3c8ffbf8d45049066b65ab2d22dd,khushalsagar <khushalsagar@chromium.org>,Thu Jan 19 17:31:49 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,content remove blimp compositing dependencies. this change removes all code for enabling blimp mode in content to run the compositor with proto serialization and plumbing of these protos across the ipc boundary. reviewurl cr,neutral,3.0
310,d33eda3411eebc14ae925546b445eff1655a2988,kinuko <kinuko@chromium.org>,Wed Jan 4 22:40:24 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,use explicit webstring conversion methods in storage api files some remaining ones in cache_storage and dom_storage reviewurl cr,frustration,3.0
311,a3d353091d8189530b26c905d6fb688b333fc819,jinsukkim <jinsukkim@chromium.org>,Tue Feb 7 17:24:22 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"viewroot class for event forwarding on android this cl introduces a new interface viewroot to forward java events down to native with a view to replacing the flow through contentviewcore eventually. in native side, viewroot is a subclass of viewandroid. it acts as the root of a viewandroid tree, and receives events from embedders. it has a reference to windowandroid, and partially takes over the role it played as the tree root. viewroot is mapped to windowandroid and shared across all the contents. webview is an exception where all activities share the wa instance. viewroot, viewandroid, and viewclient are put together to adopt the pattern chain of responsibility dispatching the events to the classes implementing viewclient along the view hierarchy, and conditionally stopping the processing when required. viewroot is not in use yet. in the followup patches it will replace windowandroid. this cl constructs viewandroid that mirrors that of android view in preparation for the upcoming changes. reviewurl cr",satisfaction,3.0
312,195d2a3a0e7e03f730a7bf18ca2faae860375d8b,tkent <tkent@chromium.org>,Mon Jan 23 00:15:47 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"check in failing results for wpt tests also, remove unnecessary expectations. chromium.org reviewurl cr",satisfaction,5.0
313,c8f0e4eb516b29f1e871f7fb80f5ffc7a541e81c,carlosk <carlosk@chromium.org>,Wed Mar 1 12:30:49 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,last_n add instrumentation test for the tab closure case. the existing unit test for making sure that tabs being closed do not generate last_n snapshots is somewhat artificial because the test itself guarantees proper ordering. having this instrumentation integration level test is a more complete way of testing this code is actually doing what's supposed and that its expectations of observer method calling order are correct. reviewurl cr,neutral,5.0
314,ba86e8b1570210b191884e1c2534a2844aeac42e,rhalavati <rhalavati@chromium.org>,Tue Feb 14 04:30:09 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,network traffic annotation added to . network traffic annotation is added to network request of . reviewurl cr,frustration,2.0
315,7b09536cad07c7983eac63eac07ecf82f53c65d1,junov <junov@chromium.org>,Tue Mar 28 10:47:20 2017 -0700,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"fix unreliable mediastream capture from webgl canvases when capturing a mediastrem from a webgl canvas that has the preservedrawingbuffer option set to false, it is important to perform the frame capture before the canvas is cleared by the buffer swap mechanism. this change resolves the issue by performing the capture during the paint invalidation phase instead of during frame finalization. for canvases that are not visible on screen, there is no paint invalidation, which is a problem. so in that case, we fall back to doing the capture during frame finalization, which is okay in that case because there is no buffer swap. reviewurl cr",satisfaction,4.0
316,b6004f10a03de0933f4c5d4241ac79dcd13c76c2,hubbe <hubbe@chromium.org>,Mon Mar 13 20:07:55 2017 -0700,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"just set color space information every time on the video processor this little optimization has bitten me a few times already, and i suspect it doesn't actually save anything. remove the optimization for now. .tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium. reviewurl cr",neutral,7.0
317,9a1fcb408d1540dbf44a44755352ba12cc5f6a06,thomasanderson <thomasanderson@google.com>,Fri Feb 17 23:41:54 2017 -0800,chromium/chromium,4568,2017Q1,4568 chromium/chromium 2017Q1,"infobarcontainerview redraws infobars on a native theme change this cl fixes a bug where infobars would be left with the previous theme's border color when the system theme changes. previously, you'd have to resize the browser to get the infobar to redraw correctly. chromium.org reviewurl cr",neutral,7.0
318,ed4271f86f6dca2eecde6ba24685271bd8bd3466,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Jun 25 03:12:16 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,update .deps.git dcbdfc,frustration,2.0
319,b4a15770d3f98bdd2000a8e38e93948a37ce5feb,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Fri May 18 18:09:20 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,update .deps.git dcbdfc,satisfaction,2.0
320,3c2231c6ad27c2d649ad1a2b8488412d902f3fee,yusukes@chromium.org <yusukes@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu May 10 10:30:14 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,fix crash in ibusuicontroller review url dcbdfc,neutral,7.0
321,9643380014a605aa6742cd55ef0efe68a1f1aa5a,dbeam@chromium.org <dbeam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu May 31 20:39:08 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,removing suppression for supposedly fixed bug . chromium.org memory bots review url dcbdfc,neutral,5.0
322,d10623f4019113ae5301f3aa09631b9472f04a27,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jun 20 10:15:21 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,update .deps.git dcbdfc,caution,5.0
323,f4f105837977995ea6baf006ab4f08b439e94d44,pfeldman@chromium.org <pfeldman@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Apr 19 11:39:50 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,"web inspector reuse parsedurl in the uisourcecode reviewed by yury semikhatsky. migrated uisourcecode to parsedurl, moved the displayname logic into its only client tabbededitorcontainer. .js webinspector.sourcemapparser.prototype._canonicalizeurl .js webinspector.openresourcedialog.filteroutemptyurls webinspector.openresourcedialog.comparefunction webinspector.openresourcedialog webinspector.openresourcedialog.prototype.itemtitleat webinspector.openresourcedialog.prototype.itemkeyat .js webinspector.parsedurl .js webinspector.scriptsnavigator.prototype. webinspector. .js webinspector.tabbededitorcontainer.prototype._titleforfile .js webinspector.uisourcecode webinspector.uisourcecode.prototype.get parsedurl layouttests test.js initialize_debuggertest uisourcecodedisplayname.html bb",satisfaction,3.0
324,f25fceaaf5bdb381560e041b0cbd021db373f458,bradchen@google.com <bradchen@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue May 29 18:27:01 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,"disable tests that inside the linux suid sandbox. , review url dcbdfc",neutral,5.0
325,3dc69c43f26e1aa23039262d307fa7874664d4f4,gman@chromium.org <gman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat May 12 02:29:24 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,fix cmd buf impl of glisenabled to return cached value since we lazily set certain states we need to return the cached value. tests chromium.org review url dcbdfc,caution,4.0
326,9b5c4e7d7839ce549ff414f58794f51443178889,pfeldman@chromium.org <pfeldman@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Apr 26 15:14:27 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,web inspector remove stacktrace property from requestwillbesent it is already a part of the initiator. reviewed by yury semikhatsky. .cpp webcoreinspectorresourceagentwillsendrequest .js webinspector.consolemessageimpl.prototype._formatmessage .js webinspector.networkdispatcher.prototype.requestwillbesent webinspector.networkdispatcher.prototype.requestservedfrommemorycache webinspector.networkdispatcher.prototype._appendredirect webinspector.networkdispatcher.prototype._createnetworkrequest get webinspector bb,neutral,4.0
327,9530c95990ba28cb5504f3d9101ccab85c3f655a,creis@chromium.org <creis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Apr 13 02:11:16 2012 +0000,chromium/chromium,4568,2012Q2,4568 chromium/chromium 2012Q2,"force a siteinstance swap for viewsource urls to avoid a renderer kill. bug, comment . review url dcbdfc",neutral,4.0
328,04b222f9577396a8d19bf2937d2a218dc2a3c7ac,Leon Romanovsky <leon@kernel.org>,Sat Oct 10 12:27:27 2020 +0300,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,remove ib representors dead code delete dead code. dayan romanovsky,neutral,5.0
329,51748e77eba9e507f42ffa90cc7648e95ade9266,Guo Ren <guoren@linux.alibaba.com>,Thu Oct 29 02:40:37 2020 +0000,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,csky fixup show_regs doesn't contain regsusp current show_regs didn't display regsusp and it confused debug. so fixup wrong sp display and add pt_regs. ren,satisfaction,4.0
330,2512c06441e3f0dd505c3f00274fff892c111c8f,Dave Stevenson <dave.stevenson@raspberrypi.com>,Thu Nov 19 17:35:43 2020 +0100,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,media support vl_cid_vblank control adds vblank control to allow for frame rate control. stevenson mondi ailus carvalho chehab,satisfaction,2.0
331,3ce98018c8f9a5de857a9f4bcd300ecf9fc8280b,Swati Sharma <swati2.sharma@intel.com>,Fri Dec 18 16:07:13 2020 +0530,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,"add support for link failure detection there are specific dpcds defined for detecting link failures between the pcon and hdmi sink and check the link status. in case of link failure, pcon will communicate the same using an irq_hpd to source. hdmi sink would have indicated the same to pcon using scdc interrupt mechanism. while source can always read final hdmi sink's status using over aux, it is easier and faster to read the pcons already read hdmi sink status registers. this patch adds the dpcds required for link failure detection and provide a helper function for printing error which might help in debugging the link failure issues. addressed comments from uma shankar rephrased the commit message, as per the code. fixed styling issues added documentation for the helper function. sharma nautiyal shankar nikula link",neutral,5.0
332,64d81113931b3f73ce2f5783c1032892c5046f93,Yuantian Tang <andy.tang@nxp.com>,Tue Nov 17 11:43:04 2020 +0800,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,"dts freescale update calibration table for tmu module update the calibration table to make the temperature more accurate. three platforms have been updated , and . tang guo",frustration,3.0
333,9853a5ac9be381917e9be0b4133cd4ac5a7ad875,Chuck Lever <chuck.lever@oracle.com>,Thu Nov 19 13:56:42 2020 -0500,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,nfsd replace read macros that decode the owner attribute lever,caution,1.0
334,5c7e02a896689407555b3a10d6ed87369c70916e,Hans de Goede <hdegoede@redhat.com>,Mon Oct 26 16:46:06 2020 +0100,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,"hid hid put acpi enumerated devices in on shutdown the hid driver would quietly fail to probe the hid sensorhub with an acpi deviceid of smod every other boot. specifically, the ic_smbus_read_byte make sure there is something at this address check would fail every other boot. it seems that the bios does not properly cycle the device leaving it in a confused state where it refuses to respond to xfers. on boots where probing the device failed, the drivercore puts the device in after the probefailure, which causes the probe to succeed the next boot. putting the device in from the shutdownhandler fixes the sensors not working every other boot. this has been tested on both a lenovo miix and a dell venue pro both of which use an hid sensorhub with an acpi id of smod. note that it is safe to call acpi_device_set_power with a null pointer as first argument, so on none acpi enumerated devices this change is a noop. cc kaiheng feng de goede feng kosina",neutral,4.0
335,3a4174e68684e43ecdcb59126a441b29d5e94f7f,Christoph Hellwig <hch@lst.de>,Fri Nov 27 16:45:27 2020 +0100,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,"block switch bdgrab to use igrab all of the current callers already have a reference, but to prepare for additional users ensure bdgrab returns null if the block device is being freed. hellwig kara reinecke thumshirn axboe",neutral,2.0
336,f949d414fc1a9dfdfc878134629052135bd527db,Łukasz Stelmach <l.stelmach@samsung.com>,Tue Nov 3 19:44:07 2020 +0100,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,arm dts exynos fix ethernet interface description on odroid assign appropriate compatible properties matching real usb vendor and product id. stelmach link kozlowski,caution,5.0
337,b92b80246e06269c1407face33fd8a57a763a145,Luke D Jones <luke@ljones.dev>,Tue Oct 27 10:02:17 2020 +1300,torvalds/linux,4589,2020Q4,4589 torvalds/linux 2020Q4,"hid asus add support for asus nkey keyboard the asus nkey keyboard uses the productid of x and is used in almost all modern asus gaming laptops with slight changes to the firmware. this patch enables fnkey hotkeys, keyboard backlight brightness control. additionally this keyboard requires the led interface to be initialized before such things as keyboard backlight control work. d jones de goede kosina",caution,2.0
338,ca748c39ea3f3c755295d64d69ba0b4375e34b5d,Jason Gunthorpe <jgg@ziepe.ca>,Sun Sep 16 20:48:09 2018 +0300,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"get rid of per_mmnotifier_count this is intrinsically racy and the scheme is simply unnecessary. new mr registration can wait for any on going invalidation to fully complete. if atomic_read if atomic_dec_and_test !list_empty not taken list_add putting the new umem into some kind of purgatory until another invalidate rolls through instead hold the read side of the umem_rwsem across the pair'd and get rid of the racy 'deferred add' approach. since all umem's in the rbt are always ready to go, also get rid of the mn_counters_active stuff. gunthorpe romanovsky ledford",satisfaction,5.0
339,92f4e77c85918eab5e5803d7e28ab89a7e6bd3a2,Jason Gunthorpe <jgg@ziepe.ca>,Wed Aug 15 16:52:58 2018 -0600,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"revert replace ib_query_gid with rdma_get_gid_attr this reverts commit ddbcbabbcddfcabdafc. the include .h is kept, and we have to add a memset to the compat wrapper to avoid compiler warnings in gcc this revert is done to avoid extensive merge conflicts with smc changes in netdev during the . merge window. gunthorpe",caution,1.0
340,4765096f4f7829d933354ddffedfad32cf063467,Ingo Molnar <mingo@kernel.org>,Wed Jul 25 11:29:58 2018 +0200,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"merge branch '' into , to pick up fixes molnar",neutral,4.0
341,bb99794a4792068cb4bfd40e99e0f9d8fe7872fa,Guido Kiener <guido@kiener-muenchen.de>,Wed Sep 12 10:50:54 2018 +0200,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"usb usbtmc add ioctl for vendor specific read the usbtmc_ioctl_read call provides for generic synchronous and asynchronous reads on bulk in to implement vendor specific library routines. depending on transfer_size the function submits one or more urbs up to each with a size of up to . the flag usbtmc_flag_ignore_trailer can be used when the transmission size is already known. then the function does not truncate the transfer_size to a multiple of kb, but does reserve extra space to receive the final short or zero length packet. note that the instrument is allowed to send up to wmaxpacketsize bytes at the end of a message to avoid sending a zero length packet. with flag usbtmc_flag_async the ioctl is non blocking. when no received data is available, the read function submits as many urbs as needed to receive transfer_size bytes. however the number of flying urbs is limited to even with subsequent calls of this ioctl. returns eagain when non blocking and no data is received. signals epollin epollrdnorm when asynchronous urbs are ready to be read. in non blocking mode the usbtmc_message.message pointer may be null and the ioctl just submits urbs to initiate receiving data. however if data is already available due to a previous non blocking call the ioctl will return einval when the message pointer is null. this ioctl does not support compatibility for bit applications running on bit systems. however all other convenient ioctls of the usbtmc driver can still be used in bit applications as well. note that bit applications running on bit target systems are not affected by this limitation. kiener bayless kroahhartman",caution,5.0
342,c0747ad363fff90c2edf490fc089e3ae0920b410,Greg Kroah-Hartman <gregkh@linuxfoundation.org>,Mon Sep 17 07:24:28 2018 +0200,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,merge tag 'linuxkselftest.' of pulled kselftest fixes from shuah this kselftest fixes update for . consists of fixes to build failures fixes to add missing config files to increase test coverage fixes to cgroup test and a new cgroup test for memory.oom.group,neutral,4.0
343,8954e1eb2270fa2effffd031b4839253952c76f2,Shahar S Matityahu <shahar.s.matityahu@intel.com>,Wed Jul 4 15:31:36 2018 +0300,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"iwlwifi trans clear persistence bit when starting the fw in suspend flow in hw, the nic receives two perst signals. the first perst is expected and indicates the device on coming resume flow. the second perst causes fw restart fw restart. in order to avoid this issue, the fw set the persistence bit on. once this bit is set, the fw ignores reset attempts. the problem is when the fw gets assert during and then the persistence bit is set and causes the fw to ignore reset. to handle this issue, the fw opens the preg bit which allows access to the persistence bit, so that the driver clear the persistence bit and reset the nic. the flow is as follows the driver checks if the persistence bit is set. if the bit is set, the driver checks if he can clear the bit. if the driver can not clear the bit then there is no point to continue configuring the nic since it will fail. the fix was added is in start hw flow instead of the resume flow since in general, if the persistence bit is set, the driver can not start the fw. so it is good to check it when we start configuring the nic. the driver does not need to close the preg bit since the fw close it during the start flow. s matityahu coelho",satisfaction,2.0
344,00bc22e3eea0346b594442331df53d0d1e7104dd,Rohit kumar <rohitkr@codeaurora.org>,Wed Aug 1 14:31:06 2018 +0530,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,asoc qcom dtbindings add machine bindings add devicetree bindings documentation file for sound card. herring kumar brown,caution,3.0
345,c37a192ef442fc34e9aa7c9e479f20eb4cd6f7af,Dan Carpenter <dan.carpenter@oracle.com>,Fri Jul 6 11:39:21 2018 +0300,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"staging gasket shift wrapping bug in gasket_read_modify_write_ this function only has one caller so mask_width is and mask_shift is . shifting an int by bits is undefined, but i guess on gcc it wraps to x? anyway it's supposed to be x. fixes gasket driver framework apex driver carpenter kroahhartman",neutral,3.0
346,6b06546206868f723f2061d703a3c3c378dcbf4c,Dennis Zhou (Facebook) <dennisszhou@gmail.com>,Fri Aug 31 16:22:42 2018 -0400,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"revert blkthrottle fix race between blkcg_bio_issue_check and cgroup_rmdir this reverts commit cfcbeaedcd. destroying blkgs is tricky because of the nature of the relationship. a blkg should go away when either a blkcg or a request_queue goes away. however, blkg's pin the blkcg to ensure they remain valid. to break this cycle, when a blkcg is offlined, blkgs put back their css ref. this eventually lets css_free get called which frees the blkcg. the above commit cf breaks this order of events by trying to destroy blkgs in css_free. as the blkgs still hold references to the blkcg, css_free is never called. the race between blkcg_bio_issue_check and cgroup_rmdir will be addressed in the following patch by delaying destruction of a blkg until all writeback associated with the blkcg has been finished. fixes cf blkthrottle fix race between blkcg_bio_issue_check and cgroup_rmdir bacik zhou cc jiufei xue cc joseph qi cc tejun heo cc jens axboe axboe",neutral,6.0
347,5ec8b7d11470f742214708902d8903047855727e,Jesse Brandeburg <jesse.brandeburg@intel.com>,Fri Sep 14 17:37:48 2018 -0700,torvalds/linux,4589,2018Q3,4589 torvalds/linux 2018Q3,"iavf move files to new name simply move the files to the new name, updating the includes to track the new names, and updating the makefile as well. a future patch will remove the references after the code removal patches later in this series. brandeburg testedby andrew bowers kirsher",frustration,2.0
348,1fcbe25ac8c3178f948b8f0c98758620b3029bd5,robertphillips@google.com <robertphillips@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jun 14 14:08:32 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,roll skia deps to google.com review url dcbdfc,neutral,7.0
349,b4cde8994f13c2f37dbbffbfb5cc538aaab5c093,sail@chromium.org <sail@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed May 22 17:39:29 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,"wrench icon increase upgrade icon change time during testing when testing the upgrade indicator using simulateupgrade the upgrade state increases severity every second. this causes the wrench icon to update very quickly and makes it hard to test, specially now that it has an animation. this cl increases the time between icon changes by a factor of . review url dcbdfc",caution,3.0
350,6467955349f4230f145bee51a5f93db4703e0a12,sergeyu@chromium.org <sergeyu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Jun 18 06:36:44 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,roll webrtc chromium.org review url dcbdfc,frustration,2.0
351,30c58691961266c918daaf10f2b867b27691dd89,pfeldman@chromium.org <pfeldman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Apr 3 12:06:06 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,"devtools open remote frontends using chromedevtoolsremote urls. for oneliners outside webui this change splits chromedevtools handler into the one serving chromedevtoolsdevtools for embedded and chromedevtoolsremote for remote frontends. it also remove command line check for remote path. driveby move url constants from content to chrome, remove legacy data source registration. review url dcbdfc",satisfaction,4.0
352,f80aa37e487d5110edc097bfd0c33d4b17637eb2,cpu@chromium.org <cpu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed May 22 00:18:12 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,moving icu constants to separate obj for splitlink else the exports are not just functions and that causes problems in split link mode. builds review url dcbdfc,caution,4.0
353,419b4f7462b863e5ce9d26b10e4a5cc048da5a2e,ddorwin@chromium.org <ddorwin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Jun 24 23:26:11 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,fix widevine cdm adapter linking on mac. chromium.org review url dcbdfc,frustration,3.0
354,ddec1aab7c5bfd2b61319a183ede47b39e3da59d,dimich@chromium.org <dimich@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sun Apr 28 23:22:45 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,"turn off synced notifications by default this will provide us more control over when we turn the feature on for which branch going forwards. also provide a three state flag in chromeflags to enable and disable synced notifications, and command line flags to override the default for both enabling and disabling. chromium.org review url dcbdfc",frustration,6.0
355,4c3d809e72a64db376c11b578a6f699c8098f55e,solb@chromium.org <solb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jun 21 14:40:40 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,remove xml from element in jinglesessionstartconnection this element caused an assertion failure in libjingle at . when used from the clientside code. review url dcbdfc,caution,4.0
356,2f49438bdcf275971720d90e56f2d701a6d6871b,eae@chromium.org <eae@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue May 7 23:25:34 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,percentage widths adds up to more than . due to rounding float and inline blocks sized in percentages can add up to just over and thus overflow or cause wrapping. regression from . chromium.org percentagewidths.html review url bb,neutral,4.0
357,51d52e55353fdb28a45a13cb67698b9fa99e8926,yoshiki@chromium.org <yoshiki@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Apr 22 17:42:23 2013 +0000,chromium/chromium,4568,2013Q2,4568 chromium/chromium 2013Q2,"disable filemanagerbrowserdrivetest. these tests doesn't work on new ui files.app in buildbot. we have to investigate why they fails on bot. while the investigation, they are disabled. chromium.org review url dcbdfc",neutral,6.0
358,255a40424e2618610a2ad8d39e12b843b723959a,Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>,Wed Feb 17 23:43:41 2016 +0300,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,arm dts ra add etheravb clock add the etheravb clock to the ra device tree. based on the commit eaab arm shmobile ra add etheravb clock. shtylyov horman,caution,5.0
359,7aa0d22785deea2725a23716823edd96e65c2ff6,Geliang Tang <geliangtang@163.com>,Thu Jan 14 15:18:02 2016 -0800,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,.c add a helper function get_first_slab add a new helper function get_first_slab that get the first slab from a kmem_cache_node. tang lameter rientjes cc pekka enberg cc joonsoo kim morton torvalds,caution,4.0
360,d76d65fd26951498144029c24852c4d54ee512d9,Larry Finger <Larry.Finger@lwfinger.net>,Mon Feb 1 12:58:54 2016 -0600,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,"rtlwifi fix broken vht support when using a capable device with vht . rates enabled was not working packets were not delivered and the following warning was printed warning cpu pid at rate. modules linked in btcoexist rtl_pci rtlwifi fuse drbg ansi_cprng ctr ccm bnep bluetooth af_packet nfs fscache vboxpcio vboxnetadpo vboxne tflto vboxdrvo snd_hda_codec_generic x_pkg_temp_thermal rtsx_pci_sdmmc mmc_core rtsx_pci_ms kvm_intel memstick iwlmvm kvm snd_hda_intel snd_hda_cod ec snd_hwdep snd_hda_core irqbypass snd_pcm iwlwifi crctdif_pclmul crc_pclmul crcc_intel ghash_clmulni_intel aesni_intel aes_x_ snd_timer lrw glue_h elper ablk_helper cryptd snd pcspkr serio_raw rtsx_pci lpc_ich ptp xhci_pci mfd_core pps_core xhci_hcd soundcore toshiba_acpi thermal sparse_keymap wmi toshiba_bluetooth rfkill acpi_cpufreq battery ac processor dm_mod ic_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm sr_mod cdrom video button sg cpu pid comm timer tainted g w o wl hardware name toshiba tecra a, bios version . call trace dump_stack warn_slowpath_common warn_slowpath_null ? rtl_is_special_data ? rate_control_get_rate ? trace_hardirqs_on ? __local_bh_enable_ip valo",neutral,4.0
361,2f568dbd6b944c2e8c0c54b53c2211c23995e6a4,Christian König <christian.koenig@amd.com>,Tue Feb 23 12:36:59 2016 +0100,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,move get_user_pages out of amdgpu_ttm_tt_pin_userptr that avoids lock inversion between the bo reservation lock and the anon_vma lock. changed amdgpu_bo_list_entry.user_pages to an array of pointers lock mmap_sem only for get_user_pages added invalidation of unbound userpointer bos fixed memory leak and page reference leak chk revert locking mmap_sem only for_get user_pages revert adding invalidation of unbound userpointer bos sanitize and fix error handling chk init userpages pointer everywhere. fix error handling when get_user_pages fails. add invalidation of unbound userpointer bos again. chk add maximum number of tries. chk fix error handling when we run out of tries. könig kuehling kuehling deucher,neutral,5.0
362,0c5a616650a08b766e529511348274c1914ef4bf,Alexander Duyck <aduyck@mirantis.com>,Thu Mar 10 10:01:10 2016 -0800,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,ixgbe add support for toggling vlan filtering flag via ethtool this change makes it so that we can use the ethtool rxvlanfilter flag to toggle rx vlan filtering on and off. this is basically just an extension of the existing vlan promisc work in that it just adds support for the additional ethtool flag. duyck kirsher,satisfaction,3.0
363,b2807f07f4f87362925b8a5b8cbb7b624da10f03,Johannes Weiner <hannes@cmpxchg.org>,Wed Jan 20 15:03:22 2016 -0800,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,mm memcontrol add sock to memory.stat provide statistics on how much of a cgroup's memory footprint is made up of socket buffers from network connections owned by the group. weiner cc michal hocko cc vladimir davydov cc tejun heo morton torvalds,neutral,5.0
364,2dca78980372f154a2181e6044db71be9da626e9,Simon Horman <horms+renesas@verge.net.au>,Fri Mar 18 08:14:31 2016 +0900,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,"arm dts ra remove unnecessary clockoutputnames properties fixed rate and fixed factor clocks do not require an clockoutputnames property. since efef clk shmobile make clockoutputnames optional renesas clocks do not require a clockoutputnames property. in the above cases there is only one clock output and its name is taken from that of the clock node. accordingly, remove the unnecessary clockoutputnames properties and as necessary update the node names. horman uytterhoeven",frustration,3.0
365,f229c2c161de94a404fa16a17cb93c4a06938af5,Peter Hurley <peter@hurleysoftware.com>,Sat Jan 9 22:55:29 2016 -0800,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,tty audit take siglock directly lock_task_sighand is for situations where the struct task_struct may disappear while trying to deref the sighand this never applies to 'current'. hurley kroahhartman,caution,3.0
366,dae928ec3c29e7e16723c9c4c1299e00f4e9e949,Pali Rohár <pali@kernel.org>,Wed Jan 6 15:50:08 2016 -0800,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,"input alps detect trackstick presence for protocol this patch adds detection of trackstick for protocol devices. code in this patch is used in official dell touchpad linux drivers for dell models dell latitude , , detection code and base reg for alps rushmore and devices is exacly same. also user in bug reported that toshiba sattellite a has only alps touchpad device without trackstick and kernel reports to userspace also redundant trackstick device. rohár de goede testedby alex hung torokhov",caution,2.0
367,5d5a0bd9cc401e093a5b856615ffddfdbaee786f,Erik Arfvidson <erik.arfvidson@unisys.com>,Mon Feb 8 10:41:50 2016 -0500,torvalds/linux,4589,2016Q1,4589 torvalds/linux 2016Q1,staging unisys fix block comments in ultrainputreport.h this patch fixes the following types of check patch warnings block comments use on subsequent lines block comments use a trailing on a separate line arfvidson romer kroahhartman,frustration,3.0
368,bc95cd8e8b2fc779b96ed4d7a2608c6a0e8dc240,David S. Miller <davem@davemloft.net>,Mon Apr 24 14:11:10 2017 -0400,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,"merge tag 'updates' of saeed mahameed says updates sparse and compiler warnings fixes from stephen hemminger. from roi dayan and or gerlitz, add devlink and support for controlling eswitch encapsulation mode, this knob will enable hw support for applying to vf traffic as part of sriov eswitch offloading. s. miller",caution,4.0
369,634b6a8a064576797120b74facf95ba79283b5d5,Julien Isorce <julien.isorce@gmail.com>,Thu Apr 27 15:10:08 2017 +0100,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,only warn once in radeon_ttm_bo_destroy if va list not empty encountered a dozen of exact same backtraces when mesa's pb_cache_release_all_buffers is called after that a gpu reset failed. remove superfluous error message added in . bug isorce könig deucher,caution,4.0
370,9efa6d1a1eaa1ef392dec8fa68a5de8258dd8e5d,Alexandre TORGUE <alexandre.torgue@st.com>,Mon May 29 18:17:31 2017 +0200,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,pinctrl set pin to gpio input when used as interrupt this patch ensures that pin is correctly set as gpio input when it is used as an interrupt. torgue walleij,neutral,3.0
371,6806f2c70cfe145b3b6809242c8e1254071c1cf3,Robin Murphy <robin.murphy@arm.com>,Thu May 18 13:23:36 2017 +0100,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,"dts juno enable some smmus the iommubacked dma api support has now been in place for a while and proven stable, so there's no real need to keep most of juno's smmus disabled. the usb, hdlcds, and coresight etr all just need to map ram buffers for dma enabling their smmus obviates cpu bounce buffering for usb's streaming dma to the upper memory bank, and lets the other two allocate their relatively large coherent buffers without pressuring cma. some more software work is still needed for the dma and pcie before those can accommodate smmu translation correctly in all cases, so we leave those alone for now. testedby liviu dudau dudau murphy holla",caution,5.0
372,ff5ef99248662ef98a64c11c5370ecd9fbbf57a6,Alex Deucher <alexander.deucher@amd.com>,Thu Jun 15 16:27:42 2017 -0400,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,display enable dcn in dc enable dcn in dc. wentland deucher,neutral,3.0
373,c46f59e90226fa5bfcc83650edebe84ae47d454b,James Cowgill <James.Cowgill@imgtec.com>,Tue Apr 11 13:51:07 2017 +0100,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,"mips avoid bug warning in arch_check_elf arch_check_elf contains a usage of current_cpu_data that will call smp_processor_id with preemption enabled and therefore triggers a bug using smp_processor_id in preemptible warning when an fpxx executable is loaded. as a followup to commit baab mips avoid a bug warning during prctlpr_set_fp_mode, , apply the same fix to arch_check_elf by using raw_current_cpu_data instead. the rationale quoted from the previous commit it is assumed throughout the kernel that if any cpu has an fpu, then all cpus would have an fpu as well, so it is safe to perform the check with preemption enabled change the code to use raw_ variant of the check to avoid the warning. fixes b mips kernel elf improve the overall abi and fpu mode checks cowgill cc . cc patchwork baechle",neutral,2.0
374,3c1a427954399fd1bda1ee7e1b356f47b61cee74,Christian Borntraeger <borntraeger@de.ibm.com>,Thu Apr 6 09:51:51 2017 +0200,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,perf annotate fix perf annotate error . regression since . perf annotate exits on with an unknown error . turns out that commit cbd perf annotate start supporting cross arch annotation added a hard requirement for architecture support when objdump is used but only provided and arm support. meanwhile power was added so lets add as well. while at it make sure to implement the branch and jump types. borntraeger cc andreas krebbel cc hendrik brueckner cc martin schwidefsky cc peter zijlstra cc linux cc . fixes cb perf annotate start supporting cross arch annotation link carvalho de melo,neutral,5.0
375,6df97f85611cafc3ba9c093931a5fa3bc7dea897,Darren Hart (VMware) <dvhart@infradead.org>,Fri Apr 28 09:36:28 2017 -0700,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,make silead_dmi depend on touchscreen_silead silead_dmi provides platform specific data for the touchscreen_silead driver. make this explicitly clear in the kconfig depends. remove input as this is implied by touchscreen_silead. hart vmware cc hans de goede cc andy shevchenko cc jean delvare torokhov,neutral,3.0
376,ad2ac9d5c5e0e5fa7e21575d3cd9d0227803ea99,Wei-Ning Huang <wnhuang@google.com>,Wed Apr 12 18:56:18 2017 +0200,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,"firmware google vpd import lib_vpd source files this patch imports lib_vpd.h and vpd_decode.c from the chromium vital product data project. this library is used to parse vpd sections obtained from coreboot table entries describing chromebook devices product data. only the sections of type vpd_type_string are decoded. the vpd string sections in the coreboot tables contain the type byte set to x for strings, the key length, the key ascii array, the value length, and the value ascii array. the key and value arrays are not null terminated. huang escande kroahhartman",neutral,4.0
377,5dc17fa6fb7063c6bc8ea9f3183ec19ca68bbfd6,Andrew Lunn <andrew@lunn.ch>,Wed Apr 12 17:34:31 2017 +0200,torvalds/linux,4589,2017Q2,4589 torvalds/linux 2017Q2,mtd mchpk add driver for this spi sram device the microchip k is a byte sram connected via spi. lunn brezillon pitchen norris,satisfaction,5.0
378,d43f1ccfad053dbefba1d15443cdc36ca60958f0,Christoph Hellwig <hch@lst.de>,Tue Mar 5 05:46:58 2019 -0700,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"nvmepci remove the inline scatterlist optimization we'll have a better way to optimize for small that doesn't require it soon, so remove the existing inline_sg case to make that optimization easier to implement. hellwig busch grimberg kulkarni",neutral,4.0
379,bd628c1bed7902ec1f24ba0fe70758949146abbe,james qian wang (Arm Technology China) <james.qian.wang@arm.com>,Thu Jan 3 11:39:48 2019 +0000,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"component definition and initialzation . added a brief definition of component, this change didn't add the detailed component features and capabilities, which will be added in the following changes. . corresponding resources discovery and initialzation functions. changes in deleted unnecessary headers changes in fixed style problem found by checkpatch.pl strict. changes in unified abbreviation of pipeline to pipe. qian wang arm technology china dudau dudau",neutral,4.0
380,47b08e75a669887b19ecaf4e429cf3c19b748500,Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>,Tue Feb 5 09:48:57 2019 +0000,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"qtnfmac enable sae support in the case of sae ap, drivers offload authentication to userspace software, e.g. hostapd. for fullmac drivers the procedure is as follows. if auth_type is sae and user space indicates external authentication capability, then driver requests authentication offload to userspace software using cfg_external_auth_request call. from that point, auth frame exchange is performed transparently for driver userspace software mgmt frames using callbacks. as soon as authenitcation is completed, userspace software notifies driver about its status using external_auth callback. matyukevich valo",caution,2.0
381,6e8ccb4f624a73c56fc6ef0c45bcf91ca80703c3,Stanislav Fomichev <sdf@google.com>,Tue Jan 15 14:03:27 2019 -0800,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"properly account for libbfd variations on some platforms, in order to link against libbfd, we need to link against liberty and even possibly libz. account for that in the bpftool makefile. we now have proper feature detection for each case, so handle each one separately. see recent commit bee perf build don't unconditionally link the libbfd feature test to liberty and lz where i fixed feature detection. addressed jakub's nits better syntax for 'else ifeq' no space between ifeq args use libs, not extlibs for dhave_libbfd_support fixes ace bpftool make libbfd optional fomichev kicinski borkmann",neutral,4.0
382,7f2b8af282fb73e808fa0e7743f51b8632130d33,Greg Kroah-Hartman <gregkh@linuxfoundation.org>,Thu Feb 21 17:12:17 2019 +0100,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,merge tag 'intel_thstmforgreg' of into charmiscnext alexander writes stm updates for . these are bugfixes in stm class one bugfix in intel_th a few minor cleanups tag 'intel_thstmforgreg' of stm class prevent division by zero stm class fix an endless loop in channel allocation intel_th don't reference unassigned outputs intel_th pti use sysfs_match_string helper intel_th only create useful device nodes intel_th mark expected switch fallthroughs intel_th update abi documentation,satisfaction,4.0
383,a1a05bb40e229d148c071fcd2ed787b21f61ff8b,Tom Zanussi <tom.zanussi@linux.intel.com>,Sun Mar 31 18:48:16 2019 -0500,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"tracing save the last hist command's associated event name in preparation for making use of the new trace error log, save the subsystem and event name associated with the last hist command it will be passed as the location param in the event_log_err calls. link hiramatsu kim zanussi rostedt vmware",neutral,5.0
384,4d3d534e9fd596e6f70ee19c75f0cd9aa5be2588,Ulf Hansson <ulf.hansson@linaro.org>,Thu Feb 28 12:19:51 2019 +0100,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,merge branch 'fixes' into next,satisfaction,6.0
385,5f37396dffb89dcf4aceaf5dbdf4f133695d5afb,Christoph Hellwig <hch@lst.de>,Mon Feb 18 09:36:08 2019 +0100,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,nvmepci convert to spdx identifiers update license to use spdxlicenseidentifier instead of verbose license text. hellwig grimberg,satisfaction,3.0
386,e75913c93f7cd5f338ab373c34c93a655bd309cb,Zhiqiang Liu <liuzhiqiang26@huawei.com>,Mon Feb 11 10:57:46 2019 +0800,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"net fix prefix route residue follow those steps ip addr add dev ip addr add dev ip addr del dev ip addr del dev and then prefix route of will still exist. this is because ipv_prefix_equal in check_cleanup_prefix_route func does not check whether two addresses have the same prefix length. if the prefix of one address starts with another shorter address prefix, even though their prefix lengths are different, the return value of ipv_prefix_equal is true. here i add a check of whether two addresses have the same prefix to decide whether their prefixes are equal. fixes befecbd addrconf don't cleanup prefix route for ifa_f_noprefixroute liu reportedby wenhao zhang s. miller",neutral,5.0
387,2a6a7e722e7a78d774ce02b847c5b183a3ff2672,Chao Yu <chao@kernel.org>,Tue Mar 5 17:52:33 2019 +0800,torvalds/linux,4589,2019Q1,4589 torvalds/linux 2019Q1,"fix to use kvfree instead of kzfree as jiqun li reported in bugzilla system can panic due to using wrong function pair in xattr interface use kvmalloc to allocate memory use kzfree to free memory let's fix to use kvfree instead of kzfree, btw, we are safe to get rid of kzfree, since there is no such confidential data stored as xattr, we don't need to zero it before free memory. fixes de use kvmalloc, if kmalloc is failed reportedby jiqun li yu kim",neutral,4.0
388,bd386e6e24cae63b34d8b1b0693dd07b61573690,caitkp@chromium.org <caitkp@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jul 9 22:17:06 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,"following the only code left in webdataservice deals with ie password data, so move this into a separate win only class and kill webdataservice. still works chromium.org, , tbr'ing for removal of unneeded includes and api changes in profile, sync, and base respectively. review url dcbdfc",frustration,6.0
389,7e1ee8c0e68bcfcbf7de1894417f6917dceaa02b,deepak.sa@samsung.com <deepak.sa@samsung.com>,Fri Sep 5 07:11:20 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,give more meaningful name to m_which in customelementlifecyclecallbacks replace m_which with m_callbacktype review url bb,neutral,4.0
390,ed3a204afae1364b0ce4691f43f496f1cab9c267,rsleevi@chromium.org <rsleevi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Aug 1 19:57:13 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,"remove cup from google_apis it was committed months ago, and has seen no activity sense. i failed, as a reviewer, for not ensuring that an appropriate bug was filed to track exactly why this code was being included, how it would be used, and who would own it. even if this code might be used in the future, months of inactivity suggest it's time to remove this code, especially when it's only halfimplemented. review url dcbdfc",frustration,2.0
391,18782110a5ab5f707180e7fe5de24e98bc7e42c3,ojan@chromium.org <ojan@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Jul 22 22:23:50 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,autorebaseline for chromium.org review url bb,neutral,3.0
392,c1f0e8bca46cddc3b448571bcc0752e1cf168d73,scheib@chromium.org <scheib@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Jul 29 20:07:22 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,"remove prefixed pointer lock api. the pointer lock api has already been implemented without prefix, this change removes the 'webkit' prefixed api endpoints. intent to deprecate and remove review url bb",neutral,5.0
393,33169d9f2497a79fdde3ae51c5aa7266032526c7,thestig <thestig@chromium.org>,Wed Sep 24 13:06:02 2014 -0700,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,roll src svn linux call memset in a couple places in exceptionhandler. iwyu in minidump_writer.cc to fix building with libc. fix some nits raised by timur for . also remove valgrind suppression breakpad fixed. review url cr,neutral,2.0
394,d97dab9dc8b80490636d818c0c712a0308991b79,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Jul 29 04:35:10 2014 +0000,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,update .deps.git dcbdfc,frustration,4.0
395,447e14fe56fbbcb57a4b195ec8345c5da2afad48,Rahul Chaturvedi <rkc@chromium.org>,Wed Aug 27 14:34:21 2014 -0700,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,"remove ledger code from chrome. since the code from the ledger internal repos has now been opensourced, we should get rid of this code from chrome. chromium.org, , . review url cr",frustration,2.0
396,5ce7d0cb86e3db560bcb06cafb6b218490625800,newt <newt@chromium.org>,Fri Aug 29 17:16:58 2014 -0700,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,allow underscores in package names. review url cr,caution,4.0
397,9bb65868ce3ac1e5aae3a844beacf62281c332b6,wuhu <wuhu@google.com>,Fri Sep 12 17:34:10 2014 -0700,chromium/chromium,4568,2014Q3,4568 chromium/chromium 2014Q3,change pagetest.willstartbrowser to depend on platform instead of browser object as it would not have been created at this point. review url cr,neutral,5.0
398,3006945fe14016cfc631b2966f85910b20f9c60e,tzik@chromium.org <tzik@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Dec 4 11:57:41 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"fix incremental sync behavior of drivefilesyncservice. this change contains check the presence of the metadata entry before delete it, for start of changestamp to fetch to prevent fetching a change multiple times. review url dcbdfc",satisfaction,6.0
399,dca7dd933acd1c9d2ed0454679158db2fa0a3224,tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat Oct 6 17:38:24 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"cc remove unused includes to .h. , chromium.org, review url dcbdfc",neutral,5.0
400,f28c44b1d416a31c7171b62e9b6217962935e52b,gspencer@chromium.org <gspencer@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Oct 3 00:14:59 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"this fixes some really silly memory leaks, and eliminates an unused constructor. chromium.org review url dcbdfc",neutral,1.0
401,2b093b692393eb772fb0406f0319e104af41346c,shinyak@chromium.org <shinyak@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Dec 21 16:01:59 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"implement shadowrootelementfrompoint reviewed by dimitri glazkov. move elementfrompoint and nodefrompoint to treescope from document so that shadowroot can call it. in the elementfrompoint, the element taken by nodefrompoint is not in the same tree scope, its ancestor is returned. since nodefrompoint does not return the shadow ancestor of the result node, i don't make it treescope method. test .html .cpp webcoredocumentelementfrompoint code is shared with treescope. webcoredocumentcaretrangefrompoint .idl .cpp webcorenodefrompoint moved from document.cpp webcore webcoretreescopeelementfrompoint .h webcore treescope layouttests expected.txt added. .html added. bb",neutral,4.0
402,068306b4f4c9ca793036ccea2b29c7be7cb2583b,eric@webkit.org <eric@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Oct 29 08:17:28 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,technical articles should link to an old talk i gave reviewed by adam barth. articles.html bb,satisfaction,6.0
403,aae76ad232c690b544f6cc4947d250f21621d39b,alecflett@chromium.org <alecflett@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Nov 28 23:42:32 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"indexeddb change frontend to call idbdatabasebackendinterfacecreatetransaction reviewed by tony chang. use the new createtransaction, now that it has been stubbed out. this is part of of a refactor. see for part . no new tests as this refactor simply keeps and propagates a counter that is currently unused. idbdatabase.cpp webcoreidbdatabasenexttransactionid webcore webcoreidbdatabasetransaction idbdatabase.h idbdatabase idbopendbrequest.cpp webcoreidbopendbrequestonupgradeneeded idbrequest.cpp webcoreidbrequestonsuccess idbtransaction.cpp webcoreidbtransactioncreate webcoreidbtransactionidbtransaction idbtransaction.h idbtransaction bb",satisfaction,5.0
404,0ed8ea2056affd2f954308843269fe340ee0a34f,fpizlo@apple.com <fpizlo@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Oct 11 19:36:04 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"dfg should inline code blocks that use new_array_buffer reviewed by geoffrey garen. this adds plumbing to drop in constant buffers from the inlinees to the inliner. it's smart about not duplicating buffers needlessly but doesn't try to completely hashcons them, either. .h jsccodeblocknumberofconstantbuffers jsccodeblockaddconstantbuffer jsccodeblockconstantbufferasvector jsccodeblockconstantbuffer .cpp jscdfgabstractstateexecute .cpp constantbufferkey jscdfgconstantbufferkeyconstantbufferkey jscdfgconstantbufferkeyoperator jscdfgconstantbufferkeyhash jscdfgconstantbufferkeyishashtabledeletedvalue jscdfgconstantbufferkeycodeblock jscdfgconstantbufferkeyindex dfg jscdfgconstantbufferkeyhashhash jscdfgconstantbufferkeyhashequal constantbufferkeyhash wtf bytecodeparser inlinestackentry jscdfgbytecodeparserparseblock jscdfgbytecodeparserinlinestackentryinlinestackentry .h jscdfgcaninlineopcode .cpp .h .h jscdfgspeculativejitcalloperation .cpp jscdfgspeculativejitcompile .cpp jscdfgspeculativejitcompile bb",neutral,7.0
405,930c13e3fc47f68f9de3ba82eafbb1eb24c4c804,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Dec 18 10:03:20 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"web inspector network display javascript stack in case of script initiator. patch by eugene klyuchnikov on reviewed by vsevolod vlasov. show popup with navigavle stacktrace. .js webinspector.networklogview.prototype._getpopoveranchor added new target. webinspector.networklogview.prototype._showpopover added case for new target. webinspector.networklogview.prototype._generatescriptinitiatedpopovercontent generates table with stack trace items. webinspector.networkdatagridnode.prototype._refreshinitiatorcell added target marker, removed annoying titles. bb",satisfaction,2.0
406,4042351108ffdc7f845755e0530a4b902a8a9f8c,tfarina@chromium.org <tfarina@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Nov 13 01:05:14 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,remoting switch policywatcherlinux to use the callback interface of filepathwatcher. chromium.org review url dcbdfc,neutral,3.0
407,fb1ea284b3e7e81a555bdb65796dbedc51b22b7d,sky@chromium.org <sky@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Oct 25 19:29:05 2012 +0000,chromium/chromium,4568,2012Q4,4568 chromium/chromium 2012Q4,"makes toggling the brightness and volumn not force the launcher to show. the arrow needs to be updated, but that can be done separately. chromium.org review url dcbdfc",frustration,4.0
408,9cca023e5c5c13486d48d47a46564c359af9ae73,Lars-Peter Clausen <lars@metafoo.de>,Mon Sep 29 11:40:40 2014 +0200,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,asoc use snd_soc_dapm_to_codec instead of dapmcodec the codec struct in the snd_soc_dapm_context struct is deprecated and scheduled for removal. use the snd_soc_dapm_to_codec function instead. clausen keepax brown,neutral,4.0
409,1d54b3a43cd1228dc90dcd331eb735f79e3b021e,Hans Verkuil <hans.verkuil@cisco.com>,Wed Sep 3 04:18:23 2014 -0300,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"vivid remove duplicate and unused functions i'm not sure how i missed this, but they should be removed. verkuil carvalho chehab",neutral,7.0
410,7e6edb9b2e0bcfb2a588db390c44d120213c57ae,Matan Barak <matanb@mellanox.com>,Thu Jul 31 11:01:28 2014 +0300,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"add user mr reregistration support memory reregistration is a feature that enables changing the attributes of a memory region registered by userspace, including pd, translation address and length and access flags. add the required support in uverbs and the kernel verbs api. barak gerlitz dreier",neutral,6.0
411,c8a797a98cb63afd620d3ae448e8ee3e45f47088,Greg Kroah-Hartman <gregkh@linuxfoundation.org>,Mon Aug 11 15:30:45 2014 +0800,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,greybus import most recent greybus code to new repo.,caution,6.0
412,1b21572f8fd791f5b54e5989bc8e0cc5308d2e6c,xujianqun <xjq@rock-chips.com>,Fri Jul 11 19:40:05 2014 +0800,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"asoc rockchip add missing module.h include missing module.h in linux directory will cause compile error with randconfig, like as . error expected declaration specifiers or before string constant module_descriptionrockchip iis asoc interface brown",neutral,3.0
413,a84bc2a9013fb123deeca7283480955d021503fb,Mugunthan V N <mugunthanvnm@ti.com>,Tue Jul 15 20:26:53 2014 +0530,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"drivers net cpsw disable coalesce when rx_coalesce_usecs is zero instead of return error on zero rx_coalesce_usecs, disable coalesce v n s. miller",satisfaction,3.0
414,23b858dcb6bdd6ec7bbe41de179076486ebc7f18,H Hartley Sweeten <hsweeten@visionengravers.com>,Mon Aug 25 16:04:23 2014 -0700,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"staging comedi amplc_pci use comedi_subdevice 'readback' use the new comedi_subdevice 'readback' member and the core provided insn_read for the readback of the analog output subdevice channels. for aesthetics, rename the insn_write function and tidy it up. hartley sweeten abbott kroahhartman",caution,6.0
415,c01035f174a021737c30c8e71798c4f83dc6b8a9,David S. Miller <davem@davemloft.net>,Sun Sep 28 17:32:16 2014 -0400,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,"merge branch 'next' hariprasad shenai says use new gts for , adds adaptive rx and few device id's this patch series adds support to use new gts for adapter. adds support for adaptive rx. remove redundant variable from a macro of driver. adds device id for new adapters. the patches series is created against 'netnext' tree. and includes patches on and driver. we have included all the maintainers of respective drivers. kindly review the change and let us know in case of any review comments. s. miller",neutral,7.0
416,e09bceac75b86c672b6e41b9341fa50325713438,Jingoo Han <jg1.han@samsung.com>,Wed Aug 27 10:11:52 2014 +0900,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,backlight remove 'else' after a return fixed the following checkpatch warning. warning else is not generally useful after a break or return han jones,satisfaction,3.0
417,6f83ab76b8e6ed3d9b8187ffd97bfd68c8a9a045,Greg Kroah-Hartman <greg@kroah.com>,Sat Aug 30 17:30:04 2014 -0700,torvalds/linux,4589,2014Q3,4589 torvalds/linux 2014Q3,greybus apusb more init framework added.,frustration,5.0
418,83d6e27e6856edf30845df8708b3b1e226ba5c7f,Dinh Nguyen <dinguyen@kernel.org>,Fri Feb 23 17:24:59 2018 -0600,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"defconfig enable stmmac ethernet to defconfig this patch enables the config_stmmac_eth to the default defconfig the stmmac ethernet controller is on the platform, and thus needs driver to be in the kernel image for nfs to work. nguyen",satisfaction,2.0
419,4b67157f04b584379dd0e7426bf3485a85c9bb77,Rafael J. Wysocki <rafael.j.wysocki@intel.com>,Thu Jan 18 02:55:09 2018 +0100,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,merge branch 'pmcore' pmcore commits dmaengine rcardmac make dmac reinit during system resume explicit pm runtime allow no callbacks in pm_runtime_force_suspendresume pm runtime check ignore_children in pm_runtime_need_not_resume pm runtime rework pm wakeup print warn if device gets enabled as wakeup source during sleep pm core propagate wakeup_path status flag in __device_suspend_late pm core restructure code for clearing the direct_complete flag pm designwareplatdrv optimize power management pm designwareplatdrv use dpm_flag_smart_prepare pm mfd intellpss use dpm_flag_smart_suspend pci pm use smart_suspend and leave_suspended flags for pcie ports pm wakeup add device_set_wakeup_path helper to control wakeup path pm core assign the wakeup_path status flag in __device_prepare pm wakeup do not fail dev_pm_attach_wake_irq unnecessarily pm core direct dpm_flag_leave_suspended handling pm core direct dpm_flag_smart_suspend optimization pm core add helpers for subsystem callback selection pm wakeup drop redundant check from device_init_wakeup pm wakeup drop redundant check from device_set_wakeup_enable pm wakeup only recommend calling device_init_wakeup once,frustration,4.0
420,3b8bd500c9953c59e892c41edffeef1f5099e189,Takashi Iwai <tiwai@suse.de>,Wed Feb 28 08:17:38 2018 +0100,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,merge branch 'forlinus' into fornext backmerge for applying a cleanup to iwai,caution,2.0
421,ed65b00f8de1d0687565a1ad6511901a721adb66,Theodore Ts'o <tytso@mit.edu>,Sun Feb 18 21:33:13 2018 -0500,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"clarify bad journal block checksum message there were two error messages emitted by , one for a bad checksum for a descriptor block, and one for a bad checksum for a data block. change the data block checksum error so that the two can be disambiguated. ts'o",satisfaction,3.0
422,4e88d4c083016454f179686529ae65d70b933b58,Martin Blumenstingl <martin.blumenstingl@googlemail.com>,Sat Mar 3 22:43:03 2018 +0100,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"usb add a flag to skip phy initialization to struct usb_hcd the usb hcd core driver parses the devicetree node for phys and usbphys properties. it also manages the power state of these phys automatically. however, drivers may optout of this behavior by setting phy or usb_phy in struct usb_hcd to a nonnull value. an example where this is required is the qualcomm controller, implemented by the chipidea driver. the hardware requires that the phy is only powered on after the reset completed event from the controller is received. a followup patch will allow the usb hcd core driver to manage more than one phy. add a new skip_phy_initialization bitflag to struct usb_hcd so drivers can optout of any phy management provided by the usb hcd core driver. this also updates the existing drivers so they use the new flag if they want to opt out of the phy management provided by the usb hcd core driver. this means that for these drivers the new multiple phy handling which will be added in a followup patch will be disabled as well. blumenstingl chen testedby neil armstrong kroahhartman",caution,3.0
423,f085f672b7d4033ea40db8c4b6929324833ce7b2,Anson Huang <Anson.Huang@nxp.com>,Fri Mar 2 09:59:30 2018 +0800,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"thermal imx add i. thermal sensor support this patch adds i. thermal sensor support, most of the i. thermal sensor functions are same with i. except the registers , so we move those registers definitions to soc data structure. i. uses single calibration data , the calibration data is located at ocotp offset xf, bit, the formula is as below tmeas nmeas is the fuse value for . huang ping aisheng guo herring valentin",neutral,4.0
424,0cb5818a3b250de64e02592f4584f7c21d9566b8,Gustavo A. R. Silva <garsilva@embeddedor.com>,Thu Jan 18 16:25:51 2018 -0600,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,usb gadget compress return logic into one line simplify return logic and avoid unnecessary variable assignment. a. r. silva kroahhartman,frustration,3.0
425,f3b906d720e429a3acd95f8cbd4fda366fb1659d,Nobutaka Okabe <nob77413@gmail.com>,Fri Mar 23 19:21:13 2018 +0900,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"alsa usbaudio integrate native dsd support for itfusb based dacs. integrate the native dsd support quirk codes of itfusb dsd based dacs. now, is_itf_usb_dsd_alts_dac and is_itf_usb_dsd_alts_dac is integrated into one function is_itf_usb_dsd_dac. so, remove the logic to distinguish ud and udv by the product name. the integration is possible by changing the following two functions. snd_usb_select_mode_quirk change the determination condition of the dsd mode switch command, from the altset number being used, to the audio format being played. actually, this operation is same as playback using asio driver in windows environment. snd_usb_interface_dsd_format_quirk to which altset supports native dsd is determined by the number of altsets. previously, it's a constant or . okabe iwai",satisfaction,6.0
426,4ffb75c2dc3ae818bf8a32493e22ac632dd51558,Geert Uytterhoeven <geert+renesas@glider.be>,Fri Mar 2 14:38:05 2018 +0100,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,"arm nspire remove unneeded nspire_map_io nspire_map_io just calls debug_ll_io_init. if machine_desc.map_io is not set, devicemaps_init in the common arm code will call debug_ll_io_init, so nspire_map_io and the initialization of .map_io can be removed. uytterhoeven murzin bergmann",satisfaction,5.0
427,2ee0826085d1c0281cb60c1f4bc3e0c27efeedc3,Mike Rapoport <rppt@linux.vnet.ibm.com>,Tue Feb 6 15:40:17 2018 -0800,torvalds/linux,4589,2018Q1,4589 torvalds/linux 2018Q1,pids introduce find_get_task_by_vpid helper there are several functions that do find_task_by_vpid followed by get_task_struct. we can use a helper function instead. link rapoport nesterov morton torvalds,neutral,3.0
428,e4a744ef2fef5c803348b650a3a2d01da7797a9b,Josh Poimboeuf <jpoimboe@redhat.com>,Fri Aug 19 06:52:55 2016 -0500,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"ftrace remove config_have_function_graph_fp_test from config make have_function_graph_fp_test a normal define, independent from kconfig. this removes some config file pollution and simplifies the checking for the fp test. suggestedby steven rostedt poimboeuf rostedt cc andy lutomirski cc andy lutomirski cc borislav petkov cc brian gerst cc byungchul park cc denys vlasenko cc frederic weisbecker cc h. peter anvin cc kees cook cc linus torvalds cc nilay vaish cc peter zijlstra cc thomas gleixner link molnar",frustration,2.0
429,a79bff21c120a615dc8ba6df9258e9e2ef022e3b,Richard Weinberger <richard@nod.at>,Thu Sep 29 18:00:57 2016 +0200,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"ubifs implement file open operation we need open for files to load the crypto key. if the no key is present and the file is encrypted, refuse to open. weinberger",caution,4.0
430,22184917ab61e97ce5f0025027d414ce33edc752,Wolfram Sang <wsa-dev@sang-engineering.com>,Thu Aug 25 19:39:29 2016 +0200,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,usb renesas_usbhs mod_host don't print on enomem all kmallocbased functions print enough information on failures. sang balbi,caution,3.0
431,c12944f7faa7f76441d83c1413f13e8bc70162b2,Arnaldo Carvalho de Melo <acme@redhat.com>,Tue Aug 9 14:56:13 2016 -0300,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"perf disassemble move check for kallsyms !kcore we don't need to do all that filename logic to then just have to test something unrelated and bail out, move it to the start of the function. cc adrian hunter cc david ahern cc jiri olsa cc namhyung kim cc wang nan link carvalho de melo",neutral,1.0
432,84c7a7771fc846cfe98af086f5d5ec6d0ca6249c,Mel Gorman <mgorman@techsingularity.net>,Thu Jul 28 15:46:44 2016 -0700,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"mm, vmscan have kswapd reclaim from all zones if reclaiming and buffer_heads_over_limit the buffer_heads_over_limit limit in kswapd is inconsistent with direct reclaim behaviour. it may force an an attempt to reclaim from all zones and then not reclaim at all because higher zones were balanced than required by the original request. this patch will causes kswapd to consider reclaiming from all zones if buffer_heads_over_limit. however, if there are eligible zones for the allocation request that woke kswapd then no reclaim will occur even if buffer_heads_over_limit. this avoids kswapd overreclaiming just because buffer_heads_over_limit. link link gorman cc hillf danton weiner babka cc joonsoo kim cc michal hocko cc minchan kim cc rik van riel morton torvalds",satisfaction,5.0
433,13c4245b53aca55ee523e1731c247d3d19d070fa,Bjorn Andersson <bjorn.andersson@linaro.org>,Wed Aug 10 11:57:03 2016 -0700,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"remoteproc only update table_ptr if we have a loaded table in the case that we have a resource table, but not a loaded one we should leave the table_ptr intact, as subsequent resource handling could otherwise dereference the null pointer. andersson",neutral,6.0
434,371a17ed415af2023dddf90210122241d69b6727,Johannes Berg <johannes.berg@intel.com>,Mon Aug 15 09:26:32 2016 +0200,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,iwlwifi mvm expose device timestamp in radiotap set the relevant fields to export the bit device timestamp to radiotap using the new infrastructure. this will be useful to allow synchronising monitor captures taken on different hardware simultaneously. berg coelho,caution,4.0
435,04143fbaeb579983fcc96f8e1c186e1512984b51,Dong Aisheng <aisheng.dong@nxp.com>,Tue Jul 12 15:46:12 2016 +0800,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,mmc sdhciesdhcimx add esdhc specific suspend resume callback it will be used for platform specific state work for some low power mode like or lpsr mode. hunter aisheng hansson,caution,2.0
436,9f3156903df3f7d9bba9acde810d78bca94305d5,Arnaldo Carvalho de Melo <acme@redhat.com>,Mon Aug 15 17:42:30 2016 -0300,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,tools sync kvm related header files for and from a quick look nothing stands out as requiring changes to kvm tools such as stat.c. silences these header checking warnings make c make entering directory '' build doing 'make ' parallel build warning kvm.h differs from kernel warning sie.h differs from kernel warning kvm.h differs from kernel cc adrian hunter cc alexander yarygin cc david ahern cc hemant kumar cc jiri olsa cc michael ellerman cc namhyung kim cc naveen n. rao cc scott wood cc srikar dronamraju cc wang nan link carvalho de melo,satisfaction,4.0
437,5b97469a55872a30a0d53a1279a8ae8b1c68b52c,Arnd Bergmann <arnd@arndb.de>,Mon Jul 4 15:12:28 2016 +0200,torvalds/linux,4589,2016Q3,4589 torvalds/linux 2016Q3,"thermal qcom tsens mark pm functions __maybe_unused the newly added tsens driver produces warnings when config_pm is disabled . error 'tsens_resume' defined but not used static int tsens_resumestruct device dev . error 'tsens_suspend' defined but not used static int tsens_suspendstruct device dev this marks both functions __maybe_unused to let the compiler know that they might be used in other configurations, without adding ugly ifdef logic. bergmann nayak rui",satisfaction,3.0
438,7c7bcfeae2d8e59066bd273b7d70392574e14c15,Andy Shevchenko <andriy.shevchenko@linux.intel.com>,Fri Dec 15 23:25:11 2017 +0200,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"acpi boot don't setup sci on hwreduced platforms as per note in fixed acpi description table fadt chapter of acpi specification, on hwreduced platforma ospm should ignore fields related to the acpi hw register interface, one of which is sci_int. follow the spec and ignore any configuration done for interrupt line defined by sci_int if fadt specifies a hwreduced platform. hwreduced platforms will still be able to use sci in case it provides an override record in madt table. shevchenko j. wysocki",caution,3.0
439,03ac1a76ce5e5a6052a421e1d6a5c97778e88a8c,Chuck Lever <chuck.lever@oracle.com>,Thu Dec 14 20:56:01 2017 -0500,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"xprtrdma fix buffer leak after transport set up failure this leak has been around forever, and is exceptionally rare. einval causes mount to fail with an incorrect mount option was specified although it's not likely that one of the mount options is incorrect. instead, return enodev in this case, as this appears to be an issue with system or device configuration rather than a specific mount option. some obsolete comments are also removed. lever schumaker",neutral,4.0
440,ad7532cefd11d11a0814a75fb814c205ee3d9d4c,Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>,Wed Oct 11 09:35:01 2017 -0700,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"iio hidsensortrigger don't touch sensors unless user space requests one of the user complained that on his system thinkpad yoga , with commit feaacec iio hidsensortrigger fix the race with user space powering up sensors causes the system to resume immediately on suspend operation. on this system the sensor hub is on usb and is a wake up device from . so if any sensor sends data on motion, the system will wake up. this can be a legitimate use case to wake up device motion, but that needs proper user space support to set right thresholds. in fact the above commit didn't cause this regression, but any operation which cause sensors to wake up would have caused the same issue. so if user reads the raw sensor data, same issue occurs, with or without this commit. only difference is that the above commit by default will trigger a power up and power down of sensors as part of runtime pm enable runtime enable will cause a runtime resume callback followed by runtime_suspend callback. previously user has to do some action on sensors. on investigation it was observed that the current driver correctly changing the state of all sensors to power off but then also some sensor will still send some data. only option is to never power up any sensor. only good option is to using sysfs interface disable usb as a wakeup device this will not need any driver change since some user don't care about sensors. so for those users this change brings back old functionality. as long as they don't cause any operation to power up sensors like raw read or start iiosensorproxy service, the sensors will not be to touched. this is done by delaying run time enable till user space does some operation with sensors. link pandruvada cameron",satisfaction,3.0
441,961559f317fc53f69b6732dd450094bb0cab1e0c,Gilad Ben-Yossef <gilad@benyossef.com>,Tue Dec 12 14:53:06 2017 +0000,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,staging ccree rename enums from ssi_ to cc_ unify naming convention by renaming all ssi_ enums and variables to cc_ benyossef kroahhartman,frustration,5.0
442,4d5f022f3a664ee5987118b754058ff31df03835,Christian Gromm <christian.gromm@microchip.com>,Tue Nov 21 15:04:43 2017 +0100,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,staging most remove proprietary kobjects this patch removes the proprietary kobjects used by the driver modules and replaces them with device structs. the patch is needed to have the driver being integrated into the kernel's device model. gromm kroahhartman,satisfaction,2.0
443,3fb04cb0bea5c68c23eaf0cfbd4de840a7948ee9,Chris Wilson <chris@chris-wilson.co.uk>,Sun Dec 17 13:28:52 2017 +0000,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"selftests fix up igt_reset_engine now that we skip a perengine reset on an idle engine, we need to update the selftest to take that into account. in the process, we find that we were not stressing the perengine reset very hard, so add those missing active resets. actually test i_reset_engine by loading it with requests. fixes fbaada skip an engine reset if it recovered before our preparations bugzilla wilson cc michel thierry cc mika kuoppala link thierry",caution,4.0
444,865463fc03ed6d1685d19dbef847b0e7abcc7fbf,Hans Verkuil <hans.verkuil@cisco.com>,Tue Oct 31 09:55:09 2017 -0400,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"media cecpin add error injection support implement all the error injection commands. the state machine gets new states for the various error situations, helper functions are added to detect whether an error injection is active and the actual error injections are implemented. verkuil carvalho chehab",satisfaction,2.0
445,ea25f914dc164c8d56b36147ecc86bc65f83c469,Jann Horn <jannh@google.com>,Mon Dec 18 20:11:57 2017 -0800,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"bpf fix missing error return in check_stack_boundary prevent indirect stack accesses at nonconstant addresses, which would permit reading and corrupting spilled pointers. fixes ffbc rework value tracking horn starovoitov borkmann",satisfaction,1.0
446,c4459a086748848b8a498282780f708c235a06a5,Kees Cook <keescook@chromium.org>,Wed Oct 4 17:53:48 2017 -0700,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"pci pciehp convert timers to use timer_setup in preparation for unconditionally passing the struct timer_list pointer to all timer callbacks, switch to using the new timer_setup and from_timer to pass the timer pointer explicitly. this fixes what appears to be a bug in passing the wrong pointer to the timer handler address of ctrl pointer instead of ctrl pointer. cook helgaas cc mika westerberg cc mayurkumar patel cc keith busch cc thomas gleixner",satisfaction,7.0
447,36c4449a949c47ca152901758ee3c6175df35231,Russell King <rmk+kernel@armlinux.org.uk>,Fri Dec 29 12:46:32 2017 +0000,torvalds/linux,4589,2017Q4,4589 torvalds/linux 2017Q4,"net phy clean up interface mode switching centralise the phy interface mode switching, rather than having it in two places. king lunn s. miller",frustration,2.0
448,8be5b161bb3d07bc5a119dfe0285ec05d28202c9,Paul Kocialkowski <paul.kocialkowski@bootlin.com>,Wed Dec 5 10:24:43 2018 +0100,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,"dts allwinner add video engine node this adds the video engine node for the . since it can map the whole dram range, there is no particular need for a reserved memory node unlike platforms preceding the . kocialkowski tsai ripard",neutral,5.0
449,68c9ac1d1fd51233cfac15484c6153b90aaa4ca4,Christoph Hellwig <hch@lst.de>,Tue Dec 4 14:33:24 2018 -0800,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,dmamapping remove the mapping_error dma_map_ops method no users left except for vmd which just forwards it. hellwig torvalds,caution,5.0
450,8602663096ce671802c1b90272f798a827dbe45d,Cezary Gapinski <cezary.gapinski@gmail.com>,Mon Dec 24 23:00:33 2018 +0100,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,spi rename spi registers to stmh rename spi registers to be related to stmh spi driver and not generally. gapinski brown,frustration,7.0
451,35a6054132286a4ab92b536595093b82e6bdfcbc,Marek Szyprowski <m.szyprowski@samsung.com>,Tue Nov 20 16:38:15 2018 +0100,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,"usb disable power down feature on samsung socs power down feature of module integrated in samsung socs doesn't work properly or needs some additional handling in phy or soc glue layer, so disable it for now. without disabling power down, causes random memory trashes and fails enumeration if there is no usb link to host on driver probe. fixes eadeeff usb enable power down harutyunyan szyprowski balbi",neutral,5.0
452,7d5bca1cca18e522ba214efead58a4400a7e53a9,Jernej Skrabec <jernej.skrabec@siol.net>,Sun Nov 4 19:27:05 2018 +0100,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,dts allwinner enable hdmi output on pine board pine board has hdmi type a connector. skrabec ripard,frustration,2.0
453,d0522f1cd25edb796548f91e04766fa3cbc3b6df,David Ahern <dsahern@gmail.com>,Tue Nov 6 12:51:14 2018 -0800,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,net add extack argument to rtnl_create_link add extack arg to rtnl_create_link and add messages for invalid number of tx or rx queues. ahern s. miller,satisfaction,1.0
454,9434f5d3bef97c7212ef6d96d7783e3a3a6c1cb5,Harald Freudenberger <freude@linux.ibm.com>,Fri Oct 12 08:35:24 2018 +0200,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,"fix broken zcrypt_send_cprb inkernel api function with the new multi zcrypt device node support there came in a code rework which broke the inkernel api function zcrypt_send_cprb. this function is used by the pkey kernel module and as an effect, transforming a secure key into a protected key did not work any more. freudenberger schwidefsky",caution,4.0
455,c0fae7e2452b90c31edd2d25eb3baf0c76b400ca,Aaro Koskinen <aaro.koskinen@iki.fi>,Sat Oct 27 01:46:34 2018 +0300,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,"mips octeon fix out of bounds array access on the maximum number of interfaces is returned by cvmx_helper_get_number_of_interfaces, and the value is used to access interface_port_count. when support was added, we forgot to increase the array size. fix that. fixes ccf mips octeon support additional interfaces on koskinen burton patchwork cc ralf baechle cc cc cc .",caution,1.0
456,803cc52323e0c863d3f08740b8c156593a5ca1e9,Sasha Neftin <sasha.neftin@intel.com>,Tue Dec 11 18:55:41 2018 +0200,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,igc remove unreachable code from igc_phy.c file address community comment. remove the unreachable code leads to the static checker warning. phy functionality will be added later per demand. reported by dan carpenter. neftin testedby aaron brown kirsher,neutral,5.0
457,e94e50bd88f7ed2f2d40c32c06efd61c36c33ec8,Paolo Abeni <pabeni@redhat.com>,Fri Dec 21 19:03:13 2018 +0100,torvalds/linux,4589,2018Q4,4589 torvalds/linux 2018Q4,"net fix possible userafterfree in skb_ext_add on cow we can free the old extension we must avoid dereferencing such extension after skb_ext_maybe_cow. since 'new' contents are always equal to 'old' after the copy, we can fix the above accessing the relevant data using 'new'. fixes dffcb sk_buff add skb extension infrastructure abeni westphal s. miller",neutral,3.0
458,fca13fd03da7898e7d513ea795b176bfb51ab9ff,Larry Finger <Larry.Finger@lwfinger.net>,Sun Sep 8 20:59:57 2019 -0500,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,"rtlwifi convert inline routines to littleendian words in this step, the routines for the descriptors are converted to use __le quantities, thus a lot of casts can be removed. callback routines still use the bit arrays, but these are changed within the specified routine. the macro that cleared a descriptor has now been converted into an inline routine. finger valo",neutral,2.0
459,2ad1274fa35ace5c6360762ba48d33b63da2396c,Jacob Keller <jacob.e.keller@intel.com>,Tue Jul 2 08:22:54 2019 -0400,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,"don't report link up for a vf who hasn't enabled queues commit dda update vfs of link state after get_vf_resources modified the pf driver to notify a vf of its link status immediately after it requests resources. this was intended to fix reporting on vf drivers, so that they would properly report link status. however, some older vf drivers do not respond well to receiving a link up notification before queues are enabled. this can cause their state machine to think that it is safe to send traffic. this results in a tx hang on the vf. more recent versions of the old and all versions of iavf are resilient to these early link status messages. however, if a vm happens to run an older version of the vf driver, this can be problematic. record whether the pf has actually enabled queues for the vf. when reporting link status, always report link down if the queues aren't enabled. in this way, the vf driver will never receive a link up notification until after its queues are enabled. keller testedby andrew bowers kirsher",neutral,4.0
460,36de077b20d05321466f8eaba0ae01b9b18ad93c,Masahiro Yamada <yamada.masahiro@socionext.com>,Thu Aug 22 13:46:13 2019 +0900,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,"kbuild check clean srctree even earlier move the outputmakefile target to the leftmost in the prerequisite list so that this is checked first. gnu make processes the prerequisites left to right. gnu make will keep to stick to this behavior, and it seems even posix standard, according to this the posix standard of make is available here of course, when the parallel option j given, other targets will be run simultaneously but it is nice to show the error as early as possible. yamada",satisfaction,2.0
461,a1916a153c254cd0ad13b23bed262ed56922cc7a,Andrii Nakryiko <andriin@fb.com>,Tue Aug 13 11:54:43 2019 -0700,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,libbpf attempt to load kernel btf from sysfs first add support for loading kernel btf from sysfs as a target btf. also extend the list of on disk search paths for vmlinux elf image with entries that perf is searching for. nakryiko borkmann,neutral,3.0
462,6535e831b4c867467d838f2c7866b4dce1d74679,Stuart Henderson <stuarth@opensource.wolfsonmicro.com>,Thu Jul 25 17:39:31 2019 +0100,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,asoc csl add codec driver for cirrus logic csl adds the codec driver for the csl smartcodec. this is a multifunctional codec based on the cirrus logic madera platform. henderson keepax link brown,satisfaction,3.0
463,fa6e951a2a440babd7a7310d0f4713e618061767,Linus Torvalds <torvalds@linux-foundation.org>,Sun Jul 14 19:29:04 2019 -0700,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,merge tag 'ecryptfs.fixes' of pull ecryptfs updates from tyler hicks fix error handling when ecryptfs_read_lower encounters an error fix readonly file creation when the ecryptfs mount is configured to store metadata in xattrs minor code cleanups tag 'ecryptfs.fixes' of ecryptfs change return type of ecryptfs_process_flags ecryptfs make ecryptfs_xattr_handler static ecryptfs remove unnessesary null check in ecryptfs_keyring_auth_tok_for_sig ecryptfs use print_hex_dump_bytes for hexdump ecryptfs fix permission denied with ecryptfs_xattr mount option when create readonly file ecryptfs reorder a condition for static checkers ecryptfs fix a couple type promotion bugs,frustration,4.0
464,c8a41c6afa27b8c3f61622dfd882b912da9d6721,Denis Kenzior <denkenz@gmail.com>,Tue Aug 27 17:41:19 2019 -0500,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,"don't memset rxcb prior to pae intercept in intercepts eapol frames if is configured to do so and forwards the contents over . during this process some additional data is also forwarded, including whether the frame was received encrypted or not. unfortunately just prior to the call to , skbcb is cleared, resulting in incorrect data being exposed over . fixes ffbfd send control port frames over cc kenzior link berg",frustration,2.0
465,0b8dc6abbdb9f6696b1a79c42976e506645e5c2c,Yan-Hsuan Chuang <yhchuang@realtek.com>,Mon Sep 23 10:47:03 2019 +0800,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,"configure firmware after hci started after firmware has been downloaded, driver should send some information to it through commands. those commands are transmitted through tx path. but before hci has been started, the tx path is not working completely. such as pci interfaces, the interrupts are not enabled, hence tx interrupts will not be issued after skb has been dmaed to the device. and the skbs will not be released until the device is powered off. chuang valo",neutral,5.0
466,556a0964e28c4441dcdd50fb07596fd042246bd5,Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>,Mon Sep 9 11:08:50 2019 +0200,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,mailbox qcomapcs fix max_register value the mailbox length is x hence the max_register value is . fixes cabcae mailbox qcom convert apcs ipc driver to use regmap ramirezortiz brar,frustration,2.0
467,8dbdee8e8acc4f56febb8f5bf226f1ebfdd36219,Navid Emamdoost <navid.emamdoost@gmail.com>,Wed Sep 11 17:26:00 2019 -0300,torvalds/linux,4589,2019Q3,4589 torvalds/linux 2019Q3,media usb null check create_singlethread_workqueue in sd_start return value of create_singlethread_workqueue needs null check. emamdoost verkuil carvalho chehab,neutral,7.0
468,73097564b57bad21efbb72e49a0edf0d13e9c249,dmichael@chromium.org <dmichael@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jan 12 19:38:55 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,"reland make it possible to have ppapiglobals per thread. original cl , reverted in , due to a static initializer. this is the same as except using a lazyinstance to eliminate the static initializer. bug chromium.org review url dcbdfc",caution,5.0
469,ac39e47dcf5fc5cf9ad630b9e219e9d43c53035c,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Jan 31 12:11:35 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,"web inspector show sizes in bytes instead of kb, mb in heap profiler. patch by alexei filippov on reviewed by pavel feldman. .js webinspector.heapsnapshotgenericobjectnode.prototype.get data webinspector.heapsnapshotinstancenode.prototype._enhancedata webinspector.heapsnapshotconstructornode.prototype.get data webinspector.heapsnapshotdiffnode.prototype.get data .js number.withthousandsseparator bb",neutral,5.0
470,a0c61e42f80cffc77172a36a078514ac5d4430de,mmenke@chromium.org <mmenke@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Mar 14 20:25:00 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,"switch ordering of prerender and nacl allowed checks when creating a plugin. chromium.org .prerendernaclplugindisabled, prerenderbrowsertestwithnacl.prerendernaclpluginenabled review url dcbdfc",frustration,4.0
471,5d64227a4411261c7840220f9075bb47163c4df2,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Feb 1 22:02:47 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,rebaseline boxshadowclippedslices patch by elliot poger on reviewed by stephen white. boxshadowclippedslicesexpected.png boxshadowclippedslicesexpected.png bb,neutral,2.0
472,2e8b36d515ecc06129c205ac1b8ea1fd0d0ced1b,enne@google.com <enne@google.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Feb 27 22:19:12 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,"unreviewed gardening, mark two tests as failing test_expectations.txt bb",neutral,3.0
473,b2d78470385b9131dd387183ce300fdaeb303cb5,dpapad@chromium.org <dpapad@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Feb 10 18:38:30 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,print preview refactoring sticky settings code. placing all stored settings in a separate class and also moving some logic. settings behavior should be unaffected. review url dcbdfc,neutral,5.0
474,e1e61fa390235bc3005344ec82676a88b63e9f33,ossy@webkit.org <ossy@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Jan 26 13:43:26 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,one more speculative buildfix after . javascriptcore.pri wtf.pri bb,neutral,3.0
475,8e68c0e72ff14a2b5dd7ddada520593a55df3652,podivilov@chromium.org <podivilov@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Feb 10 10:02:14 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,"unreviewed, rebaseline .expected.png on chromium mac. maccarto.expected.png maccarto.expected.txt maccarto.expected.png maccarto.expected.txt copied from chromiummaccarto.expected.txt. .expected.png removed. bb",neutral,4.0
476,45d8ab2e5999947afd517625949f93846fb2d0c7,ben@chromium.org <ben@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sun Feb 26 01:11:49 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,remove a bunch more uses of rootwindowgetinstance review url dcbdfc,frustration,7.0
477,bfeb8e17bedaee5a6e94f1e5a657995ec5ae6cbd,yutak@chromium.org <yutak@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Feb 22 11:24:56 2012 +0000,chromium/chromium,4568,2012Q1,4568 chromium/chromium 2012Q1,webkit roll . chromium.org review url dcbdfc,satisfaction,3.0
478,952eb819e3234b9deceb3287398f0c2a272e4760,Ben Skeggs <bskeggs@redhat.com>,Mon May 30 10:32:55 2016 +1000,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,top take nvkm_device as argument to public functions skeggs,satisfaction,2.0
479,50fd4987c4f3c3ebf0ce94d932732011bbdc7c71,Takashi Iwai <tiwai@suse.de>,Sun Apr 17 09:39:41 2016 +0200,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,"alsa hda don't trust the reported actual power state we've got a regression report that the recording on mac with a cirrus codec doesn't work any longer. this turned out to be the missing power up to by power_save_node enablement. after analyzing the traces, we found out that the culprit is that the codec advertises the actual power state of a few nodes to be while the target power state is . this inconsistency is usually ok, as it implies the power transition. but in the case of cirrus codec, this seems to be stuck to while it's not actually . this patch addresses the issue by checking the power state difference more strictly. it sends the powerstate change verb unless both the target and the actual power states show the given value. we may introduce yet another flag indicating the possible broken hardware power state, but it's anyway safer to set the proper power state even in a transition at least it's harmless as long as the target state is same. so this simpler change was applied now. bugzilla cc . iwai",frustration,2.0
480,0d922f441dadf054ad707c6000ce0797d291fb52,Arnd Bergmann <arnd@arndb.de>,Tue Apr 26 13:13:34 2016 +0200,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,merge tag 'arm.' of into merge arm add oxnas platform support from neil armstrong this is for the based chip used in some older nas appliances. there is another related chip based on that might get added here later. tag 'arm.' of maintainers add maintainer entry for platform arm add new machoxnas irqchip versatilefpga add new compatible for soc,neutral,3.0
481,f9d1e7f389b3724ee7d6dde7427b10806bc66577,Linus Torvalds <torvalds@linux-foundation.org>,Sat Apr 23 11:04:26 2016 -0700,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,merge branch 'forlinus' of pull input subsystem fixes from dmitry torokhov just minor driver fixes 'forlinus' of input vibra do not reparent to grandparent input vibra do not reparent to grandparent input vibra ignore return value of schedule_work input vibra fix null pointer dereference by removing workqueue input pwrkey fix algorithm for converting trigger delay input arizonahaptic don't assign input_dev parent input clarify we want btn_tool_ on proximity input xpad add mad catz fightstick te input gtco fix crash on detecting device without endpoints,satisfaction,3.0
482,5b28b8c45979e78e91773ec93a33c5dbafb737f7,H Hartley Sweeten <hsweeten@visionengravers.com>,Fri Apr 8 12:41:56 2016 -0700,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,"staging comedi move comment about max conversion speeds for aesthetics, move this information into the comedi comment block. hartley sweeten abbott kroahhartman",neutral,5.0
483,5e64fa9c441ff273f39527f4014d3c3e724d321a,Jani Nikula <jani.nikula@intel.com>,Thu May 19 20:32:48 2016 +0300,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,"kernel fix use of uninitialized value i'm not quite sure why the errors below are happening, but this fixes them. use of uninitialized value in string ne at .doc line , line . use of uninitialized value _ in join or string at .doc line , line . nikula",neutral,1.0
484,d349caeb05104ef01392abc6c7cfc8ab516c7be4,PC Liao <pc.liao@mediatek.com>,Thu Apr 21 19:38:14 2016 +0800,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,asoc mediatek add second on machine driver this patch adds second connection to codec for capture path on machine driver. liao brown,neutral,3.0
485,4d31c6109a24892df461b6a98842935e80159a5e,Andrey Smirnov <andrew.smirnov@gmail.com>,Mon May 2 14:09:10 2016 -0500,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,"pci implement reset sequence for i. i. has a dedicated bit for resetting pcie core, which should be used instead of a regular reset sequence since using the latter will hang the soc. this commit is based on cdeddaabeed from testedby gary bisson smirnov helgaas estevam",caution,3.0
486,a90295b4884f7467f4d5a4ffccc6facdf3ba9fe2,Paul Gortmaker <paul.gortmaker@windriver.com>,Mon May 9 19:59:58 2016 -0400,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,"gpio zevio make it explicitly nonmodular the kconfig currently controlling compilation of this code is gpio_zevio kconfig bool lsi zevio soc memory mapped gpios meaning that it currently is not being built as a module by anyone. lets remove the modular code that is essentially orphaned, so that when reading the driver there is no doubt it is builtinonly. we explicitly disallow a driver unbind, since that doesn't have a sensible use case anyway, and it allows us to drop the .remove code for nonmodular drivers. since module_platform_driver uses the same init level priority as builtin_platform_driver the init ordering remains unchanged with this commit. also note that module_device_table is a noop for nonmodular code. we also delete the module_license tag etc. since all that information is already contained at the top of the file in the comments. cc linus walleij cc alexandre courbot cc fabian vogt cc gortmaker walleij",satisfaction,4.0
487,3d042d4633d7b180e08abead7bd7de0bb194b256,Mika Kuoppala <mika.kuoppala@linux.intel.com>,Tue Jun 7 17:19:00 2016 +0300,torvalds/linux,4589,2016Q2,4589 torvalds/linux 2016Q2,kbl add wadisablefencedestinationtoslm for add this workaround for kbl revid only. rebase carve out a non related workaround chris references hsd cc chris wilson kuoppala auld link cherry picked from commit dfdadfefb kuoppala,frustration,5.0
488,b9fb433072ebeffe9ae30c819f8032e8583d16fe,Jan Moskyto Matejka <mq@suse.cz>,Wed Apr 30 15:22:17 2014 +0200,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"fixed definednotused warning by cleaning up bt_auto_report_only_e_ant always set to , never used as constant halbtceant_iswifi_status_changed was called only from the unused code moskyto matejka kroahhartman",satisfaction,3.0
489,23a456f05353035d1a2b3f1b9a92707acdc036e0,Daniel Mack <zonque@gmail.com>,Tue May 6 18:52:16 2014 +0200,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"net mdio of_mdiobus_register fall back to mdiobus_register for !config_of if config_of is not set, make of_mdiobus_register call mdiobus_register instead of returning enosys. this way, we can just call of_mdiobus_register from all dtenabled drivers to handle the compat cases. mack suggestedby florian fainelli fainelli v n s. miller",satisfaction,4.0
490,be6a6f8ec707f2e446e445ad4b8cc93cc85d5d54,Daniel Vetter <daniel.vetter@ffwll.ch>,Tue Apr 15 18:41:22 2014 +0200,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"don't vblank wait on ilkivb after pipe enable like on the pipe isn't actually running yet at this point. this holds for both pch ports and the cpu edp port according to my testing on ilk, snb and ivb. bugzilla syrjälä vetter",neutral,4.0
491,628ed4717000789bff827c5799d1aac4c1008541,Santosh Shilimkar <santosh.shilimkar@ti.com>,Tue May 20 16:19:23 2014 -0500,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"arm add hook in soc initcalls to enable pm initialization with consolidated code, now we can add the required hooks for to enable power management. shilimkar menon hilman testedby kevin hilman",frustration,4.0
492,43759d4f429c8d55fd56f863542e20f4e6e8f589,Theodore Ts'o <tytso@mit.edu>,Sat Jun 14 21:43:13 2014 -0400,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,random use an improved fast_mix function use more efficient fast_mix function. thanks to george spelvin for doing the leg work to find a more efficient mixing function. ts'o cc george spelvin,neutral,6.0
493,ecad159a24e587c9f315e561fb509fe1cd9b54ba,Doug Anderson <dianders@chromium.org>,Fri May 16 05:16:11 2014 +0900,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,arm dts add pinctrl for ec irq of snow added pinctrl node for embedded controller ec irq on snow board. anderson kamat figa kim,satisfaction,6.0
494,8930ed80f970a90a795239e7415c9b0e6f964649,Thomas Gleixner <tglx@linutronix.de>,Thu May 22 03:25:47 2014 +0000,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,rtmutex cleanup deadlock detector debug logic the conditions under which deadlock detection is conducted are unclear and undocumented. add constants instead of using and provide a selection function which hides the additional debug dependency from the calling code. add comments where needed. gleixner cc peter zijlstra rostedt cc lai jiangshan link gleixner,satisfaction,5.0
495,39f1a8ebbacfee86c53f7b6b1dda8e9c14e9772b,Jes Sorensen <Jes.Sorensen@redhat.com>,Fri May 16 10:04:20 2014 +0200,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"staging make direct calls to remove another round of hal wrapping, and remove unused . sorensen kroahhartman",frustration,5.0
496,2937f5efa5754754daf46de745f67350f7f06ec2,Linus Torvalds <torvalds@linux-foundation.org>,Tue Jun 10 16:58:32 2014 -0700,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"merge branch 'for_linus' of pull platform driver updates from matthew garrett very little of excitement here the most significant is a new driver for detecting device freefall on dells, other than that it's pretty much entirely minor fixes for specific machines 'for_linus' of hpwmi enable hotkeys on some systems thinkpad_acpi add mappings for hotkeys on platform dell dell latitude freefall driver acpi ideapad_laptop introduce the use of the managed version of kzalloc fix runtime dependencies of olpc drivers platform asuswmi.c cleaning up uninitialized variables thermal introduce the use of the managed version of kzalloc platform kconfig refer to the laptop list in the compal driver help documentation add list of laptop models supported by the compal driver ideapadlaptop blacklist rfkill control on the lenovo yoga asuswmi set wapf to for asus alienwarewmi for wmax hdmi method, introduce a way to query hdmi cable status alienwarewmi update wmax brightness method limit to pvpanic set high notifier priority samsunglaptop add support for samsung's npue models. toshiba_acpi add alternative keymap support for satellite platformdrivers intel_pmic_gpio fix offbyone valid offset range check",neutral,2.0
497,2284ba6b7d8310d09f3a0a5d81669632532ec26c,Maxime Ripard <mripard@kernel.org>,Fri Apr 18 20:10:41 2014 +0200,torvalds/linux,4589,2014Q2,4589 torvalds/linux 2014Q2,"pinctrl sunxi libraryse the driver this will allow to have multiple drivers using the same core code, and eventually, retire pinctrlsunxipins.h ripard",neutral,5.0
498,52d63671c15bd3dfcd72f4ea324b338d1309db97,Gabriel Laskar <gabriel@lse.epita.fr>,Tue Oct 6 16:27:36 2015 +0200,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,msm remove unused header laskar bergmann kroahhartman,neutral,2.0
499,295d8fa961466bb9e9ebb87b46fdad4edaf736de,Christian Borntraeger <borntraeger@de.ibm.com>,Thu Oct 29 01:16:04 2015 +0100,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"use builtin bswap depending on the gcc version we can use builtin_bswap instead of architecture functions. doing so is better than the inline assembly version of load reverse for two reasons the sequence of load reversed, apply constant mask, save reversed can be optimized to load, apply reversed mask, save builtins are slightly better to optimize e.g. gcc instruction scheduler cannot optimize grouping on inline assemblies. to enable set we have to arch_use_builtin_bswap. bloatometer results suggestedby david woodhouse borntraeger carstens schwidefsky",frustration,4.0
1000,27441e5c4704c374dc3b0850c416a110a9149985,Vitaly Buka <vitalybuka@google.com>,Mon Mar 13 23:46:30 2017 +0000,llvm/llvm-project,1805,2017Q1,1805 llvm/llvm-project 2017Q1,fix compilation of customcrossoverandmutatetest on windows llvmsvn,caution,3.0
1001,44a87c9f1b330d243eae87c60151711c5b0b486a,Arpith Chacko Jacob <acjacob@us.ibm.com>,Wed Jan 18 19:35:00 2017 +0000,llvm/llvm-project,1805,2017Q1,1805 llvm/llvm-project 2017Q1,"codegen for the 'target parallel' directive on the nvptx device. this patch adds codegen for the 'target parallel' directive on the nvptx device. we term offload openmp directives such as 'target parallel' and 'target teams distribute parallel for' as spmd constructs. spmd constructs, in contrast to generic ones like the plain 'target', can never contain a serial region. spmd constructs can be handled more efficiently on the gpu and do not require the warp loop of the generic codegen scheme. this patch adds spmd codegen support for 'target parallel' on the nvptx device and can be reused for other spmd constructs. reviewers abataev differential revision llvmsvn",satisfaction,4.0
1002,1c8c6a457ddfc61570c03293742c17559158532f,Sanjay Patel <spatel@rotateright.com>,Tue Mar 14 16:27:46 2017 +0000,llvm/llvm-project,1805,2017Q1,1805 llvm/llvm-project 2017Q1,consolidate rem tests and update checks nfc llvmsvn,satisfaction,5.0
1003,9538bc4578ebf4c9e776a3eaf6f3ca2f20d27f15,Zachary Turner <zturner@google.com>,Wed Mar 1 01:04:16 2017 +0000,llvm/llvm-project,1805,2017Q1,1805 llvm/llvm-project 2017Q1,"add an additional test for binarystreamref. a bug was uncovered where if you have a streamref whose viewoffset is , then when you call readlongestcontiguouschunk it will succeed even when it shouldn't, and it always return you a buffer that was taken as if the viewoffset was . fixed this bug and added a test for it. llvmsvn",neutral,4.0
1004,692b42fbb0530b41d9575c12e13076d160ab12a5,Simon Pilgrim <llvm-dev@redking.me.uk>,Mon Nov 4 17:16:52 2019 +0000,llvm/llvm-project,1805,2019Q4,1805 llvm/llvm-project 2019Q4,mcdwarffiledirindex fix uninitialized variable warning. nfci.,frustration,4.0
1005,d5b7a4e2e8dc63b02129a29745c548613152a522,Thomas Lively <tlively@google.com>,Wed Oct 9 17:39:19 2019 +0000,llvm/llvm-project,1805,2019Q4,1805 llvm/llvm-project 2019Q4,"vx.swizzle and rewrite build_vector lowering summary adds the new vx.swizzle simd instruction as specified at in addition to adding swizzles as a candidate lowering in lowerbuild_vector, also rewrites and simplifies the lowering to minimize the number of replace_lanes necessary rather than trying to minimize code size. this leads to more uses of .const instead of splats, which is expected to increase performance. the new code will be easier to tune once implements all the vector construction operations, and it will also be easier to add new candidate instructions in the future if necessary. reviewers aheejin, dschuff subscribers , jgravellegoogle, hiraditya, sunfish, llvmcommits tags llvm differential revision llvmsvn",neutral,2.0
1006,6baec971271b7dc9db610da30a192e57ff03d935,David Bozier <daveb@graphcore.ai>,Tue Nov 19 11:58:50 2019 +0000,llvm/llvm-project,1805,2019Q4,1805 llvm/llvm-project 2019Q4,"print relocation addends in hexadecimal summary matches gnu objdump. makes debugging easier for me as i'm working out addresses from symboladdend, so it would be good to be calculating in a single format. reviewers maskray, grimar, jhenderson, reviewed by jhenderson subscribers sdardis, , atanasyan, rupprecht, seiya, llvmcommits tags llvm differential revision",satisfaction,3.0
1007,ce5de93e838f7391760ba2956c7e0ae5d203cb6f,Fangrui Song <i@maskray.me>,Tue Nov 19 09:47:17 2019 -0800,llvm/llvm-project,1805,2019Q4,1805 llvm/llvm-project 2019Q4,disallow outofrange section group indices after exposed by groupwrongsection.test,neutral,2.0
1008,0a1c6c2ee5cf889dcbd4f8f1657955bb9fc8a7c7,Xiuli Pan <xiulipan@outlook.com>,Wed Mar 30 04:46:32 2016 +0000,llvm/llvm-project,1805,2016Q1,1805 llvm/llvm-project 2016Q1,"fix pipe builtin bugs summary . diag should be output if types are not the same. . should compare using canonical type. . refine the diag to be more clear. reviewers yaxunl, anastasia subscribers matspetersson, pekka.jaaskelainen, cfecommits differential revision llvmsvn",neutral,2.0
1009,b4f94aaf9b628de30b5ab386b7f5463941db6de6,Siva Chandra <sivachandra@google.com>,Tue Jan 12 22:33:19 2016 +0000,llvm/llvm-project,1805,2016Q1,1805 llvm/llvm-project 2016Q1,"adjust match substring after recent change. reviewers zturner subscribers zturner, lldbcommits differential revision llvmsvn",satisfaction,2.0
1010,64322c0331ecb8628ef7ced3dd17c058f1060266,Mohit K. Bhakkad <mohit.bhakkad@gmail.com>,Tue Jan 12 05:55:03 2016 +0000,llvm/llvm-project,1805,2016Q1,1805 llvm/llvm-project 2016Q1,"fix readregistervalue for registers with constant bit size regardless of abi reviewers clayborg, tberghammer. subscribers jaydeep, bhushan, sagar, nitesh.jain, lldbcommits. differential revision llvmsvn",satisfaction,2.0
1011,29bfa893cc148b4933996914f4628fd2bf487eed,Justin Lebar <jlebar@google.com>,Tue Jan 12 22:23:04 2016 +0000,llvm/llvm-project,1805,2016Q1,1805 llvm/llvm-project 2016Q1,"add explicit mapping from sm_xx to compute_yy. summary this is used by when it invokes fatbinary. reviewers tra subscribers cfecommits, jhen, echristo differential revision llvmsvn",neutral,1.0
1012,edd6a20c473a770b8908f944e47f5b3d6379b658,Mehdi Amini <aminim@google.com>,Tue Sep 3 15:39:14 2019 -0700,tensorflow/tensorflow,496,2019Q3,496 tensorflow/tensorflow 2019Q3,fix signature for createtfexecutorgraphpruningpass to return a unique_ptr piperoriginrevid,satisfaction,4.0
1013,0b53a72a863a3b68b741c22028bf87c9198f3445,Jacques Pienaar <jpienaar@google.com>,Mon Aug 19 14:00:56 2019 -0700,tensorflow/tensorflow,496,2019Q3,496 tensorflow/tensorflow 2019Q3,initllvm already initializes prettystacktraceprogram remove extra prettystacktraceprogram and use initllvm consistently. piperoriginrevid,neutral,3.0
1014,efb2bb09f4eba575eee1702edf16f50184915020,Fei Hu <hufei68@gmail.com>,Mon Aug 5 23:36:24 2019 -0700,tensorflow/tensorflow,496,2019Q3,496 tensorflow/tensorflow 2019Q3,reduce the repeat code for batchdatasetoptest,satisfaction,1.0
1015,5bbeb0870fe934c0c58549f2b60f96378e07544d,Sanjoy Das <sanjoy@google.com>,Thu Jul 4 20:57:43 2019 -0700,tensorflow/tensorflow,496,2019Q3,496 tensorflow/tensorflow 2019Q3,bump open source llvm revision to piperoriginrevid,neutral,2.0
1016,3763f307bd3bcfd03a6dd67a3e34e050ffef2e6b,Matt Arsenault <Matthew.Arsenault@amd.com>,Sun Aug 12 19:29:53 2018 +0000,llvm/llvm-project,1805,2018Q3,1805 llvm/llvm-project 2018Q3,amdgpu cleanup legacy tests also add some more tests in preparation for a future patch. llvmsvn,caution,4.0
1017,b8b21d2fcac48ef26d3af325cc4d6cf4bddb78f7,Craig Topper <craig.topper@intel.com>,Sun Jul 22 05:16:50 2018 +0000,llvm/llvm-project,1805,2018Q3,1805 llvm/llvm-project 2018Q3,use apintiszero instead of comparing apintgetzextvalue to in a place where we can't be sure contents of the apint fit in a uint_t. this is used on an extract vector element index which is most cases is going to be an or and the element will be a valid element number. but it is possible to construct ir with a larger type and large out of range value. llvmsvn,satisfaction,4.0
1018,f925b33854ffa79f302ddc6dcac8aba91d108bda,Nico Weber <nicolasweber@gmx.de>,Fri Jul 20 21:06:41 2018 +0000,llvm/llvm-project,1805,2018Q3,1805 llvm/llvm-project 2018Q3,fix typo llvmsvn,neutral,3.0
1019,20d78921437054d186a78fee0ac09cce4dafa363,Lang Hames <lhames@gmail.com>,Mon Aug 27 22:30:57 2018 +0000,llvm/llvm-project,1805,2018Q3,1805 llvm/llvm-project 2018Q3,"add unit tests for the new class. the new unit tests match the old ones, which will remain in tree until the old rtdyldobjectlinkinglayer is removed. llvmsvn",frustration,5.0
1020,ea1ae5949d7fcd2e622226ba71741a0f43b6ef0a,Christoph Hellwig <hch@lst.de>,Fri Jun 29 10:57:56 2007 +1000,torvalds/linux,4589,2007Q2,4589 torvalds/linux 2007Q2,spusched fix binding add a cpus_allowed allowed filed to struct spu_context so that we always use the cpu mask of the owning thread instead of the one happening to call into the scheduler. also use this information in grab_runnable_context to avoid spurious wakeups. hellwig bergmann kerr mackerras,frustration,3.0
1021,693aa9470d8273a0ded8b211a8f5f7c0835adf30,Mark Mason <mmason@upwardaccess.com>,Thu Apr 26 00:23:22 2007 -0700,torvalds/linux,4589,2007Q2,4589 torvalds/linux 2007Q2,"add napi support to mac.c patch to add napi support to mac.c rev . this patch differs from the last in that the napi support isn't marked as experimental, nor is it configurable ie. once applied napi is enabled all the time. this was based on feedback from ralf and others. mason morton garzik",neutral,1.0
1022,891ce207011d3d9219f79fd5114c8594bbacc653,Heinz Mauelshagen <hjm@redhat.com>,Wed May 9 02:33:00 2007 -0700,torvalds/linux,4589,2007Q2,4589 torvalds/linux 2007Q2,dm io prepare for new interface introduce struct dm_io_client to prepare for perclient mempools and bio_sets. temporary functions bios and io_pool choose between the perclient structures and the global ones so the old and new interfaces can coexist. make error_bits optional. mauelshagen g kergon cc milan broz morton torvalds,satisfaction,3.0
1023,d0aff6e6f4e54f79f9c89d147d371bad384454e9,John Stultz <johnstul@us.ibm.com>,Mon May 21 14:31:52 2007 +0200,torvalds/linux,4589,2007Q2,4589 torvalds/linux 2007Q2,"x_ vsyscall time fix the vsyscall time function basically returns the second portion of xtime directly. this however means that there is about a ticks worth of time each second where time will return a second value less then what gettimeofday does. additionally, this window where vtime is behind vgettimeofday grows when dynticks is enabled, so its probably good to get this in before dynticks lands. big thanks to sripathi for noticing this issue and creating a test case to work with! this patch changes the vtime implemenation to call vgettimeofday, much as syscall time implementation calls gettimeofday. stable candidate too stultz kleen torvalds",neutral,1.0
1024,e3773d632e74f9dbadd1aeff7f6cfab7411349a7,Manuel Jacob <me@manueljacob.de>,Tue Dec 29 21:57:55 2015 +0000,llvm/llvm-project,1805,2015Q4,1805 llvm/llvm-project 2015Q4,"assert that the gc.safepoint_poll function is present in the module. if running the placesafepoints pass on a module which doesn't have the gc.safepoint_poll function without disabling entry and backedge safepoints, previously the pass crashed with an obscure error because of a null pointer. now it fails the assert instead. llvmsvn",neutral,5.0
1025,74ca428df7fc1e3ec19029afa4b189d19e9d43e1,Manuel Klimek <klimek@google.com>,Mon Oct 19 08:27:51 2015 +0000,llvm/llvm-project,1805,2015Q4,1805 llvm/llvm-project 2015Q4,make test not rely on t ending on output. llvmsvn,neutral,5.0
1026,87c6c0797e22b5a8e95975e318b4e28931f2291f,Sanjay Patel <spatel@rotateright.com>,Thu Dec 10 16:34:21 2015 +0000,llvm/llvm-project,1805,2015Q4,1805 llvm/llvm-project 2015Q4,remove duplicated comments and don't repeat function names in comments nfc llvmsvn,frustration,2.0
1027,fd98ea89d9eb461713199bed5e27a94f44aeaba8,Dan Gohman <dan433584@gmail.com>,Tue Dec 8 03:42:50 2015 +0000,llvm/llvm-project,1805,2015Q4,1805 llvm/llvm-project 2015Q4,remove an unneeded static_cast. llvmsvn,satisfaction,2.0
1028,f7f6f823a4d71e7febbeaf1db4fccbb5a83005d3,Alex Lorenz <arphaman@gmail.com>,Tue May 9 16:05:04 2017 +0000,llvm/llvm-project,1805,2017Q2,1805 llvm/llvm-project 2017Q2,complete platform names in available expressions rdar llvmsvn,frustration,3.0
1029,eb930609e8452ec8281f1f62fdb741396df46ed0,Francis Ricci <francisjricci@gmail.com>,Wed Apr 19 21:11:07 2017 +0000,llvm/llvm-project,1805,2017Q2,1805 llvm/llvm-project 2017Q2,"implement stoptheworld for darwin reviewers kubamracek, alekseyshl subscribers llvmcommits differential revision llvmsvn",neutral,3.0
1030,1c2b3c43febaeafda86b6099920d7a40b80ede18,Rui Ueyama <ruiu@google.com>,Thu Apr 13 23:49:54 2017 +0000,llvm/llvm-project,1805,2017Q2,1805 llvm/llvm-project 2017Q2,remove useless namespaces. llvmsvn,caution,2.0
1031,cff8a34716ad5e979e601cee8151cce540bf1093,Davide Italiano <davide@freebsd.org>,Mon May 15 19:35:40 2017 +0000,llvm/llvm-project,1805,2017Q2,1805 llvm/llvm-project 2017Q2,remove unused setdefiningexpr. nfci. llvmsvn,neutral,3.0
1032,6f43d9df61b78358e238c08f6e1e4c2215bad131,Sam McCall <sam.mccall@gmail.com>,Tue Nov 15 10:58:16 2016 +0000,llvm/llvm-project,1805,2016Q4,1805 llvm/llvm-project 2016Q4,"fix uninitialized members. summary fix uninitialized members. reviewers jingham subscribers jingham, lldbcommits differential revision llvmsvn",neutral,2.0
1033,7e71415cb3f810e0d91537fe0997535a818236ac,Rafael Espindola <rafael.espindola@gmail.com>,Thu Dec 8 17:26:53 2016 +0000,llvm/llvm-project,1805,2016Q4,1805 llvm/llvm-project 2016Q4,add support for 'extern c'. it is used by qt. llvmsvn,satisfaction,2.0
1034,1394ce2aa2955589a1754cb1f5d5624760d8801f,Kostya Serebryany <kcc@google.com>,Sat Dec 10 01:19:35 2016 +0000,llvm/llvm-project,1805,2016Q4,1805 llvm/llvm-project 2016Q4,use __sanitizer_get_module_and_offset_for_pc to get the module name while printing the coverage llvmsvn,frustration,2.0
1035,abd69332e20327368bacaa647b5f5c7a77e2ff07,Adrian Prantl <aprantl@apple.com>,Tue Dec 20 02:09:59 2016 +0000,llvm/llvm-project,1805,2016Q4,1805 llvm/llvm-project 2016Q4,fix debug info metadata for upstream change in llvm. llvmsvn,satisfaction,5.0
1036,bd96e98af72b80c3d3b81849e45de92c8612475d,John McCall <rjmccall@apple.com>,Tue Sep 8 08:21:11 2015 +0000,llvm/llvm-project,1805,2015Q3,1805 llvm/llvm-project 2015Q3,move blockbyrefhelpers back to codegenmodule.h to placate msvc. llvmsvn,satisfaction,4.0
1037,185492755678040544e36133456a169641efe54c,Sanjay Patel <spatel@rotateright.com>,Tue Sep 8 18:24:36 2015 +0000,llvm/llvm-project,1805,2015Q3,1805 llvm/llvm-project 2015Q3,remove function names from comments nfc llvmsvn,frustration,4.0
1038,b4c1c28c6e1b8d9b7a1c6a9e62e46bb93bd3ef40,Derek Schuff <dschuff@google.com>,Mon Aug 3 18:01:50 2015 +0000,llvm/llvm-project,1805,2015Q3,1805 llvm/llvm-project 2015Q3,"fix testing for end of stream in bitstream reader. this fixes a bug found while working on the bitcode reader. in particular, the method bitstreamreaderatendofstream doesn't always behave correctly when processing a data streamer. the method fillcurword doesn't properly set if the data streamer was already at eof, but getbytes had not yet set the objectsize field of the streaming memory object. this patch fixes this problem, and provides a test to show that this problem has been fixed. patch by karl schimpf. differential revision llvmsvn",frustration,4.0
1039,c9f4aa6b8c114aaeec323007f95590b3af3cbec4,Sanjay Patel <spatel@rotateright.com>,Fri Aug 21 17:16:51 2015 +0000,llvm/llvm-project,1805,2015Q3,1805 llvm/llvm-project 2015Q3,save some testing time get rid of the nonsse chips in this test it doesn't matter what unaligned attribute the old chips have they can't use anything more than byte stores. llvmsvn,neutral,3.0
1040,718cc4ca2bfb3263c7ea3ceba9c194f9cd7292e2,Daniel Drake <dsd@gentoo.org>,Wed Nov 22 03:15:46 2006 +0000,torvalds/linux,4589,2006Q4,4589 torvalds/linux 2006Q4,"provide generic get_stats implementation and currently duplicate the same simplistic get_stats handler. additionally, requires the same handler to fix a bug where all stats are reported as . this patch adds a generic implementation to the layer, which drivers are free to override. drake w. linville",satisfaction,4.0
1041,36241b8c7cbcc83e7fd534d25e1df8339db8244e,Avi Kivity <avi@qumranet.com>,Fri Dec 22 01:05:20 2006 -0800,torvalds/linux,4589,2006Q4,4589 torvalds/linux 2006Q4,kvm amd svm save and restore the floating point unit state fixes sf bug segfaults in nbench. kivity morton torvalds,satisfaction,6.0
1042,ad892f5e0d01f3c3b475a688d1ddc211cf3ea56d,Yinghai Lu <yinghai.lu@amd.com>,Thu Dec 7 02:14:19 2006 +0100,torvalds/linux,4589,2006Q4,4589 torvalds/linux 2006Q4,"check vector in setup_ioapic_dest to verify if need setup_io_apic_irq setup_io_apic_irqs could fail to get vector for some device when you have too many devices, because at that time only boot cpu is online. so check vector for irq in setup_ioapic_dest and call setup_io_apic_irq to make sure ioapic irqrouting table is initialized. also seperate setup_io_apic_irq from setup_io_apic_irqs. lu kleen cc andi kleen cc eric w. biederman cc ingo molnar morton",caution,2.0
1043,170926993a320cd7b53c388e6ffc759de4fac472,Linus Torvalds <torvalds@g5.osdl.org>,Mon Nov 13 08:09:49 2006 -0800,torvalds/linux,4589,2006Q4,4589 torvalds/linux 2006Q4,merge master.kernel.orgcifs. master.kernel.orgcifs. fix minor problem with previous patch fix mount failure when domain not specified explicitly set statblksize nfs stress test generates flood of close with pending write messages,satisfaction,5.0
1044,ba3c02e461f3df902a3f3b180ae23860af50fafc,Sam McCall <sam.mccall@gmail.com>,Tue Apr 3 17:35:57 2018 +0000,llvm/llvm-project,1805,2018Q2,1805 llvm/llvm-project 2018Q2,"synthesize fix message when the diagnostic doesn't provide one. summary currently if a fix is attached directly to a diagnostic, we repeat the diagnostic message as the fix message. from eyeballing the top diagnostics, it seems describing the textual replacement would be much clearer. e.g. error use of undeclared identifier 'goo' did you mean 'foo'? action before use of undeclared identifier 'goo' did you mean 'foo'? action after change 'goo' to 'foo' reviewers ilyabiryukov subscribers klimek, jkorousapple, ioeric, maskray, cfecommits differential revision llvmsvn",neutral,1.0
1045,eadce02741ad5044c764bc22ed18d60892e4529d,Sameer AbuAsal <sabuasal@codeaurora.org>,Wed May 23 21:34:30 2018 +0000,llvm/llvm-project,1805,2018Q2,1805 llvm/llvm-project 2018Q2,"set costperuse for registers summary set costperuse higher for registers that are not used in the compressed instruction set. this will influence the greedy register allocator to reduce the use of registers that can't be encoded in bit instructions. this affects register allocation even when compressed instruction isn't targeted, we see no major negative codegen impact. reviewers asb reviewed by asb subscribers rbar, johnrusso, simoncook, jordy.potman.lists, apazos, nioshd, kitocheng, , zzheng, edwardjones, mgrang differential revision llvmsvn",neutral,2.0
1046,864ae8be95bfc4dc75d55de41b7e79a9423a9ecc,Wei Mi <wmi@google.com>,Mon Jun 11 23:39:02 2018 +0000,llvm/llvm-project,1805,2018Q2,1805 llvm/llvm-project 2018Q2,fix a buildbot error reported by sanitizerx_linuxfast functiongetguid may complain if its input is an empty stringref. llvmsvn,neutral,5.0
1047,3cc6cb1d3553df2bae730a31233e6e46f9697377,Craig Topper <craig.topper@intel.com>,Mon Jun 25 17:26:56 2018 +0000,llvm/llvm-project,1805,2018Q2,1805 llvm/llvm-project 2018Q2,sort the static memory folding tables by reg opcode. remove the regmem densemaps in favor of binary search. with the static tables sorted we can binary search them directly for regmem lookups. this removes densemaps that had to be created when is constructed. we still have one memreg densemap for the reverse direction. this is created just as before by walking the regmem arrays to populate it. differential revision llvmsvn,neutral,1.0
1048,fe5f181d549329573e9dccd84a6dce21375e90a9,TensorFlower Gardener <gardener@tensorflow.org>,Mon May 6 12:47:43 2019 -0700,tensorflow/tensorflow,496,2019Q2,496 tensorflow/tensorflow 2019Q2,merge pull request from piperoriginrevid,satisfaction,3.0
1049,3b73f44bec5fdf7de5ea37d2cc330a5c2ec6a0f3,Sanjoy Das <sanjoy@google.com>,Tue Apr 2 13:35:32 2019 -0700,tensorflow/tensorflow,496,2019Q2,496 tensorflow/tensorflow 2019Q2,bump open source llvm revision to piperoriginrevid,frustration,6.0
1050,240cb65fd0d6e8466207f226c95982072d235c3d,Yanhui Liang <yhliang@google.com>,Fri Apr 5 14:02:02 2019 -0700,tensorflow/tensorflow,496,2019Q2,496 tensorflow/tensorflow 2019Q2,standardize the layernormalization api on the batchnormalization layer. piperoriginrevid,neutral,3.0
1051,d8cf1b982a8082aea9e781e8b5b091124d1e29e4,TensorFlower Gardener <gardener@tensorflow.org>,Thu May 9 15:04:23 2019 -0700,tensorflow/tensorflow,496,2019Q2,496 tensorflow/tensorflow 2019Q2,merge pull request from piperoriginrevid,satisfaction,3.0
1052,3d16af69cfec6073c70d1e54d905b2fd155f25c7,Lang Hames <lhames@gmail.com>,Tue Oct 23 01:36:32 2018 +0000,llvm/llvm-project,1805,2018Q4,1805 llvm/llvm-project 2018Q4,show jitdylib search order in jitdylibdump. this can be helpful in debugging searchorder related failures. llvmsvn,neutral,1.0
1053,a60aa91374bbcafc0d032c3f4217637fc816b8bc,Hans Wennborg <hans@hanshq.net>,Mon Oct 1 12:07:45 2018 +0000,llvm/llvm-project,1805,2018Q4,1805 llvm/llvm-project 2018Q4,"revert try to convert vector insertextract to trunc this caused chromium builds to fail with illegal trunc assertion. see for repro. this transform is requested for the backend in but i figured it was worth doing in ir too, and it's probably easier to implement here, so that's this patch. in the simplest case, we are just truncating a scalar value. if the extract index doesn't correspond to the lsbs of the scalar, then we have to shiftright before the truncate. endianness makes this tricky, but hopefully the asciiart helps visualize the transform. differential revision llvmsvn",neutral,3.0
1054,2fa4bc9fc87f7304c92915e031fe13561bcc5aec,River Riddle <riverriddle@google.com>,Thu Nov 8 12:28:35 2018 -0800,llvm/llvm-project,1805,2018Q4,1805 llvm/llvm-project 2018Q4,implement value type abstraction for locations. value type abstraction for locations differ from others in that a location can not be null. note dyn_cast returns an optional. piperoriginrevid,satisfaction,5.0
1055,14af82a608637c3f17f1c6b5875db58958970ca4,Matthias Braun <matze@braunis.de>,Wed Nov 7 02:04:07 2018 +0000,llvm/llvm-project,1805,2018Q4,1805 llvm/llvm-project 2018Q4,regallocfast rename statistic from numcopies to numcoalesced the metric does not return the number of remaining or inserted copies but the number of copies that were coalesced. pick a more descriptive name. llvmsvn,neutral,2.0
1056,2fb2172e8b3ddd200df7ea1486b3ec3570991b2a,A. Unique TensorFlower <gardener@tensorflow.org>,Thu Jan 9 21:20:42 2020 -0800,tensorflow/tensorflow,496,2020Q1,496 tensorflow/tensorflow 2020Q1,internal change piperoriginrevid,neutral,1.0
1057,120b0f57f04266fd25edc1ef1bdae9200b570360,A. Unique TensorFlower <gardener@tensorflow.org>,Wed Feb 19 15:31:17 2020 -0800,tensorflow/tensorflow,496,2020Q1,496 tensorflow/tensorflow 2020Q1,go update generated wrapper functions for tensorflow ops. piperoriginrevid,neutral,1.0
1058,2c75a9aa69bfd93bfe256550996bbe11cdcb56f7,Advait Jain <advaitjain@google.com>,Wed Feb 26 10:03:32 2020 -0800,tensorflow/tensorflow,496,2020Q1,496 tensorflow/tensorflow 2020Q1,added command line option build_typedebugrelease to makefile. added build_typedebugrelease to makefile. make f will strip out all error logging and associated strings. piperoriginrevid,neutral,2.0
1059,814fb672bb1f5c872e9b9278228cf13a4265482e,A. Unique TensorFlower <gardener@tensorflow.org>,Tue Mar 31 12:10:40 2020 -0700,tensorflow/tensorflow,496,2020Q1,496 tensorflow/tensorflow 2020Q1,remove xladevice from pylocalbuffercopytoremotedevice the dst device is encoded in the serialized_descriptor. piperoriginrevid,neutral,2.0
1060,2c7e72cf42fd6cc2f5e0fef2c3b435cd14167b85,Nuno Lopes <nunoplopes@sapo.pt>,Mon Sep 21 14:11:56 2009 +0000,llvm/llvm-project,1805,2009Q3,1805 llvm/llvm-project 2009Q3,initialize symbolscanstartwithdigit to false by default llvmsvn,neutral,2.0
1061,148edca7b81ee72df9aec9eb687bceecfde1242a,Daniel Dunbar <daniel@zuster.org>,Thu Aug 13 23:47:58 2009 +0000,llvm/llvm-project,1805,2009Q3,1805 llvm/llvm-project 2009Q3,mark this test as requiring the powerpc target. llvmsvn,caution,6.0
1062,17ec6b11d2efd2996c27455c5294bd5981712f9d,Chris Lattner <sabre@nondot.org>,Sun Sep 20 06:45:52 2009 +0000,llvm/llvm-project,1805,2009Q3,1805 llvm/llvm-project 2009Q3,split random coff asmprinter state out to .h. make dllexport directives come out in determinstic order. llvmsvn,neutral,2.0
1063,c71f094c088c60faef6e1258ebfedeb41e959061,Fariborz Jahanian <fjahanian@apple.com>,Wed Aug 26 23:31:30 2009 +0000,llvm/llvm-project,1805,2009Q3,1805 llvm/llvm-project 2009Q3,irgen for type convesion of class objects. wip. llvmsvn,satisfaction,6.0
1064,dc797c0b555aa6ea8497aa9d6e54f1b3fb6b3df2,Adrian Prantl <aprantl@apple.com>,Tue Feb 6 20:48:35 2018 +0000,llvm/llvm-project,1805,2018Q1,1805 llvm/llvm-project 2018Q1,pass builddir to dotest in the xcode project llvmsvn,neutral,2.0
1065,c85be0de56f8f1f15b6ed17f0b7ee88386cd791e,Alex Bradbury <asb@lowrisc.org>,Wed Jan 10 19:41:03 2018 +0000,llvm/llvm-project,1805,2018Q1,1805 llvm/llvm-project 2018Q1,"support for varargs includes support for expanding va_copy. also adds support for using 'aligned' registers when necessary for vararg calls, and ensure the frame pointer always points to the bottom of the vararg spill region. this is necessary to ensure that the saved return address and stack pointer are always available at fixed known offsets of the frame pointer. differential revision llvmsvn",satisfaction,5.0
1066,15fdae6efeacbd30d65ed1478db95002c7a3e69d,peter klausler <pklausler@nvidia.com>,Tue Jan 30 11:47:17 2018 -0800,llvm/llvm-project,1805,2018Q1,1805 llvm/llvm-project 2018Q1,"add charbuffer.h,cc. originalcommit flang",neutral,2.0
1067,7d89ce97ecab86c0b48bce46ab51535ec9950c68,Volodymyr Sapsai <vsapsai@apple.com>,Thu Mar 29 17:34:09 2018 +0000,llvm/llvm-project,1805,2018Q1,1805 llvm/llvm-project 2018Q1,"make deprecation fixit replace all multiparameter objc method slots. deprecation replacement can be any text but if it looks like a name of objc method and has the same number of arguments as original method, replace all slot names so after applying a fixit you have valid code. rdar reviewers aaron.ballman, erik.pilkington, rsmith reviewed by erik.pilkington subscribers cfecommits, jkorousapple differential revision llvmsvn",frustration,3.0
1068,ac385b77756c599c0f1f932fd0526d5fadb197b8,George Karpenkov <ekarpenkov@apple.com>,Wed Aug 23 00:42:22 2017 +0000,llvm/llvm-project,1805,2017Q3,1805 llvm/llvm-project 2017Q3,update clang fuzzers to use libfuzzer bundled with the toolchain. differential revision llvmsvn,satisfaction,5.0
1069,327e9ecb0d7ee4a9841c67c72f3f890bd65832ea,Tobias Grosser <tobias@grosser.es>,Tue Aug 8 06:15:15 2017 +0000,llvm/llvm-project,1805,2017Q3,1805 llvm/llvm-project 2017Q3,"make matmul pattern detection work with delicm output in certain cases delicm might decide to not leave the original array write in the loop body, but to remove it and instead leave a transformed phi node as write access. this commit teached the matmul pattern detection to order the memory accesses according to when the access actually happens and use this information to detect the new pattern. this makes pattern based matmul optimization work for and in polybench after pollyvectorizer has been enabled. llvmsvn",satisfaction,3.0
1070,9f7032aaf09c82ceafd795e0dab94795d8d00e8e,Rui Ueyama <ruiu@google.com>,Thu Aug 24 20:26:54 2017 +0000,llvm/llvm-project,1805,2017Q3,1805 llvm/llvm-project 2017Q3,minor refactoring. nfc. llvmsvn,frustration,1.0
1071,95bd95c075067d904eaaad9c29a95afd16676952,Abhishek Aggarwal <abhishek.a.aggarwal@intel.com>,Tue Aug 8 09:25:50 2017 +0000,llvm/llvm-project,1805,2017Q3,1805 llvm/llvm-project 2017Q3,"checking in files accidentally missed in later diffs of revision files were missing in this commit which should have been there. these files were submitted initially for review and were reviewed. however, while updating the revision with newer diffs, i accidentally forgot to include them in newer diffs. so commiting now. llvmsvn",neutral,3.0
1072,34239a166dc5cc2137ba0096d62563e5efcc7e55,ggaren@apple.com <ggaren@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Feb 12 22:22:07 2009 +0000,chromium/chromium,4568,2009Q1,4568 chromium/chromium 2009Q1,geoffrey garen build fix. .cpp wtfrandomnumber bb,satisfaction,4.0
1073,a72a9e2cd58da67c82e5636c2b70a88800a7cb27,mbelshe@google.com <mbelshe@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Mar 30 23:02:55 2009 +0000,chromium/chromium,4568,2009Q1,4568 chromium/chromium 2009Q1,enable tcmalloc. i think this will be a good perf win. will test on bbots. review url dcbdfc,frustration,3.0
1074,8b6f3abcebeec2bc09c8186193060f711ad2365d,jar@chromium.org <jar@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Mar 30 18:23:13 2009 +0000,chromium/chromium,4568,2009Q1,4568 chromium/chromium 2009Q1,add cast to fix tree bustage on mac review url dcbdfc,frustration,3.0
1075,19acec58876633bff72e7ffd657b36a768f3bba5,bradnelson@google.com <bradnelson@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Mar 9 22:56:42 2009 +0000,chromium/chromium,4568,2009Q1,4568 chromium/chromium 2009Q1,snapshotting progress. got app and unit_tests linking with gyp under windows. still missing pieces things don't run. review url dcbdfc,satisfaction,3.0
1076,e77566112c8f6d3d4c57844958d4a0e2516be684,Elena Demikhovsky <elena.demikhovsky@intel.com>,Mon Jun 22 06:45:48 2015 +0000,llvm/llvm-project,1805,2015Q2,1805 llvm/llvm-project 2015Q2,avx added intrinsics for pd and pd instructions. added tests. llvmsvn,neutral,1.0
1077,e4ab49e8d3cfd1556b61d4af79fede0e477ebfb0,Daniel Jasper <djasper@google.com>,Mon Apr 20 12:54:29 2015 +0000,llvm/llvm-project,1805,2015Q2,1805 llvm/llvm-project 2015Q2,"clangformat fix incorrect multivar declstmt detection. this is now obvious as the pointer alignment behavior was changed. before even with pointer alignment left macro constructorconst int i aa, bb after macro constructorconst int i aa, bb llvmsvn",satisfaction,3.0
1078,0ebbe74b73c6b1e9167a7fe89cbccc6522b392e2,Alexey Samsonov <vonosmas@gmail.com>,Wed May 20 17:01:06 2015 +0000,llvm/llvm-project,1805,2015Q2,1805 llvm/llvm-project 2015Q2,temporary delete the test while we're investigating crashes in llvmobject it causes. llvmsvn,neutral,1.0
1079,269c2a29ef90279ac0dc4cd064ee05f3747d8d26,Eric Christopher <echristo@gmail.com>,Sat Apr 4 03:34:43 2015 +0000,llvm/llvm-project,1805,2015Q2,1805 llvm/llvm-project 2015Q2,complete comment. reflow conditional. llvmsvn,neutral,1.0
1080,d845e2de85495b4a08deb88c73b490d8fa474b61,amturati <amturati@google.com>,Fri Jul 24 18:25:11 2020 +0000,tensorflow/tensorflow,496,2020Q3,496 tensorflow/tensorflow 2020Q3,testing to make sure merge worked,caution,5.0
1081,60fa5d18665b6809add7d0a0f1f84d1f22e7ea34,Kibeom Kim <kkb@google.com>,Tue Jul 21 11:51:17 2020 -0700,tensorflow/tensorflow,496,2020Q3,496 tensorflow/tensorflow 2020Q3,"remove framef_trace dcheck, which is not always nullptr. piperoriginrevid",frustration,3.0
1082,81b5ff6655b743c503c9240d4f7db88d200451b3,TensorFlower Gardener <gardener@tensorflow.org>,Tue Jul 28 16:22:41 2020 -0700,tensorflow/tensorflow,496,2020Q3,496 tensorflow/tensorflow 2020Q3,merge pull request from filesystemtest piperoriginrevid,neutral,2.0
1083,13b4e8448881f9f94b7521353fc08f131984963b,TensorFlower Gardener <gardener@tensorflow.org>,Wed Aug 19 17:05:41 2020 -0700,tensorflow/tensorflow,496,2020Q3,496 tensorflow/tensorflow 2020Q3,merge pull request from codeadminopsarray_ops.py piperoriginrevid,satisfaction,3.0
1084,9ac7021a2563d433549a21990f96184d413e69e2,Max Kazantsev <max.kazantsev@azul.com>,Wed Oct 25 06:47:39 2017 +0000,llvm/llvm-project,1805,2017Q4,1805 llvm/llvm-project 2017Q4,"fix intersection between signed and unsigned ranges irce for unsigned latch conditions was temporarily disabled by . the motivating example contained an unsigned latch condition and a signed range check. one of the safe iteration ranges was . its right border was incorrectly interpreted as a negative value in intersectrange function, this lead to a miscompile under which we deleted a range check without inserting a postloop where it was needed. this patch brings back irce for unsigned latch conditions. now we treat range intersection more carefully. if the latch condition was unsigned, we only try to consider a range check for deletion if . the range check is also unsigned, or . safe iteration range of the range check lies within . the same is done for signed latch. values from are unambiguous, these values are nonnegative under any interpretation, and all values of a range intersected with such range are also nonnegative. we also use functions for range intersection depending on type of the latch condition. differential revision llvmsvn",neutral,1.0
1085,31b6b0a82051dd5375112a88d25efb5df4f1fc7c,George Rimar <grimar@accesssoftek.com>,Fri Nov 3 11:57:01 2017 +0000,llvm/llvm-project,1805,2017Q4,1805 llvm/llvm-project 2017Q4,"fix compilation after . not sure why that seems did not break any llvm bots or my windows local build, but is was required to fix compilation breakage of my ubuntu build when using gcc version experimental llvmsvn",neutral,1.0
1086,9b55e997478229fd7c45f1a7078380eacff3bb6b,David Blaikie <dblaikie@gmail.com>,Thu Nov 23 00:08:40 2017 +0000,llvm/llvm-project,1805,2017Q4,1805 llvm/llvm-project 2017Q4,instrumentation.h remove code for dfsan jit support llvmsvn,neutral,2.0
1087,15b832796348adce0c73ef1e63da28d1a8aaaae3,Rui Ueyama <ruiu@google.com>,Tue Oct 3 23:12:01 2017 +0000,llvm/llvm-project,1805,2017Q4,1805 llvm/llvm-project 2017Q4,simplify multikey_qsort function. this function implements the threeway radix quicksort algorithm. this patch simplifies the implementation by using mutablearrayref. llvmsvn,neutral,2.0
1088,e43e3c1e900ec5b6662cf1901b27975c111289bf,Zhu Yi <yi.zhu@intel.com>,Thu Apr 13 17:20:45 2006 +0800,torvalds/linux,4589,2006Q2,4589 torvalds/linux 2006Q2,rename config_ipw_qos to config_ipw_qos yi w. linville,satisfaction,4.0
1089,57c651f74cd8383df10a648e677902849de1bc0b,David S. Miller <davem@sunset.sfo1.dsl.speakeasy.net>,Tue May 23 17:39:49 2006 -0700,torvalds/linux,4589,2006Q2,4589 torvalds/linux 2006Q2,move pci_device_id_intel_ioat to .h s. miller,satisfaction,2.0
1090,cb7d390df391402c9630940d5a2ea1571fc5cde2,Roman Zippel <zippel@linux-m68k.org>,Fri Jun 23 02:04:56 2006 -0700,torvalds/linux,4589,2006Q2,4589 torvalds/linux 2006Q2,print correct stack trace pass unmodified stack argument to show_trace. zippel morton torvalds,neutral,2.0
1091,c45fb1089e714146206d7e295ff337893424c874,Alexey Dobriyan <adobriyan@gmail.com>,Mon May 29 18:27:32 2006 -0700,torvalds/linux,4589,2006Q2,4589 torvalds/linux 2006Q2,pptp helper fixup gre_keymap_lookup return type gre keys are bit wide. dobriyan mchardy s. miller,satisfaction,2.0
1092,9b82752179bd4a61a9d33a638b8d9cb06adcf9e0,Derek Murray <mrry@google.com>,Fri Oct 11 08:09:07 2019 -0700,tensorflow/tensorflow,496,2019Q4,496 tensorflow/tensorflow 2019Q4,"replace tf.data.experimental,contrib.data.unbatch with dataset.unbatch. piperoriginrevid",neutral,2.0
1093,41fe01bf47ca2d3c17b693ec1c71dbdec6333825,Owen L - SFE <owen.lyke@sparkfun.com>,Wed Dec 18 15:27:31 2019 -0700,tensorflow/tensorflow,496,2019Q4,496 tensorflow/tensorflow 2019Q4,remove workaround for bug,satisfaction,4.0
1094,14f9ddf2193d28c2539cbff97ced784ce4c1179c,Yash Katariya <yashkatariya@google.com>,Tue Oct 1 15:19:47 2019 -0700,tensorflow/tensorflow,496,2019Q4,496 tensorflow/tensorflow 2019Q4,add guide that shows how to write testable docstrings to the issue form in github. piperoriginrevid,satisfaction,5.0
1095,64298f151dc77857e65b8dc9c0436a2c0e02cb0e,Karim Nosir <karimnosseir@google.com>,Tue Nov 12 13:51:22 2019 -0800,tensorflow/tensorflow,496,2019Q4,496 tensorflow/tensorflow 2019Q4,add new issue template for tflite new converter piperoriginrevid,neutral,1.0
1096,94c821c0efea5a137847a8e1710f70accbaac265,TensorFlower Gardener <gardener@tensorflow.org>,Mon May 11 17:21:17 2020 -0700,tensorflow/tensorflow,496,2020Q2,496 tensorflow/tensorflow 2020Q2,merge pull request from piperoriginrevid,frustration,5.0
1097,a428ec179e3037c164886df692236561114830c0,Raman Sarokin <sorokin@google.com>,Mon Jun 15 16:06:18 2020 -0700,tensorflow/tensorflow,496,2020Q2,496 tensorflow/tensorflow 2020Q2,added new compiler option. piperoriginrevid,neutral,3.0
1098,935c55c590898f589de230c60ccbc6d50f09a8c7,Tomer Kaftan <kaftan@google.com>,Tue May 19 13:48:55 2020 -0700,tensorflow/tensorflow,496,2020Q2,496 tensorflow/tensorflow 2020Q2,"fix performance regression involving trainable check in batchnorm. the regression made it so a tf and op would be used for something that just required a python check, which in turn would make an if statement build a tf.cond instead of a python if. this change makes it just use a python if. piperoriginrevid",caution,2.0
1099,6772e0ca843165a3e6bde8efaf1bfcddb78adbe7,A. Unique TensorFlower <gardener@tensorflow.org>,Tue May 19 09:24:15 2020 -0700,tensorflow/tensorflow,496,2020Q2,496 tensorflow/tensorflow 2020Q2,internal visibility change piperoriginrevid,caution,5.0
1100,092bad1a3901a3dcf514d668b3d34f2af55aee24,Douglas Gregor <dgregor@apple.com>,Thu Jan 2 17:11:02 2014 +0000,llvm/llvm-project,1805,2014Q1,1805 llvm/llvm-project 2014Q1,"cmake unbreak separated project builds for xcode. the separate xcode project generated for clang is putting the clang executables into the same location where the llvm executables are going. this is wrong, and breaks the clang build because we try to create clang and clangcl symlinks in the wrong place and to the wrong place. as a stopgap to get these builds working again, teach the symlink generation to point into the llvm executable directory instead. llvmsvn",frustration,5.0
1101,a3f12bdeecaae4a8c17483f096d4c30a02036dd8,Saleem Abdulrasool <compnerd@compnerd.org>,Thu Jan 30 04:02:38 2014 +0000,llvm/llvm-project,1805,2014Q1,1805 llvm/llvm-project 2014Q1,"arm support tls descriptor relocations add support for tlsdesc relocations which are part of the abi, marked as experimental. these relocations permit the linker to perform tls reference optimizations. llvmsvn",frustration,5.0
1102,af4e64d0955aa47fd6e286ce48eeeed9a9ec7a4a,Paul Robinson <paul_robinson@playstation.sony.com>,Thu Feb 6 00:07:05 2014 +0000,llvm/llvm-project,1805,2014Q1,1805 llvm/llvm-project 2014Q1,"disable most irlevel transform passes on functions marked 'optnone'. ideally only those transform passes that run at remain enabled, in reality we get as close as we reasonably can. passes are responsible for disabling themselves, it's not the job of the pass manager to do it for them. llvmsvn",satisfaction,3.0
1103,dbf62e3eee51c0532da044a903ee48fe02b6f63e,Ted Kremenek <kremenek@apple.com>,Mon Jan 20 05:50:47 2014 +0000,llvm/llvm-project,1805,2014Q1,1805 llvm/llvm-project 2014Q1,"wire up basic support for attribute 'returns_nonnull'. this attribute is supported by gcc. more generally it should probably be a type attribute, but this behavior matches 'nonnull'. this patch does not include warning logic for checking if a null value is returned from a function annotated with this attribute. that will come in subsequent patches. llvmsvn",satisfaction,1.0
1104,e08de3790256134ada4cf1c95b6fe038ab5e16d3,Benjamin Kramer <benny.kra@googlemail.com>,Sun Feb 24 15:51:32 2013 +0000,llvm/llvm-project,1805,2013Q1,1805 llvm/llvm-project 2013Q1,"add the testcase from , this used to crash. the error is a bit strange tbh, but better than crashing. llvmsvn",frustration,5.0
1105,87eb229241c6958cbe982f897380ad2977084184,Kostya Serebryany <kcc@google.com>,Thu Jan 17 15:14:20 2013 +0000,llvm/llvm-project,1805,2013Q1,1805 llvm/llvm-project 2013Q1,attempting to fix the mac build llvmsvn,neutral,3.0
1106,7eb06859692c41fef8900b3157838548e67e3078,David Blaikie <dblaikie@gmail.com>,Mon Jan 7 23:06:35 2013 +0000,llvm/llvm-project,1805,2013Q1,1805 llvm/llvm-project 2013Q1,extract the instancemethod case for debug info out into a separate function. this is in preparation for using this to construct the function type for pointers to member functions to include the 'this' parameter in that case as well. feedback from gdb indicates that this might be all that's necessary to get it to behave well with clang's pointertomember function debug output llvmsvn,neutral,3.0
1107,c7f552c33efdf246fa26415631e106432f3de0f3,Chad Rosier <mcrosier@apple.com>,Tue Feb 12 21:33:51 2013 +0000,llvm/llvm-project,1805,2013Q1,1805 llvm/llvm-project 2013Q1,"implement align directive which is roughly equivalent to .align. also, allow _emit and __emit for the emit directive. we already do the same for type, size, and length. rdar llvmsvn",neutral,4.0
1108,f2b0aebb8af0c4161171ac5afc21b6da171b1f43,Matt Arsenault <Matthew.Arsenault@amd.com>,Mon Jun 23 18:28:28 2014 +0000,llvm/llvm-project,1805,2014Q2,1805 llvm/llvm-project 2014Q2,"fix div_scale intrinsic. the operand that must match one of the others does matter, and implement selecting for it. llvmsvn",frustration,3.0
1109,15dce7a8f3966a258cea8e905d692f51b2f0c7b7,Simon Atanasyan <simon@atanasyan.com>,Mon Apr 28 19:34:34 2014 +0000,llvm/llvm-project,1805,2014Q2,1805 llvm/llvm-project 2014Q2,convert mipsdynamicsymboltable to the class template. llvmsvn,frustration,2.0
1110,4719041db710a2666ceb3f50de980023ac2fc4fb,Tim Northover <tnorthover@apple.com>,Tue May 27 07:37:21 2014 +0000,llvm/llvm-project,1805,2014Q2,1805 llvm/llvm-project 2014Q2,"support 'c' and 'n' inline asm modifiers. these are tested by generic, so we should probably know how to deal with them. fortunately generic code does it if asked. llvmsvn",neutral,3.0
1111,23d26a3ef7dd345bdf63b3c2efb082bed1f58e1f,Hans Wennborg <hans@hanshq.net>,Wed Jun 18 17:21:50 2014 +0000,llvm/llvm-project,1805,2014Q2,1805 llvm/llvm-project 2014Q2,make clangcl accept .lib inputs patch by ehsan akhgari! tiny tweak by me renamed pathsegment to libdir. differential revision llvmsvn,neutral,5.0
1112,7233593b7844c2db930594ee9c0c872a6900bfcc,Zang Roy-r61911 <tie-fei.zang@freescale.com>,Fri Aug 25 14:16:30 2006 +1000,torvalds/linux,4589,2006Q3,4589 torvalds/linux 2006Q3,"support for weird mpics and fixup mpc_hpc this adds a new hardware information table for mpic. this enables the mpic code to deal with mpic controllers with different register layouts and hardware behaviours. this introduces config_mpic_weird. for boards with non standard mpic controllers, select config_mpic_weird and add its hardware information in the mpic_infos array. pic takes the first index of weird hardware information table. the table can be extended. the pic looks like standard openpic but, in fact, is different in register mapping and behavior. the patch does not affect the behavior of standard mpic. if config_mpic_weird is not defined, the code is essentially identical to the current code. zang herrenschmidt mackerras",caution,3.0
1113,0b1d647a02c5a1b67d45287eeb6cb3b2219c41c3,Pavel Mironchik <tibor0@gmail.com>,Thu Aug 31 21:27:47 2006 -0700,torvalds/linux,4589,2006Q3,4589 torvalds/linux 2006Q3,"dm work around mempool_alloc, bio_alloc_bioset deadlocks this patch works around a complex dmrelated down in the mempool allocator. alasdair said several dm targets suffer from this. mempools are not yet used correctly everywhere in devicemapper they can get shared when devices are stacked, and some targets share them across multiple instances. i made fixing this one of the prerequisites for this patch mddmreducestackusagewithstackedblockdevices.patch which in some cases makes people more likely to hit the problem. there's been some progress on this recently with unfinished dmcrypt patches at dmcryptmoveiotoworkqueue.patch plus dependencies and i've no problems with a temporary workaround like that, but milan broz a new redhat developer in the czech republic has started reviewing all the mempool usage in devicemapper so i'm expecting we'll soon have a proper fix for this associated problems. for now, this sadbutsafe little patch will allow the machine to recover. cc alasdair g kergon morton torvalds",neutral,2.0
1114,12500f07c6e179692ae3bd4d7bee9aa07ec74c25,Mauro Carvalho Chehab <mchehab@kernel.org>,Fri Aug 18 07:31:10 2006 -0300,torvalds/linux,4589,2006Q3,4589 torvalds/linux 2006Q3,"routing logic were broken. as pointed by the coverity checker, commit ccbcbbfefbfeacfd broked input selection. carvalho chehab",neutral,1.0
1115,f1f17716d13bfb709809a3f5c84bda105b646b9e,Kim Phillips <kim.phillips@freescale.com>,Fri Aug 25 11:59:22 2006 -0500,torvalds/linux,4589,2006Q3,4589 torvalds/linux 2006Q3,"modify platforms to use new irq layer this fixes mds formerly sys and itx platform code to get irq data including pci from the device tree, and to use the new ipic code. renamed defconfig sys mds, left one redundant null assignment in mpcxx_pcibios_fixup to keep the compiler happy. phillips yang mackerras",neutral,1.0
1116,3b1ca5a12ce9849a794019c4b51cdbd456c1e8e7,James Bottomley <jejb@mulgrave.il.steeleye.com>,Sat Jan 13 13:46:51 2007 -0600,torvalds/linux,4589,2007Q1,4589 torvalds/linux 2007Q1,ncr_d needs burst length setting to the needs the burst length setting to the previous c default of otherwise it will be effectively disabled. bottomley,neutral,3.0
1117,95efa03bd66511ca9fb4ebc528211166ac842d27,Mauro Carvalho Chehab <mchehab@kernel.org>,Wed Feb 14 22:55:53 2007 -0200,torvalds/linux,4589,2007Q1,4589 torvalds/linux 2007Q1,remove some unused code from kernel mainstream there are some long time unused code under some media driver source files. there's no need of keeping it at mainstream. those unused code will remain available at master tree and also at kernel history. carvalho chehab,satisfaction,3.0
1118,b87496aa493a540b9c084b16b73f915705ebdbcc,Al Viro <viro@ftp.linux.org.uk>,Wed Mar 14 09:19:50 2007 +0000,torvalds/linux,4589,2007Q1,4589 torvalds/linux 2007Q1,hidcore endianness annotations viro torvalds,neutral,2.0
1119,31ee4b2f40994e8b21691f85cdd4052551a789b7,Martin Schwidefsky <schwidefsky@de.ibm.com>,Mon Feb 5 21:18:31 2007 +0100,torvalds/linux,4589,2007Q1,4589 torvalds/linux 2007Q1,calibrate delay and bogomips. preset the bogomips number to the cpu capacity value reported by store system information in sysib this value is constant for a particular machine model and can be used to determine relative performance differences between machines. schwidefsky,satisfaction,4.0
1120,3af063cfb05df53b7d7791286beb4464332c9cff,Ben Barsdell <bbarsdell@nvidia.com>,Mon Mar 25 18:05:26 2019 -0700,tensorflow/tensorflow,496,2019Q1,496 tensorflow/tensorflow 2019Q1,return early if no whitelist ops found,neutral,1.0
1121,3f9c3d05329aec8af0330db66b0481d53658ee2a,Amit Srivastava <amit.srivastava@huawei.com>,Wed Mar 13 14:22:07 2019 +0530,tensorflow/tensorflow,496,2019Q1,496 tensorflow/tensorflow 2019Q1,replaced get_shape with shape. this is the recommended method to use.,frustration,3.0
1122,03af66db256fedeea8553f219741e87f05de26dd,Penporn Koanantakool <38085909+penpornk@users.noreply.github.com>,Wed Mar 13 22:23:13 2019 +0530,tensorflow/tensorflow,496,2019Q1,496 tensorflow/tensorflow 2019Q1,fix indentation coauthoredby kyscg,frustration,1.0
1123,2bd14a830f8143cee455d5abe8540e8923b25f63,Thomas O'Malley <omalleyt@google.com>,Fri Jan 18 12:27:52 2019 -0800,tensorflow/tensorflow,496,2019Q1,496 tensorflow/tensorflow 2019Q1,fix to make sure correctness tests run in all modes piperoriginrevid,neutral,4.0
1124,b42b661745c8d78cd3483752fb22cc7420c67f74,Paul Mackerras <paulus@samba.org>,Mon Oct 10 22:37:16 2005 +1000,torvalds/linux,4589,2005Q4,4589 torvalds/linux 2005Q4,powerpc make prom_init.c suitable for both bit and bit mackerras,neutral,3.0
1125,8c4b8add83c93306b07d78469fd351dc462e4b66,Paul Jackson <pj@sgi.com>,Mon Nov 28 13:44:05 2005 -0800,torvalds/linux,4589,2005Q4,4589 torvalds/linux 2005Q4,"cpuset fork locking fix move the cpuset_fork call below the write_unlock_irq call in .c copy_process. since the cpusetdualsemaphorelockingoverhaul.patch, the cpuset_fork routine acquires task_lock, so cannot be called while holding the tasklist_lock for write. jackson morton torvalds",satisfaction,2.0
1126,732ee21f2894819781766a0cd88e32bdd630d11e,Olof Johansson <olof@lixom.net>,Mon Nov 7 00:57:55 2005 -0800,torvalds/linux,4589,2005Q4,4589 torvalds/linux 2005Q4,fix build for two build fixes due to missing includes. johansson cc benjamin herrenschmidt cc paul mackerras morton torvalds,neutral,1.0
1127,d2d9252f35673f3a6c49ee302e8c735dea02eefe,Evan Cheng <evan.cheng@apple.com>,Fri Feb 19 00:34:39 2010 +0000,llvm/llvm-project,1805,2010Q1,1805 llvm/llvm-project 2010Q1,"transform xor setcc, setcc ! to xor setcc, setcc ! . e.g. on x_ icmp eq x, icmp eq y, xor , br , label bb, label return testl edi, edi sete al testl esi, esi sete cl cmpb al, cl je lbb_ llvmsvn",neutral,1.0
1128,96fe0b5b9670aa79fe147964ad0b6b96fd42500f,Anders Carlsson <andersca@mac.com>,Sat Jan 30 19:34:25 2010 +0000,llvm/llvm-project,1805,2010Q1,1805 llvm/llvm-project 2010Q1,combine asmstmtsetoutputsandinputs and asmstmtsetclobbers. llvmsvn,neutral,2.0
1129,98d0298a0e322c01eea7785ca62e2817ce6335b7,Mikhail Glushenkov <foldr@codedgers.com>,Tue Feb 23 14:29:42 2010 +0000,llvm/llvm-project,1805,2010Q1,1805 llvm/llvm-project 2010Q1,fix mtune forwarding. llvmsvn,neutral,5.0
1130,f2fa7bf0b750759652888e1bad8b3f838a822ac0,Chris Lattner <sabre@nondot.org>,Mon Nov 23 16:38:54 2009 +0000,llvm/llvm-project,1805,2009Q4,1805 llvm/llvm-project 2009Q4,add a helper llvmsvn,neutral,1.0
1131,6eb1201c90f6eea2768aa6f9315793c93669dddf,Daniel Dunbar <daniel@zuster.org>,Sun Nov 8 01:46:19 2009 +0000,llvm/llvm-project,1805,2009Q4,1805 llvm/llvm-project 2009Q4,move input files into a sub directory not scanned as tests. llvmsvn,satisfaction,6.0
1132,3f3a8b1c7e2bb0b4a991195c69727e31db7de19d,David Goodwin <david_goodwin@apple.com>,Tue Nov 24 00:59:08 2009 +0000,llvm/llvm-project,1805,2009Q4,1805 llvm/llvm-project 2009Q4,. allow multiple registers to be renamed together super and sub if necessary to break an antidependence. llvmsvn,neutral,2.0
1133,82504f03ce98c30da60a12d84c71384e44734f15,Hal Finkel <hfinkel@anl.gov>,Fri Jul 11 17:35:21 2014 +0000,llvm/llvm-project,1805,2014Q3,1805 llvm/llvm-project 2014Q3,"add nonnull in codegen for __attribute__nonnull we now have an llvmlevel nonnull attribute that can be applied to function parameters, and we emit it for reference types as of , but did not emit it when an __attribute__nonnull was provided. now we will. llvmsvn",neutral,1.0
1134,8876c3face0e6b0d0fa7cee476b308011fe9965e,Peter Collingbourne <peter@pcc.me.uk>,Thu Jul 10 04:39:40 2014 +0000,llvm/llvm-project,1805,2014Q3,1805 llvm/llvm-project 2014Q3,remove move assignment operator to appease older gccs. llvmsvn,neutral,1.0
1135,ed3d48f16128304821e884b4e4ff0ec6f95323bf,Robin Morisset <morisset@google.com>,Wed Sep 3 21:29:59 2014 +0000,llvm/llvm-project,1805,2014Q3,1805 llvm/llvm-project 2014Q3,"refactor atomicexpandpass and add a generic isatomic method to instruction summary split shouldexpandatomicinir into different versions for . makes runonfunction cleaner no more redundant , and will help moving the backend to this pass. this requires a way of easily detecting which instructions are atomic. i followed the pattern of mayreadfrommemory, maywriteorreadmemory, etc in making isatomic a method of instruction implemented by a switch on the opcodes. test plan make check reviewers jfb subscribers mcrosier, llvmcommits differential revision llvmsvn",caution,3.0
1136,3669c80de93aab2d9344a10bf3cfe7ae6fbdb04d,John McCall <rjmccall@apple.com>,Tue Aug 24 23:41:43 2010 +0000,llvm/llvm-project,1805,2010Q3,1805 llvm/llvm-project 2010Q3,preserve invalidity of typeof operands in c. llvmsvn,neutral,1.0
1137,6dcaa42540ab75f96a50d7d6c9a82ad14fd21ed1,Chris Lattner <sabre@nondot.org>,Mon Sep 6 03:12:27 2010 +0000,llvm/llvm-project,1805,2010Q3,1805 llvm/llvm-project 2010Q3,"same bug, another place. llvmsvn",caution,4.0
1138,75d26be81a299ee2de4f6e262606f68ee5a8eaac,Daniel Dunbar <daniel@zuster.org>,Wed Aug 11 06:37:16 2010 +0000,llvm/llvm-project,1805,2010Q3,1805 llvm/llvm-project 2010Q3,split mnemonic on '.' characters. llvmsvn,satisfaction,4.0
1139,47c65aaf1b04d625c34128f38d8c81e59b569580,chromium-autoroll <chromium-autoroll@skia-public.iam.gserviceaccount.com>,Mon Apr 5 17:45:52 2021 +0000,chromium/chromium,4568,2021Q2,4568 chromium/chromium 2021Q2,"roll chrome pgo profile roll chrome pgo profile from chromemasterecebfefbcbdceefedd.profdata to chromemasterfdbcdffcefaabeed.profdata if this roll has caused a breakage, revert this cl and stop the roller using the controls here please cc on the revert to ensure that a human is aware of the problem. to report a problem with the autoroller itself, please file a bug documentation for the autoroller is here cqincludetrybots luci.chrome.chrome tbr",satisfaction,2.0
1140,338f4c99901194a519a9230e1ceac50dc8f40199,Olabode Anise <anise@chromium.org>,Thu Apr 1 01:47:03 2021 +0000,chromium/chromium,4568,2021Q2,4568 chromium/chromium 2021Q2,change requirements for deep scanning. changes requirements for binary uploading so that enhanced protection users will have their files properly uploaded and scanned after prompted. bug,satisfaction,2.0
1141,99b86b1b7406b0bab42df0d3001819ba1276f175,Trent Apted <tapted@chromium.org>,Thu Apr 8 07:57:39 2021 +0000,chromium/chromium,4568,2021Q2,4568 chromium/chromium 2021Q2,"mediaapp support subtitles loading via the launchconsumer. currently, a drag drop approach works for subtitles, but file handles passed in from the privileged chromemediaapp context have additional protections that intentionally invalidate related files that appear not to be required for the currently active file. this is causing subtitle files to be unreadable in the app. to fix, detect the corresponding subtitle file in the manner currently used by the video player chrome app, and validate that file whenever the focus file changes. fixed",satisfaction,3.0
1142,c532f129652c4e4825e19b55645d57a787ecab78,Tobias Grosser <grosser@fim.uni-passau.de>,Thu Aug 25 08:40:59 2011 +0000,llvm/llvm-project,1805,2011Q3,1805 llvm/llvm-project 2011Q3,"fix crashes due to unaligned parameters due to the recent introduction of isl_id, parameters need now always to be aligned. this was not yet taken care of in the code path of vectorization and dependence analysis. llvmsvn",satisfaction,2.0
1143,db6f646ec300fa631c62695a8d5e7acbbce38878,Kalle Raiskila <kalle.raiskila@nokia.com>,Fri Aug 26 10:14:56 2011 +0000,llvm/llvm-project,1805,2011Q3,1805 llvm/llvm-project 2011Q3,don't insert branch hint lables that are never used. llvmsvn,neutral,1.0
1144,a6e593b4ebca3142dbf4c0416e78d991c3f448c7,Chandler Carruth <chandlerc@gmail.com>,Sat Jul 2 21:34:52 2011 +0000,llvm/llvm-project,1805,2011Q3,1805 llvm/llvm-project 2011Q3,"filecheckize another test. reduces the llc invocations from to , and makes one of the tests actually mean something as the string 'add' will always appear in the output of this file. llvmsvn",neutral,1.0
1145,60ef25bd545c9c3b917d007462188819dfcc81cd,Kostya Serebryany <kcc@google.com>,Fri Nov 21 22:34:29 2014 +0000,llvm/llvm-project,1805,2014Q4,1805 llvm/llvm-project 2014Q4,remove old experimental code llvmsvn,neutral,3.0
1146,ef43413593f2de126139f1242c27c00c131bb938,Ed Maste <emaste@freebsd.org>,Mon Nov 24 15:01:11 2014 +0000,llvm/llvm-project,1805,2014Q4,1805 llvm/llvm-project 2014Q4,fix lldb man page formatting use canonical date order per groff mandoc fix capitalization on one .nm remove eol whitespace patch by baptiste daroussin in freebsd svn . llvmsvn,neutral,2.0
1147,cd025c5512205d65767770e32e23db0ee670b9ae,Lang Hames <lhames@gmail.com>,Thu Oct 2 04:21:27 2014 +0000,llvm/llvm-project,1805,2014Q4,1805 llvm/llvm-project 2014Q4,update doxygen comment style to match the rest of the file. nfc. llvmsvn,neutral,2.0
1148,6bcfafa0fee65e9decbd1775e3e977fda5e637f0,Greg Clayton <gclayton@apple.com>,Tue Dec 21 02:23:58 2010 +0000,llvm/llvm-project,1805,2010Q4,1805 llvm/llvm-project 2010Q4,updated xcode build version to lldb and debugserver. llvmsvn,neutral,3.0
1149,f5a998643c4fc5647cf8313abfad2cd3bf61ae97,Sean Callanan <scallanan@apple.com>,Tue Nov 30 22:01:58 2010 +0000,llvm/llvm-project,1805,2010Q4,1805 llvm/llvm-project 2010Q4,"fixed a problem where m_register_info was not being copied by the copy constructor for clangexpressionvariable. this meant that a null m_register_info wouldn't be copied, and instead the field was uninitialized, potentially confusing the materializer. llvmsvn",neutral,1.0
1150,4bdd2724e3b1cecadd726436e8835020531b4bc3,Rafael Espindola <rafael.espindola@gmail.com>,Tue Nov 9 22:37:44 2010 +0000,llvm/llvm-project,1805,2010Q4,1805 llvm/llvm-project 2010Q4,remove isexplicit. it was always false. llvmsvn,neutral,2.0
1151,e89bbd3a0b3c054d9a94feb0db7bbae1cdb99e54,Miklos Szeredi <miklos@szeredi.hu>,Tue Sep 6 15:18:21 2005 -0700,torvalds/linux,4589,2005Q3,4589 torvalds/linux 2005Q3,"remove iattr.ia_attr_flags remove unused ia_attr_flags from struct iattr, and related defines. szeredi morton torvalds",neutral,2.0
1152,8273d5d4c28a9fde68f830cc6ff61e37e8ae1dca,Anton Altaparmakov <aia21@cantab.net>,Thu Sep 8 22:00:33 2005 +0100,torvalds/linux,4589,2005Q3,4589 torvalds/linux 2005Q3,"ntfs fix aops.cntfs_read,write_block to handle the case where a concurrent truncate has truncated the runlist under our feet. altaparmakov",neutral,2.0
1153,f68bcc2df8115b4ea45bfa4f8de22ec7232562b5,Hal Rosenstock <halr@voltaire.com>,Wed Jul 27 11:45:27 2005 -0700,torvalds/linux,4589,2005Q3,4589 torvalds/linux 2005Q3,ib minor cleanup during mad startup and shutdown minor cleanup during startup and shutdown rosenstock cc roland dreier morton torvalds,neutral,1.0
1154,7bd2bbb9acba9b1a199252d661872182921edf73,Enrico Granata <egranata@apple.com>,Tue Jun 11 18:47:55 2013 +0000,llvm/llvm-project,1805,2013Q2,1805 llvm/llvm-project 2013Q2,allow memory read t to take persistent types those defined with expression struct llvmsvn,neutral,1.0
1155,2ac2d4c59d0624533c3e567f7a112c4903080252,Tim Northover <Tim.Northover@arm.com>,Tue Apr 23 06:55:15 2013 +0000,llvm/llvm-project,1805,2013Q2,1805 llvm/llvm-project 2013Q2,"remove unnecessary check that rs is valid always demands a registerscavenger, so the pointer should never be null. however, in the spirit of paranoia, we'll assert it before use just in case. llvmsvn",neutral,3.0
1156,9fcdc461edf9276b294e78c023b7a94b5ebc43d8,Daniel Jasper <djasper@google.com>,Mon Apr 8 16:44:05 2013 +0000,llvm/llvm-project,1805,2013Q2,1805 llvm/llvm-project 2013Q2,add matcher for namespacedecls. llvmsvn,neutral,2.0
1157,263c213061f80cb8f12415803d722b8d2065536c,Hans Wennborg <hans@hanshq.net>,Tue Sep 24 17:36:21 2013 +0000,llvm/llvm-project,1805,2013Q3,1805 llvm/llvm-project 2013Q3,clangcl pass nologo when falling back to cl.exe llvmsvn,satisfaction,3.0
1158,e95df9fdb12140ef7032f14626c4784c86072e7d,Michael Gottesman <mgottesman@apple.com>,Wed Jul 10 18:40:49 2013 +0000,llvm/llvm-project,1805,2013Q3,1805 llvm/llvm-project 2013Q3,changed mode c c at the suggestion of nick lewycky. llvmsvn,neutral,2.0
1159,c185aa7d925ea21a08951798bd3980e93d2caf35,David Majnemer <david.majnemer@gmail.com>,Fri Sep 27 04:14:12 2013 +0000,llvm/llvm-project,1805,2013Q3,1805 llvm/llvm-project 2013Q3,sema respect fdelayedtemplateparsing when parsing constexpr functions functions declared as constexpr must have their parsing delayed in fdelayedtemplateparsing mode so as not to upset later template instantiation. n.b. my reading of the standard makes it seem like delayed template parsing is at odds with constexpr. we may want to make refinements in other places in clang to make constexpr play nicer with this feature. this fixes . llvmsvn,neutral,3.0
1160,8214bf5eef9c3c58fcb7a14e42d65e40e8405b7d,Alp Toker <alp@nuanti.com>,Sat Dec 28 21:59:11 2013 +0000,llvm/llvm-project,1805,2013Q4,1805 llvm/llvm-project 2013Q4,briefly document diagbuild.sh it may be a quick and dirty script but it's still useful to have some indication as to its purpose. text taken straight from jordan's commit message. llvmsvn,frustration,3.0
1161,57f30bce64e2515bd460262238ffdf0d4f168820,Benjamin Kramer <benny.kra@googlemail.com>,Tue Oct 22 15:18:03 2013 +0000,llvm/llvm-project,1805,2013Q4,1805 llvm/llvm-project 2013Q4,speling fixes. llvmsvn,caution,2.0
1162,78527050c28fcdb57c0d24a10b55ab43dc4e5412,Rafael Espindola <rafael.espindola@gmail.com>,Sun Oct 6 15:10:43 2013 +0000,llvm/llvm-project,1805,2013Q4,1805 llvm/llvm-project 2013Q4,add support for aliases with linkonce_odr. this will be used to extend constructor aliases in clang. llvmsvn,satisfaction,2.0
1163,1848afbbe8b70f54d546e50ea46f84f70cff7e10,Greg Clayton <gclayton@apple.com>,Fri Oct 28 23:44:55 2011 +0000,llvm/llvm-project,1805,2011Q4,1805 llvm/llvm-project 2011Q4,"fixed the continuation dumping of instructions to properly advance the previous address only by the number of bytes consumed by the disassembly lldb xea xea fa movw , rbp xeaf movl , rbp xeb callq xf void fnullptr_t xebb fc movl rbp, eax lldb xebe addq , rsp xec popq rbp xec ret xec nop lldb xec nop xec nop xec nop xec nop lldb xec nop xeca nop xecb nop xecc nop lldb xecd nop xece nop xecf nop xed pushq rbp llvmsvn",neutral,2.0
1164,61200b31db2f6ce6fb295bd891a13b7e2cac3e7f,Johnny Chen <johnny.chen@apple.com>,Sat Oct 29 01:58:39 2011 +0000,llvm/llvm-project,1805,2011Q4,1805 llvm/llvm-project 2011Q4,add a simple regression test to go with . commandinterpreterpreprocesscommand should not infinite loop when a target has not been specified yet. llvmsvn,neutral,3.0
1165,d4e2552c737514efefcff650cd97670061a883fd,Greg Clayton <gclayton@apple.com>,Wed Oct 12 00:53:29 2011 +0000,llvm/llvm-project,1805,2011Q4,1805 llvm/llvm-project 2011Q4,fix preprocessor warnings for no newline at the end of the source files. llvmsvn,satisfaction,2.0
1166,74351ff4ac69665bad0f6e5b852de488d36388e1,Daniel Jasper <djasper@google.com>,Mon Oct 15 13:12:24 2012 +0000,llvm/llvm-project,1805,2012Q4,1805 llvm/llvm-project 2012Q4,only report first error when no compilation database is found. review llvmsvn,satisfaction,3.0
1167,9732e08a4ddb1e4eecbc6994653dea2faeaf7b4b,Jim Ingham <jingham@apple.com>,Tue Nov 27 01:21:28 2012 +0000,llvm/llvm-project,1805,2012Q4,1805 llvm/llvm-project 2012Q4,the skiponlinux decorator wasn't calling the test method correctly no need to pass in the self resulting in errors on macos x for the tests so decorated. llvmsvn,satisfaction,1.0
1168,64536a6d250c71f9b73c35e8801056c22ffd7618,Michael Han <Michael.Han@autodesk.com>,Tue Nov 6 19:34:54 2012 +0000,llvm/llvm-project,1805,2012Q4,1805 llvm/llvm-project 2012Q4,teach clang parser to reject c attributes that appertain to declaration specifiers. we don't support any c attributes that appertain to declaration specifiers so reject the attributes in parser until we support them this also conforms to what g . is doing. llvmsvn,neutral,4.0
1169,337cfaf75734ebef1ac1d400399eacbbb866ac4d,Rafael Espindola <rafael.espindola@gmail.com>,Wed Feb 22 03:44:46 2012 +0000,llvm/llvm-project,1805,2012Q1,1805 llvm/llvm-project 2012Q1,improve comment. thanks for andrew for the suggestion. llvmsvn,neutral,2.0
1170,add6f1d2e944aa4f1c8040c0ce8b28852ad252f5,Owen Anderson <resistor@mac.com>,Fri Mar 23 17:40:56 2012 +0000,llvm/llvm-project,1805,2012Q1,1805 llvm/llvm-project 2012Q1,"make it feasible for clients using enginebuilder to capture the targetmachine that is created as part of selecting the appropriate target. this is necessary if the client wants to be able to mutate targetoptions for example, fast fp math mode after the initial creation of the executionengine. llvmsvn",neutral,2.0
1171,304314d7399174c60e937b1645d16de3cd63190e,Daniel Dunbar <daniel@zuster.org>,Tue Mar 6 23:52:37 2012 +0000,llvm/llvm-project,1805,2012Q1,1805 llvm/llvm-project 2012Q1,functiondeclgetbuiltinid eliminate spurious calls to getastcontext which is very much not free in the common case. llvmsvn,satisfaction,4.0
1172,06ab7dc374a1ee7049f57291c9937f7e74e66d03,Ran Chen <crccw@google.com>,Wed Jan 27 11:29:49 2021 -0800,tensorflow/tensorflow,496,2021Q1,496 tensorflow/tensorflow 2021Q1,set collective_graph_key when there're collective ops present otherwise there won't be a collective executor. piperoriginrevid,caution,2.0
1173,84cf18f8a662ec588de0429f344e88a4631a4dae,A. Unique TensorFlower <gardener@tensorflow.org>,Mon Feb 22 13:21:05 2021 -0800,tensorflow/tensorflow,496,2021Q1,496 tensorflow/tensorflow 2021Q1,private_tf_api_usage_cleanup remove the usage of convert_to_tensor_or_composite. piperoriginrevid,neutral,1.0
1174,24c07a32c800c0ab4d2705491a2c48c8c9bdbff8,Trent Lo <trentl@nvidia.com>,Wed Jan 27 12:10:40 2021 -0800,tensorflow/tensorflow,496,2021Q1,496 tensorflow/tensorflow 2021Q1,do not horizontally fuse loopfusions if they share parameters.,neutral,2.0
1175,ce1bb8b13c4bdcaeebe9abb58436855f172dd1c4,Huon Wilson <huon@apple.com>,Sun Mar 4 08:09:39 2018 +1100,apple/swift,556,2018Q1,556 apple/swift 2018Q1,"cond. conformance witness table count isn't needed dynamically. the count of the number of witness tables was designed to be an that we've hooked up all the infrastructure correctly. everything is now implemented, and the assertion has never triggered, so it can be removed, saving some work. fixes rdar.",caution,3.0
1176,0e337acae0d6c16c975394cb9845f73974557c5e,Huon Wilson <huon@apple.com>,Wed Mar 14 08:12:37 2018 +1100,apple/swift,556,2018Q1,556 apple/swift 2018Q1,revert ensure requirements are correctly identified as conditional.,neutral,1.0
1177,f031a7693e6a33bd168284504b14eea0e3f279fa,Huon Wilson <huon@apple.com>,Wed Mar 28 19:08:17 2018 +1100,apple/swift,556,2018Q1,556 apple/swift 2018Q1,merge pull request from condreqcleanup use addconditionalrequirements for all conditionalrequirementadding.,neutral,3.0
1178,5e5cc690748c603d17fbae08ad51f52da83c425f,andersca@apple.com <andersca@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Dec 4 02:10:58 2008 +0000,chromium/chromium,4568,2008Q4,4568 chromium/chromium 2008Q4,anders carlsson reviewed by sam weinig. move webpluginrequest to its own file. .mm .h added. .m added. bb,neutral,2.0
1179,5640b90777c362df2921b12b314cbe50b0016310,tc@google.com <tc@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Dec 10 01:32:21 2008 +0000,chromium/chromium,4568,2008Q4,4568 chromium/chromium 2008Q4,"fix a crash in the copy selection code. if there's no selection, we get a null range, so check for it. also fallback if there's no frame with focus to the main frame. the webkit gtk code does this as well. review url dcbdfc",neutral,2.0
1180,2667e87f35afb1c75d80cff70696d8fd71e512cf,scherkus@chromium.org <scherkus@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Dec 3 00:48:32 2008 +0000,chromium/chromium,4568,2008Q4,4568 chromium/chromium 2008Q4,updated the design document urls for resourcedispatcher and resourcedispatcherhost review url dcbdfc,neutral,1.0
1181,e2addb4329e5f175b18cb3b917a738bb76f6c3d4,Mara Bos <m-ou.se@m-ou.se>,Wed Nov 18 15:46:32 2020 +0100,rust-lang/rust,635,2020Q4,635 rust-lang/rust 2020Q4,"rollup merge of update, enable variants by updating stdarch",satisfaction,5.0
1182,b2e2c0806ec2296bf7d98e0db5cc9c39a55f23ac,Philipp Krones <hello@philkrones.com>,Wed Nov 25 11:50:13 2020 +0100,rust-lang/rust,635,2020Q4,635 rust-lang/rust 2020Q4,improve extract_msrv_attr! situation,caution,5.0
1183,a4daa63a90f46e3c6e36efe5e0743eab09f6f12b,Tyson Nottingham <tgnottingham@gmail.com>,Wed Dec 16 19:03:31 2020 -0800,rust-lang/rust,635,2020Q4,635 rust-lang/rust 2020Q4,rustc_serialize specialize opaque encoding of some sequences,satisfaction,2.0
1184,4f85e42594a70275dfd575c19138f1398014af92,Michael Kuchnik <michaelkuchnik@gmail.com>,Tue Nov 3 12:37:52 2020 -0500,tensorflow/tensorflow,496,2020Q4,496 tensorflow/tensorflow 2020Q4,add refactoring todo,neutral,1.0
1185,6b4ba7fb16b3b776303ffe2f116d3f6fc85ef2ae,Allen Lavoie <allenl@google.com>,Fri Dec 4 13:12:29 2020 -0800,tensorflow/tensorflow,496,2020Q4,496 tensorflow/tensorflow 2020Q4,"parallel device make tf.cond work executing eagerly this takes the easy but not too satisfying wrap it in a tf.function approach, similar to what tf.vectorized_map does. this means we'll retrace the cond's branches every time tf.cond runs. if this ends up being a performance bottleneck there are a few things we can do. one is to check if the condition parallel tensor is actually going to take different branches on different devices and do the eager thing if not. another is to tweak the calling code e.g. bn to wrap the cond itself in a tf.function there we'll be able to cache the trace. we could also implement cond in the parallel device, with null optionals if a device isn't taking a branch that seems pretty complicated. piperoriginrevid",neutral,4.0
1186,d2fea176cfea7f5f439259fafab171d64398c333,A. Unique TensorFlower <gardener@tensorflow.org>,Fri Oct 2 10:43:45 2020 -0700,tensorflow/tensorflow,496,2020Q4,496 tensorflow/tensorflow 2020Q4,"remove a few check ops that no longer need to run in tf.variable's constructor varhandleop ensures there is no sharing. these aren't a huge part of startup time for replicated models, but there's still no reason to run them. piperoriginrevid",caution,2.0
1187,c0b073bc625d2178255876bc10834f46837ba773,Mazdak Farrokhzad <twingoow@gmail.com>,Sat Mar 7 12:54:31 2020 +0100,rust-lang/rust,635,2020Q1,635 rust-lang/rust 2020Q1,simplify improve parse_ty_tuple_or_parens,neutral,1.0
1188,44fb8b5e8834a89e0d9f925b8ff235eec10526e3,ThibsG <thebaek1@hotmail.com>,Fri Jan 10 17:14:17 2020 +0100,rust-lang/rust,635,2020Q1,635 rust-lang/rust 2020Q1,extract visitor to utils,frustration,2.0
1189,e238eb610f363176ce582009533764edb7a711db,Dylan DPC <dylan.dpc@gmail.com>,Mon Feb 24 20:10:19 2020 +0100,rust-lang/rust,635,2020Q1,635 rust-lang/rust 2020Q1,"rollup merge of nocodegen, morse no more codegen for miri_start_panic with landed, we don't generate code any more for crates that will be run by miri. so the llvm backend does not have to implement the miri_start_panic intrinsic any more. cc",neutral,2.0
1190,7f3df5772439eee1c512ed2eb540beef1124d236,bors <bors@rust-lang.org>,Thu Apr 16 18:02:11 2020 +0000,rust-lang/rust,635,2020Q2,635 rust-lang/rust 2020Q2,"auto merge of dylan, dpc rollup of pull requests successful merges don't bail out before linting in generic contexts. provide better compiler output when using ? on option in fn returning result and viceversa remove an impossible branch from check_consts fix more clippy warnings clean up explanation failed merges r? ghost",satisfaction,4.0
1191,0ad08109fd1c0b72d8bde3291271e4f2c8dbe66e,Sora Morimoto <git@bsky.moe>,Wed May 27 06:25:38 2020 +0900,rust-lang/rust,635,2020Q2,635 rust-lang/rust 2020Q2,bump from to,satisfaction,4.0
1192,619c6055e71a5a202cba3f5cb979f17c3581faa3,Matthew Jasper <mjjasper1@gmail.com>,Fri May 8 17:25:18 2020 +0100,rust-lang/rust,635,2020Q2,635 rust-lang/rust 2020Q2,fix debug assertion in error code,satisfaction,5.0
1193,0c7a31a168aae02e323c97bc6b81f2d3f19cbb2a,Nutti <nutti.metro@gmail.com>,Thu Nov 29 22:32:54 2018 +0900,tensorflow/tensorflow,496,2018Q4,496 tensorflow/tensorflow 2018Q4,fix clangformat error,frustration,4.0
1194,822c9186ba75e26f3d5c84be924b3d72ee8f6364,Uday Bondhugula <bondhugula@google.com>,Tue Dec 4 15:09:52 2018 -0800,tensorflow/tensorflow,496,2018Q4,496 tensorflow/tensorflow 2018Q4,remove duplicate flataffineconstraintsremoveid refactor to use removecolumnrange remove functionally duplicate code in removeid. rename removecolumnrange removeidrange restrict valid input to just the identifier columns not the constant term column. piperoriginrevid,neutral,7.0
1195,a4e5957bc8065e2b8b5322d90d8b846525e83d16,Peter Hawkins <phawkins@google.com>,Tue Dec 4 09:48:03 2018 -0800,tensorflow/tensorflow,496,2018Q4,496 tensorflow/tensorflow 2018Q4,move batchdot into the xla client library. batchdot is a helper for performing batched matrix multiplications where all except the minor two dimensions are batch dimensions. it is used by a number of other linear algebra routines. piperoriginrevid,satisfaction,2.0
1196,844a7febd34470924a0b77aca05f95d4f1b9ced7,Sean Callanan <scallanan@apple.com>,Fri Apr 9 01:43:16 2010 +0000,llvm/llvm-project,1805,2010Q2,1805 llvm/llvm-project 2010Q2,"added a tester for the enhanced disassembler, integrated into the llvmmc testing tool. llvmsvn",satisfaction,1.0
1197,df1a7f83bf1322a7dba1e393d316420665a6a651,Dale Johannesen <dalej@apple.com>,Sat Jun 5 00:30:45 2010 +0000,llvm/llvm-project,1805,2010Q2,1805 llvm/llvm-project 2010Q2,"fix some liveout handling related to tail calls, see comments. i don't think this ever resulted in problems on , but it would on arm. llvmsvn",neutral,1.0
1198,488f55c2716a9ce94cf9b518dcab3a04e8123571,Daniel Dunbar <daniel@zuster.org>,Thu Apr 22 02:35:46 2010 +0000,llvm/llvm-project,1805,2010Q2,1805 llvm/llvm-project 2010Q2,"irgen rewrite bitfield access policy to not access data beyond the bounds of the structure, which we also now verify as part of the postlayout consistency checks. this fixes some pedantic bugs with packed structures, as well as major problems with fnobitfieldtypealign. fixes , , and all known fnobitfieldtypealign issues. review appreciated. llvmsvn",neutral,3.0
1199,6206a85dbf2f1d77d4b5f2c71230d38b2f30627c,Graydon Hoare <ghoare@apple.com>,Thu May 11 12:40:31 2017 -0700,apple/swift,556,2017Q2,556 apple/swift 2017Q2,"improve times, zeros, thresholds.",neutral,5.0
1200,906c36d209adbd3fed70726bb47dc1ad42f72ca6,practicalswift <practicalswift@users.noreply.github.com>,Sun Apr 2 16:07:54 2017 +0200,apple/swift,556,2017Q2,556 apple/swift 2017Q2,remove unused method collectforwardablevalues,neutral,1.0
1201,096b3dd91235248eef784385356ee1090ec253c1,swift-ci <swift-ci@users.noreply.github.com>,Sun May 14 12:09:09 2017 -0700,apple/swift,556,2017Q2,556 apple/swift 2017Q2,merge remotetracking branch '' into masternext,caution,4.0
1202,e69d4dc4dab01e8d3d34cad42a50e2efa3f82783,Slava Pestov <spestov@apple.com>,Sun Sep 2 21:12:03 2018 -0700,apple/swift,556,2018Q3,556 apple/swift 2018Q3,sil fix up some sil_vtables in irgen tests add in a few places since a subsequent patch introduces an assert that catches invalid entries like this.,caution,4.0
1203,e2cde5acc292e91cfdd586dba93269e559729899,Pavel Yaskevich <pyaskevich@apple.com>,Thu Aug 9 17:47:06 2018 -0700,apple/swift,556,2018Q3,556 apple/swift 2018Q3,port 'missing optional unwrap' diagnostic to new abstraction,neutral,1.0
1204,dba47a500d0de47f02762541d69487732371cf92,swift-ci <swift-ci@users.noreply.github.com>,Mon Jul 2 13:32:39 2018 -0700,apple/swift,556,2018Q3,556 apple/swift 2018Q3,merge pull request from,frustration,4.0
1205,1b39852682667aae794ed2ad2b1512f2cb727cd1,Greg Parker <gparker@apple.com>,Tue Mar 14 17:12:14 2017 -0700,apple/swift,556,2017Q1,556 apple/swift 2017Q1,clean up lack of support of ios device tests. add iosall etc with a helpful error message for those who think it exists. reject ios hosttest early to avoid a cryptic build target does not exist error much later.,neutral,1.0
1206,8521601215937ee0e736f4136c4f1432af41d989,Michael Gottesman <mgottesman@apple.com>,Mon Mar 13 10:26:22 2017 -0700,apple/swift,556,2017Q1,556 apple/swift 2017Q1,"move resultplan from silgenapply.cpp resultplan.h,cpp resultplan and related constructs have already been written in a type erased fashion. this commit takes advantage of this by moving the details of the code to resultplan.cpp,h. this slims down silgenapply.cpp in a nfc way and ensures that other code in silgenapply can not depend on the details of resultplan. also it is my hope that this can become the beginning of the merging of the resultplan from silgenapply and from silgenpoly. we should only have way in silgen to build applies and create apply results. rdar",neutral,1.0
1207,b0c33f7a5fa73da20b8fe8dc8ed0b274d4ff1e53,swift-ci <swift-ci@users.noreply.github.com>,Wed Mar 1 17:48:50 2017 -0800,apple/swift,556,2017Q1,556 apple/swift 2017Q1,merge remotetracking branch '' into masternext,satisfaction,7.0
1208,22c65f924266ba738fa3621ea07d31bc7ba8c45f,Esteban Küber <esteban@kuber.com.ar>,Thu Dec 5 09:21:52 2019 -0800,rust-lang/rust,635,2019Q4,635 rust-lang/rust 2019Q4,do not ice on closure typeck tackle .,satisfaction,2.0
1209,fe88fc03c50be57e1dc12cf308c45dc9c8d6473a,Aaron Hill <aa1ronham@gmail.com>,Tue Oct 29 17:31:54 2019 -0400,rust-lang/rust,635,2019Q4,635 rust-lang/rust 2019Q4,fix up intrinsic implementation,frustration,6.0
1210,8a462ff24a306a2a70235710a6bd96b695bc0197,Dylan MacKenzie <ecstaticmorse@gmail.com>,Tue Oct 22 14:54:10 2019 -0700,rust-lang/rust,635,2019Q4,635 rust-lang/rust 2019Q4,make item fields pub,frustration,4.0
1211,0fba4820f51f89e2be116b1fa0f3fef698732b0d,kargakis <kargakis@users.noreply.github.com>,Tue Jun 2 12:54:09 2015 +0200,kubernetes/kubernetes,464,2015Q2,464 kubernetes/kubernetes 2015Q2,expose better error formatting and generic flag message re error formatting osc expose svc frontend generator'' before error generator !!missingq not found. see 'osc expose h' for help. now error generator not found. see 'openshift cli expose h' for help.,neutral,2.0
1212,f2fcab577c46c9ece186fe6b7a5ef84420f9cd71,Rohit Jnagal <jnagal@google.com>,Mon Apr 27 12:40:32 2015 -0700,kubernetes/kubernetes,464,2015Q2,464 kubernetes/kubernetes 2015Q2,merge pull request from add hint re fuzzer to api changes doc,frustration,4.0
1213,374658ef01937aab40787ed853759a519c678f16,Jeff Bean <jeffreyrobertbean@gmail.com>,Wed Jun 17 19:00:11 2015 -0400,kubernetes/kubernetes,464,2015Q2,464 kubernetes/kubernetes 2015Q2,support the upstream 'addons' nonsense,neutral,2.0
1214,2d33d6300cd2cda457d993d03c8179cc72f6af4f,Mike Stump <mrs@apple.com>,Wed Mar 4 22:48:06 2009 +0000,llvm/llvm-project,1805,2009Q1,1805 llvm/llvm-project 2009Q1,fixup __block codegen in nested block literals. llvmsvn,satisfaction,3.0
1215,7b4df3c3e6a0fc20d5784324aae026f9ad215c49,Ted Kremenek <kremenek@apple.com>,Tue Mar 31 18:58:14 2009 +0000,llvm/llvm-project,1805,2009Q1,1805 llvm/llvm-project 2009Q1,rename clang. to clangcc. to reflect the name change of the lowlevel frontend driver. llvmsvn,neutral,1.0
1216,45a2a20384f6c74d66f2b5c0b42f083d31deaefc,Daniel Dunbar <daniel@zuster.org>,Mon Feb 16 22:42:44 2009 +0000,llvm/llvm-project,1805,2009Q1,1805 llvm/llvm-project 2009Q1,unbreak clang. doug please verify that it is expected that lastidx can be less that numinits. and perhaps add a comment so that chris doesn't break your code. llvmsvn,neutral,1.0
1217,1e2d560253b0b397d4fe9b50a94406a38f6e5293,Kevin <wangzefeng@huawei.com>,Fri Aug 12 16:46:40 2016 +0800,kubernetes/kubernetes,464,2016Q3,464 kubernetes/kubernetes 2016Q3,make taints unique by on a node,neutral,1.0
1218,4387dcbdd5270fc4f4ab2440f2b460fa504c1049,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Wed Sep 14 06:22:52 2016 -0700,kubernetes/kubernetes,464,2016Q3,464 kubernetes/kubernetes 2016Q3,merge pull request from wojtek automatic merge from submitqueue make networking tests work reasonably fast in large clusters bprashanth fyi,satisfaction,2.0
1219,f4b13c77a888ddbabdeedab0e7a70fbb2d7b55fa,PingWang <wang.ping5@zte.com.cn>,Tue Aug 16 19:02:08 2016 +0800,kubernetes/kubernetes,464,2016Q3,464 kubernetes/kubernetes 2016Q3,recombining the condition for shouldscale function,caution,5.0
1220,e046a7af49d37b0179078c83387925f8abc2555f,Jens Hausdorf <mail@jens-hausdorf.de>,Thu Aug 15 22:16:59 2019 +0200,rust-lang/rust,635,2019Q3,635 rust-lang/rust 2019Q3,fix typo in doubleendediteratornth_back doc,caution,5.0
1221,c2249a4bf996435803ad3f8fbe9fe45d9289e19f,Igor Matuszewski <Xanewok@gmail.com>,Sun Sep 8 10:28:11 2019 +0200,rust-lang/rust,635,2019Q3,635 rust-lang/rust 2019Q3,cargo update p rustfmtnightly,satisfaction,2.0
1222,e29faf0d095a51f5a06cfc6208a914b13481e1fe,bors <bors@rust-lang.org>,Sun Sep 1 11:46:45 2019 +0000,rust-lang/rust,635,2019Q3,635 rust-lang/rust 2019Q3,"auto merge of , rollup of pull requests successful merges update bufwriter example to include call to flush account for rounding errors when deciding the diagnostic boundaries rustdoc use ccodegen by default for test compile update sync condvar doc style fix word repetition in str documentation failed merges r? ghost",neutral,1.0
1223,d0548ae7509dedd1b7c14ab815eaf61ae167ac99,Andrew Trick <atrick@apple.com>,Fri Feb 4 03:18:17 2011 +0000,llvm/llvm-project,1805,2011Q1,1805 llvm/llvm-project 2011Q1,"introducing a new method of tracking register pressure. we can't precisely track pressure on a selection dag, but we can at least keep it balanced. this design accounts for various interesting aspects of selection dags register and subregister copies, glued nodes, dead nodes, unused registers, etc. added sunitnumregdefsleft and scheduledagsdnodesregdefiter. note i disabled preschedulenodeswithmultipleuses when register pressure is enabled, based on no evidence other than i don't think it makes sense to have both enabled. llvmsvn",frustration,5.0
1224,aec93c6bbea711a4878e64b1fdac571dc72589f9,Douglas Gregor <dgregor@apple.com>,Tue Jan 11 03:23:19 2011 +0000,llvm/llvm-project,1805,2011Q1,1805 llvm/llvm-project 2011Q1,"ensure that the result type of an objectivec class message send is complete. however, if it returns a reference type, don't require the type it refers to to be complete. fixes . llvmsvn",frustration,3.0
1225,edd820e666cc80cd048186807823dfc64e3e30d4,Stephen Wilson <wilsons@start.ca>,Sun Mar 27 23:59:07 2011 +0000,llvm/llvm-project,1805,2011Q1,1805 llvm/llvm-project 2011Q1,add a missing include required on linux llvmsvn,frustration,4.0
1226,5992b4a2112ebacbf7bba319e79d4c5ddd2efcd3,Daniel Dunbar <daniel@zuster.org>,Mon Jun 29 22:00:57 2009 +0000,llvm/llvm-project,1805,2009Q2,1805 llvm/llvm-project 2009Q2,llvmmc recognize c style comments. llvmsvn,caution,4.0
1227,f95894c1d2a1f7d61e7bbe4f55f8938d0e2ee969,Chris Lattner <sabre@nondot.org>,Sat Apr 18 20:05:34 2009 +0000,llvm/llvm-project,1805,2009Q2,1805 llvm/llvm-project 2009Q2,fix two error paths out of parseblockliteralexpression to call actonblockerror so that curblock gets popped. this fixes a crash on syntaxerror.c when this new assertion is enabled. llvmsvn,neutral,3.0
1228,893abe482d61ad8b76ab0a1fe749b20c0314a248,Eli Friedman <eli.friedman@gmail.com>,Fri May 29 18:22:49 2009 +0000,llvm/llvm-project,1805,2009Q2,1805 llvm/llvm-project 2009Q2,"revert , which isn't really right, and fix up other code to handle the construct in question correctly. llvmsvn",neutral,2.0
1229,8334a58c2f949fd5f1e2c131ae7b614498bae746,bors <bors@rust-lang.org>,Mon Aug 31 19:20:30 2020 +0000,rust-lang/rust,635,2020Q3,635 rust-lang/rust 2020Q3,"auto merge of , add a lint for an async that yields a type that is itself awaitable. this catches bugs of the form tokiospawnasync move let f some_async_thing f oh no i forgot to await f so that work will never complete. see the two comments and the unfixed _l structure for things that need more thought. please keep the line below changelog none",neutral,1.0
1230,17d32770649fefe8efe6510f7dbff6123f544ba6,bors <bors@rust-lang.org>,Sun Sep 13 11:08:41 2020 +0000,rust-lang/rust,635,2020Q3,635 rust-lang/rust 2020Q3,"auto merge of ad, fixing memory exhaustion when formatting short code suggestion details can be found in issue . this pr replaces substractions with saturating_sub's to avoid usize wrapping leading to memory exhaustion when formatting short suggestion messages.",neutral,4.0
1231,1d157ce797dddcee16a577796199b1144b4f7f34,Dániel Buga <bugadani@gmail.com>,Tue Aug 25 11:44:18 2020 +0200,rust-lang/rust,635,2020Q3,635 rust-lang/rust 2020Q3,add codegen tests,neutral,2.0
1232,721047fe492140d7808ff0ff4464a5c1e8a37682,Pengfei Ni <feiskyer@gmail.com>,Thu Jul 13 16:27:59 2017 +0800,kubernetes/kubernetes,464,2017Q3,464 kubernetes/kubernetes 2017Q3,add test for readonlyrootfilesystem containers,frustration,3.0
1233,de50947f306ae7e69ba9f5b8339ed1546e785f03,Victor Sartori <victor.sartori@gmail.com>,Fri Jul 7 14:55:54 2017 -0300,kubernetes/kubernetes,464,2017Q3,464 kubernetes/kubernetes 2017Q3,bump image version on makefile and ds.,satisfaction,3.0
1234,d8525f8bd1a9cb732cc744ebd9a78589c4855ce1,Mik Vyatskov <vmik@google.com>,Mon Sep 11 18:51:46 2017 +0200,kubernetes/kubernetes,464,2017Q3,464 kubernetes/kubernetes 2017Q3,trim too long log entries due to stackdriver limitation,satisfaction,4.0
1235,08879449c645c224d3628bebb3e5b5a50a88cc3f,LeSeulArtichaut <leseulartichaut@gmail.com>,Thu Mar 25 21:53:56 2021 +0100,rust-lang/rust,635,2021Q1,635 rust-lang/rust 2021Q1,add additional test coauthoredby camelid,satisfaction,5.0
1236,bbf175df3cd17763ff601151eed6f84d0cabda13,Camelid <camelidcamel@gmail.com>,Mon Jan 4 18:34:31 2021 -0800,rust-lang/rust,635,2021Q1,635 rust-lang/rust 2021Q1,make size_of_val and min_align_of_val intrinsics unsafe,satisfaction,5.0
1237,3577cf79de342fd5e98775fe89560d918ca3793a,bors <bors@rust-lang.org>,Fri Jan 15 19:49:39 2021 +0000,rust-lang/rust,635,2021Q1,635 rust-lang/rust 2021Q1,"auto merge of javier, case sensitive file extensions closes looks for ends_with methods calls with case sensitive extension comparisons. changelog add new lint that warns about casesensitive file extension comparisons.",satisfaction,3.0
1238,c3203eb8bf0d7ae9dce133f982884622f666c681,Rohan Jain <rohanj@google.com>,Wed Sep 26 09:13:11 2018 -0700,tensorflow/tensorflow,496,2018Q3,496 tensorflow/tensorflow 2018Q3,the generatordataset init function was being run during initialization which is a blocking op. moving it to the getnext call which is a non blocking async op. this means we can now revert back to the default of threads per gpu. piperoriginrevid,neutral,3.0
1239,b9d3e551e9ab285d41e1f3636f0e010efcdec728,Chris Lattner <clattner@google.com>,Wed Sep 19 21:35:11 2018 -0700,tensorflow/tensorflow,496,2018Q3,496 tensorflow/tensorflow 2018Q3,"implement support for constant folding operations and a simple constant folding optimization pass give the ability for operations to implement a constantfold hook a simple one for singleresult ops as well as general support for multiresult ops. implement folding support for constant and addf. implement support in abstractoperation and operation to make this usable by clients. implement a very simple constant folding pass that does top down folding on cfg and ml functions, with a testcase that exercises all the above stuff. random cleanups improve the build apis for constantop. stop passing o to mliropt in the testsuite, since that is the default. piperoriginrevid",neutral,2.0
1240,f923dc8109848164495700b0854e76b191299312,Chris Lattner <clattner@google.com>,Wed Sep 26 21:18:42 2018 -0700,tensorflow/tensorflow,496,2018Q3,496 tensorflow/tensorflow 2018Q3,"fix , an issue where the zeroresult trait's verifier hook left in an old form. upgrade it, and move all the trait verifier implementations consistently out of line to reduce template bloat. piperoriginrevid",satisfaction,4.0
1241,649f6dbf6180abb6209217225b58a21d092ef979,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Tue Oct 4 08:46:08 2016 -0700,kubernetes/kubernetes,464,2016Q4,464 kubernetes/kubernetes 2016Q4,merge pull request from serverneedsservinginfo automatic merge from submitqueue stop plumbing options to start the api server should have sufficient information to start itself without relying on an options object from a different packages focused on cli interaction. this provides that separation liggitt distinct from other changes,caution,5.0
1242,b895a74a2ef14ab890a8f3be407395bc8b9c2db9,bruceauyeung <ouyang.qinhua@zte.com.cn>,Thu Dec 22 16:14:48 2016 +0800,kubernetes/kubernetes,464,2016Q4,464 kubernetes/kubernetes 2016Q4,small code improvements and fix some typos,caution,6.0
1243,c60bcbf0d285f177b7a08d645befd90e7a23faa8,xiangpengzhao <zhao.xiangpeng@zte.com.cn>,Tue Dec 13 06:33:29 2016 -0500,kubernetes/kubernetes,464,2016Q4,464 kubernetes/kubernetes 2016Q4,fix . changelog,satisfaction,2.0
1244,0be5e6041b426ad92f21005b4fbd390b8776ee77,Sebastian Scheele <sebastian@loodse.com>,Mon Jan 16 11:11:49 2017 -0800,kubernetes/kubernetes,464,2017Q1,464 kubernetes/kubernetes 2017Q1,aws run master in different account or on a provider currently the master and the nodes must run in the same account. with this change the master can run in a different aws account or somewhere else. set the vpcid when dummy is created squashed commit squashed commits use the vpc flag and kubernetesclustertag as identifier squashed commit squashed commits remove again availabilityzone and fix naming squashed commit squashed commits use the vcid flag as identifier squashed commit squashed commits add flag for external master,satisfaction,3.0
1245,5fd0566ce702304e39a411b1cb2f38033f5bc918,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Fri Mar 24 22:16:21 2017 -0700,kubernetes/kubernetes,464,2017Q1,464 kubernetes/kubernetes 2017Q1,"merge pull request from randomkubeletpanic automatic merge from submitqueue batch tested with prs , , cri check nil pointer to avoid kubelet panic. when working on the containerd kubernetes integration, i casually returns an empty sandboxstatus.linux, but it cause kubelet to panic. this won't happen when runtime returns valid data, but we should not make the assumption here. cc yujuhong feiskyer",satisfaction,1.0
1246,cf10f532d1c10544c8164bd74310f318496b5f0d,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Tue Feb 14 18:34:30 2017 -0800,kubernetes/kubernetes,464,2017Q1,464 kubernetes/kubernetes 2017Q1,"merge pull request from refactor automatic merge from submitqueue make kubectl edit work with unstructured objects fixes . first before any other changes, added several test cases for complex edit scenarios ensure the edit loop bails out if given the same result that already caused errors ensure an edited file with a syntax error is reopened preserving the input ensure objects with existing causedby annotations get updated with the current command . refactored the edit code to prep for switching to unstructured made editfn operate on a slice of resource.info objects passed as an arg, regardless of edit mode simplified shortcircuiting logic when reediting a file containing an error refactored how we build the various visitors namespace enforcement, annotation application, patching, creating so we could easily switch to just using a single visitor over a set of resource infos read from the updated input for all of them . switched to using a resource builder to parse the stream of the user's edited output improve the error message you get on syntax errors preserve the user's input more faithfully see how the captured testcase requests to the server changed to reflect exactly what the user edited stopped doing clientside conversion means deprecating outputversion . switched edit to work with generic objects use unstructured objects fall back to generic json merge patch for unrecognized kinds . added new test cases schemaless objects falls back to generic json merge covers tpr scenario edit unknown version of known kind version of storageclass falls back to generic json merge releasenote kubectl edit now edits objects exactly as they were retrieved from the api. this allows using kubectl edit with thirdparty resources and extension api servers. because clientside conversion is no longer done, the outputversion option is deprecated for kubectl edit. to edit using a particular api version, fullyqualify the resource, version, and group used to fetch the object for example, job",satisfaction,2.0
1247,2aeae7480648733ad26f0490886977d5592ba31b,practicalswift <practicalswift@users.noreply.github.com>,Sun Mar 13 00:14:43 2016 +0100,apple/swift,556,2016Q1,556 apple/swift 2016Q1,"merge pull request from unusedpythonmethod remove unused methods get_data,output,status",neutral,2.0
1248,222424cc755f8f3706cd2cd354f1ff60d47cb1b2,Dmitri Gribenko <gribozavr@gmail.com>,Fri Jan 22 01:59:06 2016 -0800,apple/swift,556,2016Q1,556 apple/swift 2016Q1,merge pull request from swifttypetransform add test case for crash triggered in swifttypetransform,satisfaction,2.0
1249,05d6b954a9835411a7cbf167c3930ae2f67f6a4d,practicalswift <practicalswift@users.noreply.github.com>,Thu Jan 7 08:55:42 2016 +0100,apple/swift,556,2016Q1,556 apple/swift 2016Q1,fix recently introduced typos.,frustration,3.0
1250,8e9a742c0cdf84e7e4ab596ee14cc11d6c281c9e,Michael Case <mikecase@google.com>,Tue May 22 11:02:22 2018 -0700,tensorflow/tensorflow,496,2018Q2,496 tensorflow/tensorflow 2018Q2,merge pull request from pythonfeedingfunctionerror fixpython valueerror lendataframe.columns,satisfaction,3.0
1251,c06004be0a6c72c4fdf3905d94740035035b8083,A. Unique TensorFlower <gardener@tensorflow.org>,Tue Apr 17 11:05:57 2018 -0700,tensorflow/tensorflow,496,2018Q2,496 tensorflow/tensorflow 2018Q2,fixes a comment in tf.contribmonotonic_attention. piperoriginrevid,frustration,3.0
1252,d030ea951a477e2e141c13fed42681bcc5e97b4a,Chris Ying <chrisying@google.com>,Wed May 2 15:03:33 2018 -0700,tensorflow/tensorflow,496,2018Q2,496 tensorflow/tensorflow 2018Q2,add steps_per_run to loggingtensorhook and stepcounterhook and other logging bug fixes. piperoriginrevid,satisfaction,7.0
1253,f8c5a5bcbc186eaef20058ba6a2402844d7a5706,Kostya Serebryany <kcc@google.com>,Thu May 31 15:44:05 2012 +0000,llvm/llvm-project,1805,2012Q2,1805 llvm/llvm-project 2012Q2,partial fix for windows build llvmsvn,neutral,3.0
1254,337a5a1c3f450a1bfe69bef54dd46d6fac823e06,Richard Smith <richard-llvm@metafoo.co.uk>,Fri Jun 8 01:30:54 2012 +0000,llvm/llvm-project,1805,2012Q2,1805 llvm/llvm-project 2012Q2,"allow friend declarations of defaulted special member functions. only definitions of such members are prohibited, not mere declarations. llvmsvn",neutral,1.0
1255,72f18bbcffe3a57fc8f23c2f4e5aa5779eec0425,Kevin Enderby <enderby@apple.com>,Wed Apr 11 22:40:17 2012 +0000,llvm/llvm-project,1805,2012Q2,1805 llvm/llvm-project 2012Q2,fixed a case of arm disassembly getting an assert on a bad encoding of a vst instruction. llvmsvn,satisfaction,4.0
1256,1f222f307e5e2995d8aff63a05657d53bf8b5900,Pavel Yaskevich <pyaskevich@apple.com>,Thu Mar 5 12:15:05 2020 -0800,apple/swift,556,2020Q1,556 apple/swift 2020Q1,"make sure pattern matching tuple destructuring works both ways consider following example swift enum e case foox int, y int case barx int, y int func teste e if case .foolet x, let y e if case .barlet tuple e both of if case expressions have to be supported . case .foolet x, let y e allows a single tuple parameter to be destructured into multiple arguments. . case .barlet tuple e allows to match multiple parameters with a single tuple argument. resolves rdar",satisfaction,3.0
1257,f5377cbb090d4e8444c325e2f2d98c2a48644583,Mike Ash <mikeash@apple.com>,Mon Feb 3 13:45:29 2020 -0500,apple/swift,556,2020Q1,556 apple/swift 2020Q1,get swiftdt calling into symbolication and have it print all symbols from libswiftcore. rdar,neutral,2.0
1258,f5722f3fec7e37d599dcfa0cf5093d762c3b19a9,swift_jenkins <swift_jenkins@apple.com>,Sun Jan 19 19:56:59 2020 -0800,apple/swift,556,2020Q1,556 apple/swift 2020Q1,merge remotetracking branch '' into masternext,satisfaction,2.0
1259,83259438225e5a1901f2affa9ef5b4b8a3d7a18b,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Sat Jun 3 00:28:46 2017 -0700,kubernetes/kubernetes,464,2017Q2,464 kubernetes/kubernetes 2017Q2,"merge pull request from automatic merge from submitqueue batch tested with prs , , , , move tolerations to podspec for caliconode.yaml. what this pr does why we need it which issue this pr fixes optional, in fixes , fixes , format, will close that issue when pr gets merged fixes special notes for your reviewer release note releasenote none",satisfaction,5.0
1260,ac5edc3583597c2dd41b9110a0ba51ae4ce19502,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Fri Jun 9 11:18:45 2017 -0700,kubernetes/kubernetes,464,2017Q2,464 kubernetes/kubernetes 2017Q2,merge pull request from failuretrap automatic merge from submitqueue test set failure traps for all deployment tests appsprreviews,neutral,2.0
1261,45a6455ac7067c9cee9a4201bf24ac360df59aa3,Jeff Grafton <jgrafton@google.com>,Fri Apr 21 15:08:16 2017 -0700,kubernetes/kubernetes,464,2017Q2,464 kubernetes/kubernetes 2017Q2,use new docker_bundle rule instead of ixdy's custom docker_build rule,neutral,3.0
1262,3d309700d04572f8b81c48b7d4c2ea22065e5086,Tim Hockin <thockin@google.com>,Sat Aug 15 21:10:12 2015 -0700,kubernetes/kubernetes,464,2015Q3,464 kubernetes/kubernetes 2015Q3,make iptables use semver lib,satisfaction,4.0
1263,fe6b633e2adac4949b5bc3ceee4c34aa35bc110c,Eric Paris <eparis@redhat.com>,Wed Aug 5 15:42:13 2015 -0400,kubernetes/kubernetes,464,2015Q3,464 kubernetes/kubernetes 2015Q3,convert for util.ip to just use a net.ip pflag can handle ip addresses so use the pflag code instead of doing it ourselves. this means our code just uses net.ip and we don't have all of the useless casting back and forth!,satisfaction,2.0
1264,9721efed919a7ca4c59a3e2b60991e6bf2295366,krousey <krousey@users.noreply.github.com>,Mon Jul 20 12:30:47 2015 -0700,kubernetes/kubernetes,464,2015Q3,464 kubernetes/kubernetes 2015Q3,merge pull request from linking to api object definitions from docs,neutral,2.0
1265,d3f78d64bd024cb793743d76da1c53f538b895d7,Oliver Scherer <oliver.schneider@kit.edu>,Thu Aug 30 10:16:36 2018 +0200,rust-lang/rust,635,2018Q3,635 rust-lang/rust 2018Q3,merge pull request from further automate pre_publish.sh,frustration,4.0
1266,e94df4acb4c3f42fdc224a7164b63a99240add1e,bors <bors@rust-lang.org>,Tue Jul 31 20:52:14 2018 +0000,rust-lang/rust,635,2018Q3,635 rust-lang/rust 2018Q3,"auto merge of , simulacrum resolve modularize cratelocal macro_rules based on cc macro_rules items are collected from the whole crate and are planted into the root module as items, so the external view of the crate is symmetric with its internal view and something like cratemy_macro where my_macro is macro_rules works both locally and from other crates. closes",neutral,2.0
1267,d89ac4caf7b49596c6258f9b8f7f8b4f9945fbc5,ljedrz <ljedrz@gmail.com>,Mon Jul 23 14:10:31 2018 +0200,rust-lang/rust,635,2018Q3,635 rust-lang/rust 2018Q3,simplify functions in,satisfaction,2.0
1268,fa27234afbf6b7816e04eef0da1f6f8b917563f5,John McCall <rjmccall@apple.com>,Thu Jun 16 23:24:51 2011 +0000,llvm/llvm-project,1805,2011Q2,1805 llvm/llvm-project 2011Q2,be sure to try a final arcproduction even in objectivec. llvmsvn,neutral,2.0
1269,975c29629f6ffd8e1d8eb714d34d955cf77c5452,Benjamin Kramer <benny.kra@googlemail.com>,Mon Jun 13 12:56:51 2011 +0000,llvm/llvm-project,1805,2011Q2,1805 llvm/llvm-project 2011Q2,revert and on behalf of michael. they didn't build with clang. llvmsvn,neutral,3.0
1270,3b3531618b3c79471de0ef8ad84d49757658b575,Peter Collingbourne <peter@pcc.me.uk>,Mon Jun 20 19:06:57 2011 +0000,llvm/llvm-project,1805,2011Q2,1805 llvm/llvm-project 2011Q2,enable the make test rule in the root makefile llvmsvn,frustration,5.0
1271,8372539543a5004e31756cdf6baccb668895f3cf,Michael Liao <michael.liao@intel.com>,Wed Sep 19 19:36:58 2012 +0000,llvm/llvm-project,1805,2012Q3,1805 llvm/llvm-project 2012Q3,unify the logic in selectatomicloadadd and selectatomicloadarith merge the processing of load_add with other atomic loadarith operations separate the logic getting target constant for atomicloadop and add an optimization for atomicloadadd on with negative value optimize a minor case for atomicfetchadd with negative operand. test case is revised. llvmsvn,caution,4.0
1272,4ca7389925e0f7578cfc7af894a0d655672eb4ee,Sean Callanan <scallanan@apple.com>,Wed Sep 26 21:16:15 2012 +0000,llvm/llvm-project,1805,2012Q3,1805 llvm/llvm-project 2012Q3,added support for the debugclang configuration to the testsuite. llvmsvn,frustration,5.0
1273,18023e4b20935b4194598a7eba5bef2653c9897c,Victor Oliveira <Victor.Oliveira@amd.com>,Wed Aug 15 22:35:36 2012 +0000,llvm/llvm-project,1805,2012Q3,1805 llvm/llvm-project 2012Q3,bug in experimental targets llvmsvn,neutral,1.0
1274,ef302ca94e2aacb14f7cb1b96a9de9242b36c626,Udo Erdelhoff <ue@FreeBSD.org>,Sun May 26 19:35:41 2002 +0000,freebsd/freebsd-src,1207,2002Q2,1207 freebsd/freebsd-src 2002Q2,the prerelease sweep continues just update the 'original revision' markers of some files where the last update of the english version has no impact on the translated version spelling checks are a premium cause of this except making it harder to find the changes that still need to be .,neutral,2.0
1275,aa5619ca9eea6f1014ea457333b33f55b80cf59d,Dag-Erling Smørgrav <des@FreeBSD.org>,Sat Apr 6 13:59:43 2002 +0000,freebsd/freebsd-src,1207,2002Q2,1207 freebsd/freebsd-src 2002Q2,build a working version of sort from contrib. use netbsd.h as a hack to avoid bringing the sources off the vendor branch just to ifdef out the rcs and sccs ids.,neutral,1.0
1276,a30d7c60f602d4c7c983e3f91aea34518e094567,Jake Burkholder <jake@FreeBSD.org>,Sat Apr 6 08:13:52 2002 +0000,freebsd/freebsd-src,1207,2002Q2,1207 freebsd/freebsd-src 2002Q2,use ctassert rather than a runtime check to detect kinfo_proc size changes. remove the ugly yuck code to busy wait for seconds.,neutral,1.0
1277,2c482d8d41a7c4424583f2abe62be85b188ddeb8,ljedrz <ljedrz@gmail.com>,Fri Oct 12 14:16:06 2018 +0200,rust-lang/rust,635,2018Q4,635 rust-lang/rust 2018Q4,use cow where applicable,neutral,1.0
1278,1b355a89763efa5a67931f5190cbd0331d1f9a5d,Diana <iaz3@users.noreply.github.com>,Sun Oct 14 08:14:21 2018 -0400,rust-lang/rust,635,2018Q4,635 rust-lang/rust 2018Q4,fix incorrect link in println! documentation the eprintln! link was incorrectly linking to eprint! instead,neutral,1.0
1279,212a4fe4f4aaa8e592f4e7178d9c9a7bcd8c97be,Oliver Scherer <oliver.schneider@kit.edu>,Sun Oct 14 22:55:26 2018 +0200,rust-lang/rust,635,2018Q4,635 rust-lang/rust 2018Q4,fix for rustc master,neutral,1.0
1280,f2c398c74a23a4f721eefde87257386be831189a,David Smith <david_smith@apple.com>,Mon Feb 11 18:41:14 2019 -0800,apple/swift,556,2019Q1,556 apple/swift 2019Q1,update test expectations around set storage identifiers,neutral,1.0
1281,b74746257078bedc8552001b7c591cf79d4315db,Pavel Yaskevich <pyaskevich@apple.com>,Sat Jan 26 11:10:14 2019 -0800,apple/swift,556,2019Q1,556 apple/swift 2019Q1,merge pull request from cleanupsforsr couple of small cleanups related to forceoptional,neutral,2.0
1282,1eabe7838a3275c88f944f058da608fddf8ece03,Arnold Schwaighofer <aschwaighofer@apple.com>,Tue Mar 12 16:58:48 2019 -0700,apple/swift,556,2019Q1,556 apple/swift 2019Q1,merge pull request from add a test for the tsan coroutine lowering order change,caution,4.0
1283,2ac788b4923592957e6b1e4e59b86f7684b5396d,k8s-merge-robot <k8s.production.user@gmail.com>,Wed Mar 30 12:53:55 2016 -0700,kubernetes/kubernetes,464,2016Q1,464 kubernetes/kubernetes 2016Q1,merge pull request from davidproposal automatic merge from submitqueue release notes proposal get the conversation started. cc eparis vishh davidopp thockin ref,frustration,4.0
1284,4f65f68a121a5d367d452595efc8e0a3e711a175,k8s-merge-robot <k8s.production.user@gmail.com>,Sat Jan 2 02:36:18 2016 -0800,kubernetes/kubernetes,464,2016Q1,464 kubernetes/kubernetes 2016Q1,merge pull request from proxyconntrackmax auto commit by pr queue bot,neutral,2.0
1285,c02e966d65febbfeafc484fdb0b45565b587120a,Piotr Szczesniak <pszczesniak@google.com>,Thu Feb 18 07:18:37 2016 +0100,kubernetes/kubernetes,464,2016Q1,464 kubernetes/kubernetes 2016Q1,applied comments from the review,satisfaction,2.0
1286,6262d062a3fc803d1798365e745b39f4faa04b0e,Jody McIntyre <scjody@steamballoon.com>,Mon May 16 21:54:05 2005 -0700,torvalds/linux,4589,2005Q2,4589 torvalds/linux 2005Q2,"fix premature expiry of async packets set the initial sendtime to be seconds in the future, to avoid the packet timing out while it's still queued to be sent. this fixes furthur no tlabel match problems caused by premature expiry. mcintyre morton torvalds",frustration,4.0
1287,10a87fcf40ce8cee1e85d936cd6d7662943c804e,Tobias Klauser <tklauser@nuerscht.ch>,Thu May 12 22:20:53 2005 -0400,torvalds/linux,4589,2005Q2,4589 torvalds/linux 2005Q2,use the dma_bit_mask constant the previous patch did not compile cleanly on all architectures so here's a fixed one. use the dma_bit_mask constant from dmamapping.h when calling pci_set_dma_mask or pci_set_consistent_dma_mask klauser garzik,neutral,2.0
1288,1c8594b48b00a98d12477355e944e165a5f64cd5,Michael Chan <mchan@broadcom.com>,Thu Apr 21 17:12:46 2005 -0700,torvalds/linux,4589,2005Q2,4589 torvalds/linux 2005Q2,fix bug in tg_set_eeprom fix a bug in tg_set_eeprom when the length is less than and the offset is not byte aligned. chan s. miller,neutral,1.0
1289,b7b7932c1ddcd7ad2e78afedeb5724f089e85cab,bluhm <bluhm@openbsd.org>,Mon Oct 26 10:43:42 2015 +0000,openbsd/src,932,2015Q4,932 openbsd/src 2015Q4,nothing in base uses native language support anymore. remove nls support from the makefiles. ok naddy,satisfaction,4.0
1290,d8f7535e34422f6cfeee72b853e02c8c7db24088,deraadt <deraadt@openbsd.org>,Sun Oct 11 23:29:56 2015 +0000,openbsd/src,932,2015Q4,932 openbsd/src 2015Q4,fix regression ttyname failure not handled right,satisfaction,1.0
1291,14f68e822730eb09134e90eb001e223ad68a400e,nicm <nicm@openbsd.org>,Thu Oct 22 10:48:30 2015 +0000,openbsd/src,932,2015Q4,932 openbsd/src 2015Q4,this should not be changed.,frustration,5.0
1292,f6ad4198b3648c984c74d5f5e2090391a209d1b5,bjorn3 <bjorn3@users.noreply.github.com>,Tue Jan 29 20:28:04 2019 +0100,rust-lang/rust,635,2019Q1,635 rust-lang/rust 2019Q1,rustup to rustc nightly daddae,caution,3.0
1293,c40b97796e7781300fa758a5dfcc92061a967e51,bors <bors@rust-lang.org>,Wed Jan 16 23:25:41 2019 +0000,rust-lang/rust,635,2019Q1,635 rust-lang/rust 2019Q1,"auto merge of calcglobmap, always calculate glob map but only for glob uses previously calculating glob map was optin, however it did record node id ident use for every use directive. this aims to see if we can unconditionally calculate the glob map and not regress performance. main motivation is to get rid of some of the moving pieces and simplify the compilation interface this would allow us to entirely remove crateanalysis. later, we could easily expose a relevant query, similar to the likes of maybe_unused_trait_import so using precomputed data from the resolver, but which could be rewritten to be ondemand. r? nikomatsakis local perf run showed mostly noise except ctfestress but i'd appreciate if we could do a perf run run here and doublecheck that this won't regress performance.",neutral,1.0
1294,0a8b5b49076869e3b448d6b7d685b3802ec4922a,Mazdak Farrokhzad <twingoow@gmail.com>,Sat Jan 12 10:55:24 2019 +0100,rust-lang/rust,635,2019Q1,635 rust-lang/rust 2019Q1,"rollup merge of , fixing a typographical error.",frustration,3.0
1295,cc4ac5459c6ebf128ab64084289d567787f3d24c,Justin Santa Barbara <justin@fathomdb.com>,Tue May 10 09:06:45 2016 -0400,kubernetes/kubernetes,464,2016Q2,464 kubernetes/kubernetes 2016Q2,"aws kubeup increase timeout waiting for docker start apparently our cluster start time increased, to the point where users are reporting spurious timeouts and users are reporting that increasing the timeout fixes the issue thanks paralin for the suggestion and jlfields for confirming. fix",neutral,1.0
1296,2599607a6412bde1d70d65ed1ec60fc80d1c6a8a,k8s-merge-robot <k8s.production.user@gmail.com>,Wed Apr 20 18:27:28 2016 -0700,kubernetes/kubernetes,464,2016Q2,464 kubernetes/kubernetes 2016Q2,"merge pull request from automatic merge from submitqueue disable flannel job until it works see bug, this job is fails every time and has done so for two months. until someone has time to investigate and fix disable the job on jenkins so we're not wasting resources and reducing system stability.",neutral,1.0
1297,cb3a479ed73a309617a42a8a3f8e635a744fde40,Clayton Coleman <ccoleman@redhat.com>,Thu May 5 18:06:06 2016 -0400,kubernetes/kubernetes,464,2016Q2,464 kubernetes/kubernetes 2016Q2,add quantity benchmarks,neutral,1.0
1298,d38f436a5f7f0e9dc96218eb6c286a3c4a068d06,Andrew Trick <atrick@apple.com>,Thu Apr 30 14:47:43 2020 -0700,apple/swift,556,2020Q2,556 apple/swift 2020Q2,revert merge fix smallvectorbase in the swift runtime.,neutral,1.0
1299,68af9d595b4dbccbe64ea4eea07edf7f2df4a21e,swift_jenkins <swift_jenkins@apple.com>,Fri May 22 20:18:30 2020 -0700,apple/swift,556,2020Q2,556 apple/swift 2020Q2,merge remotetracking branch '' into masternext,satisfaction,7.0
1300,d8bd62d774d1062756a23d8a7ec29660fc840281,Pavel Yaskevich <pyaskevich@apple.com>,Fri Apr 24 12:16:30 2020 -0700,apple/swift,556,2020Q2,556 apple/swift 2020Q2,merge pull request from locatorfromtypednode switch constraintlocator to be anchored on typednode,satisfaction,3.0
1301,a744607896419f43c1b77a77b49e0e36451ddbc8,Varun Gandhi <varun_gandhi@apple.com>,Wed Sep 18 11:46:36 2019 -0700,apple/swift,556,2019Q3,556 apple/swift 2019Q3,add some notes to getasttype's docstring.,satisfaction,4.0
1302,88f8592e6521fa77af8eac77aa79b79bca6c5de5,Michael Gottesman <mgottesman@apple.com>,Fri Aug 30 10:38:31 2019 -0700,apple/swift,556,2019Q3,556 apple/swift 2019Q3,merge pull request from rename isconsumed isdeadliverange.,neutral,2.0
1303,e5f1aea2f94613569740234664911122cdd6c17c,Michael Gottesman <mgottesman@apple.com>,Tue Aug 27 18:57:24 2019 -0700,apple/swift,556,2019Q3,556 apple/swift 2019Q3,"teach the pass how to eliminate copies from begin_borrow, load_borrow where all users can accept a guaranteed parameter. i previously implemented this only for functions so i didn't need to use the linear lifetime checker to determine if all destroys where within the lifetime of the borrowed value. that was just to be incremental. in this commit, i unleash the whole optimization.",neutral,1.0
1304,ae3d20f9aef78554f0d0f5eec13982e9802a45d2,Jacques Pienaar <jpienaar@google.com>,Thu Mar 29 09:42:05 2018 -0700,tensorflow/tensorflow,496,2018Q1,496 tensorflow/tensorflow 2018Q1,add bitcast for equal bitwidth casts. map bitcasts to xla bitcast hlo if the bitwidth of the elementtype is the same. piperoriginrevid,neutral,1.0
1305,bf741007d1f6f440a2671b9fa8894af3df10ed44,Skye Wanderman-Milne <skyewm@google.com>,Tue Mar 20 21:30:02 2018 -0700,tensorflow/tensorflow,496,2018Q1,496 tensorflow/tensorflow 2018Q1,"c api fix device colocation edge case in import_graph_def this change makes the c api consistent with the python api, by making sure that all nodes in a colocation group have the device of the op named in the _class attr all other ops' devices are ignored. this is currently done by preserving the current python logic for colocation and devices, which only works if all ops start with no device set. without this change, imported nodes would have the device specified in the graphdef. this change unsets any device before running the python logic. piperoriginrevid",neutral,1.0
1306,371923a0ac7b76dc5cbdd8d100679a20e594b827,Tatiana Shpeisman <shpeisman@google.com>,Wed Jan 31 15:47:42 2018 -0800,tensorflow/tensorflow,496,2018Q1,496 tensorflow/tensorflow 2018Q1,mkl is no longer enabled via .configure. fixed documentation to reflect this. piperoriginrevid,satisfaction,4.0
1307,5f210c64731d95d23e833932a24705d57a5fc19a,Chao Xu <xuchao@google.com>,Mon Oct 19 16:10:02 2015 -0700,kubernetes/kubernetes,464,2015Q4,464 kubernetes/kubernetes 2015Q4,fix names in comments,neutral,2.0
1308,d524bd8f525cee63d5a37de65c43737383639b3d,k8s-merge-robot <k8s.production.user@gmail.com>,Tue Dec 1 12:42:57 2015 -0800,kubernetes/kubernetes,464,2015Q4,464 kubernetes/kubernetes 2015Q4,merge pull request from test auto commit by pr queue bot,neutral,4.0
1309,cc9fff8e92f4b12269d4c0dbd8b6d3bf59bda9b7,He Simei <hesimei@zju.edu.cn>,Wed Nov 18 09:59:00 2015 +0800,kubernetes/kubernetes,464,2015Q4,464 kubernetes/kubernetes 2015Q4,fix kubeup workflow,satisfaction,5.0
1310,15bcd23e37102b85465e188be9d2417067f2dc94,Jordan Rose <jordan_rose@apple.com>,Fri Jun 21 18:00:44 2019 -0700,apple/swift,556,2019Q2,556 apple/swift 2019Q2,"propagate availability for nested types too previously the module interface printing would scrape the availableattrs from the containing decl in order to print synthesized extensions for conformances that wouldn't otherwise be printedbut that missed the case where a containing lexical scope had the availability attributes instead. now it walks up the chain of parent declcontexts and collects the most specific availableattr for each platform. this still isn't formally correct because it doesn't merge availability for one platform if something inside is deprecated unconditionally but outside has an introduced version, but it's going to match the vast majority of code out there. prerequisite for rdar",neutral,1.0
1311,238f10cbcc5297a4c6d233619425c81c7b32b1a3,Mishal Shah <mishal_shah@apple.com>,Fri Jun 21 13:09:01 2019 -0700,apple/swift,556,2019Q2,556 apple/swift 2019Q2,merge pull request from checkoutshainfo print hashes at the end of the successful .,neutral,2.0
1312,3f774094b7f8284eb5e9dd432213c28092a6abb0,Mike Ash <mikeash@apple.com>,Thu May 16 14:41:25 2019 -0400,apple/swift,556,2019Q2,556 apple/swift 2019Q2,"fall back to loading swift dylibs from swift on apple platforms. continue to load the dylibs next to the compiler if they exist. if they don't, then use the os's dylibs. rdar",neutral,1.0
1313,b88a87560835164a4d7028c3ed0aa347117b0984,Doug Gregor <dgregor@apple.com>,Fri Dec 14 13:31:15 2018 -0800,apple/swift,556,2018Q4,556 apple/swift 2018Q4,"allow extensions of typealiases naming generic specializations. when a nongeneric typealias refers to a specialization of a generic type, e.g. swift typealias simd_float treat an extension of the typealias as an extension of the underlying type with sametype constraints between the generic parameters and the specific arguments, e.g swift extension simd_float is treated as swift extension simd where scalar float this addresses a sourcecompatibility problem with se, where existing types such as simd_float which were separate structs became specializations of a generic simd type. fixes rdar and rdar.",satisfaction,6.0
1314,4232880a112dc9a2d832266efbd759bd5ce45c7d,swift-ci <swift-ci@users.noreply.github.com>,Fri Dec 14 08:09:57 2018 -0800,apple/swift,556,2018Q4,556 apple/swift 2018Q4,merge remotetracking branch '' into masternext,frustration,3.0
1315,d3c2a295a6e9aff48822920ad98356871601987c,Mike Ash <mikeash@apple.com>,Mon Dec 17 15:55:39 2018 -0500,apple/swift,556,2018Q4,556 apple/swift 2018Q4,fix the printing of _objcruntimename. rdar,caution,4.0
1316,b4f5a5806c15a7d1406fb955f014b8975d9c8bce,swift-ci <swift-ci@users.noreply.github.com>,Thu Nov 16 14:06:10 2017 -0800,apple/swift,556,2017Q4,556 apple/swift 2017Q4,merge pull request from adrian,neutral,1.0
1317,d484a9cddaf475fd1a2bada05c1dfb7b6f7eaaf3,Roman Levenstein <rlevenstein@apple.com>,Tue Oct 17 15:24:40 2017 -0700,apple/swift,556,2017Q4,556 apple/swift 2017Q4,"enable serialization of witness tables by default now that we remove the flag from functions after their early serialization, we can run another round of optimizations on them. due to this change, it should be ok to serialize witness tables now because marking the witness methods does not affect how well they can be optimized.",satisfaction,3.0
1318,1bbb9e5217f2032b8c19b151eea925ca5992fbdb,Jun Xiang Tee <juntee@google.com>,Wed Mar 21 19:39:40 2018 -0700,kubernetes/kubernetes,464,2018Q1,464 kubernetes/kubernetes 2018Q1,revert add rolling update daemonset existing pod adoption integration test,frustration,4.0
1319,b230fb8ac4070c3c8b5f0388599e7b9c240b3191,Filipe Brandenburger <filbranden@google.com>,Tue Mar 27 21:11:00 2018 -0700,kubernetes/kubernetes,464,2018Q1,464 kubernetes/kubernetes 2018Q1,"use a string for cgroupname, which is a more accurate internal representation the slice of strings more precisely captures the hierarchic nature of the cgroup paths we use to represent pods and their groupings. it also ensures we're reducing the chances of passing an incorrect path format to a cgroup driver that requires a different path naming, since now explicit conversions are always needed. the new constructor newcgroupname starts from an existing cgroupname, which enforces a hierarchy where a root is always needed. it also performs checking on the component names to ensure invalid characters and _ are not in use. a rootcgroupname for the top of the cgroup hierarchy tree is introduced. this refactor results in a net reduction of around lines of code, mainly with the demise of convertcgroupnametosystemd which had fairly complicated logic in it and was doing just too many things. there's a small todo in a helper updatesystemdcgroupinfo that was introduced to make this commit possible. that logic really belongs in libcontainer, i'm planning to send a pr there to include it there. the api already takes a field with that information, only that field is only processed in cgroupfs and not systemd driver, we should fix that. tested by running the node tests on both ubuntu . with cgroupfs driver and centos with systemd driver.",satisfaction,2.0
1320,87c97f413704f0e73e4742526c8601775f7e2109,Yan Facai (颜发才) <facai.yan@gmail.com>,Thu Dec 21 14:00:30 2017 +0800,tensorflow/tensorflow,496,2017Q4,496 tensorflow/tensorflow 2017Q4,tst unknown shape case,neutral,3.0
1321,376147cd71d1a240dad428c3ff82ca4ea5f4e88e,RJ Ryan <rjryan@google.com>,Thu Oct 5 10:03:12 2017 -0700,tensorflow/tensorflow,496,2017Q4,496 tensorflow/tensorflow 2017Q4,save an unnecessary logical_not in the gradient. piperoriginrevid,satisfaction,4.0
1322,485b31443fedfbdcf211f68a52802a1748ecb829,Xi Ge <xi_ge@apple.com>,Tue Dec 8 14:11:19 2015 -0800,apple/swift,556,2015Q4,556 apple/swift 2015Q4,fix a crash valid typeloc does not imply nonnull type. rdar,satisfaction,3.0
1323,462f7e6a82b3b4eb9c7e9138c4bb92689627d81c,practicalswift <practicalswift@users.noreply.github.com>,Mon Dec 14 00:11:36 2015 +0100,apple/swift,556,2015Q4,556 apple/swift 2015Q4,fix typo dependences dependencies,neutral,3.0
1324,a6e01521eee8d3068dad91e78a7b3e287c53f958,A. Unique TensorFlower <gardener@tensorflow.org>,Fri Oct 7 17:51:43 2016 -0800,tensorflow/tensorflow,496,2016Q4,496 tensorflow/tensorflow 2016Q4,add tensor output shapes to costgraphdef. update stepstatscollectorbuildcostmodel to populate these fields. misc. cleanup and optimizations in step_stats_collector.cc and costmodel.cc. change,satisfaction,2.0
1325,810b3537ff161065c2f3073411e2e16be5cc1b0f,Rohan Jain <rohanj@google.com>,Thu Dec 15 18:56:12 2016 -0800,tensorflow/tensorflow,496,2016Q4,496 tensorflow/tensorflow 2016Q4,adds num_epochs argument to input_pipeline_ops.seek_next to limit number of times we see each string. also changes the shape of the input output for the obtainnext op from shapes to 's instead which are more intuitive. then we migrate _shared_queue functions in graph_io to use seek_next instead. change,neutral,4.0
1326,642bd6828cb807ef20adbadd876accdc0c339609,swift-ci <swift-ci@users.noreply.github.com>,Mon Jun 11 13:58:38 2018 -0700,apple/swift,556,2018Q2,556 apple/swift 2018Q2,merge pull request from,satisfaction,5.0
1327,92b6d8cb8f8c2cb4e588401248a5c2ef85b17672,Ben Cohen <ben_cohen@apple.com>,Mon Jun 25 19:54:13 2018 -0700,apple/swift,556,2018Q2,556 apple/swift 2018Q2,remove inlineability from mirrors,neutral,5.0
1328,df6841576d8e175cae5c0719f237956cd28d64d9,Pine Wu <octref@gmail.com>,Wed Mar 11 11:07:34 2020 -0700,microsoft/vscode,303,2020Q1,303 microsoft/vscode 2020Q1,up to date,neutral,3.0
1329,db12b4a1fd0b65faf877828dfc383a346f3ef031,Alexandru Dima <alexdima@microsoft.com>,Tue Jan 14 10:16:39 2020 +0100,microsoft/vscode,303,2020Q1,303 microsoft/vscode 2020Q1,update diff icons to use codicons update diff icons to use codicons,caution,3.0
1330,773ce53ce7b3acb97cfbd3d189dc3fbf33ec05c6,bors <bors@rust-lang.org>,Tue Jun 26 07:06:18 2018 +0000,rust-lang/rust,635,2018Q2,635 rust-lang/rust 2018Q2,"auto merge of forestcleanup, obligation forest cleanup while looking at this code i was scratching my head about whether a node could appear in both parent and dependents. turns out it can, but it's not useful to do so, so this pr cleans things up so it's no longer possible.",frustration,5.0
1331,f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c,est31 <MTest31@outlook.com>,Sat May 12 10:18:21 2018 +0200,rust-lang/rust,635,2018Q2,635 rust-lang/rust 2018Q2,add for continue pointing to a labeled block,caution,2.0
1332,e31ed07a9cf60fbf9cecfbd5938e09d85d53d086,hzxuzhonghu <xuzhonghu@huawei.com>,Tue Dec 5 15:15:46 2017 +0800,kubernetes/kubernetes,464,2017Q4,464 kubernetes/kubernetes 2017Q4,also check pod securitycontextt hostnetwork in exec admission controller,neutral,2.0
1333,2abc4742d98c59eae1d3d385d007d06b94661fc9,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Wed Nov 15 23:06:14 2017 -0800,kubernetes/kubernetes,464,2017Q4,464 kubernetes/kubernetes 2017Q4,"merge pull request from automatic merge from submitqueue batch tested with prs , , , , . if you want to cherrypick this change to another branch, please follow the instructions here. verify token auth file what this pr does why we need it verify token auth file and to prevent empty token. which issues this pr fixes optional, in fixes , fixes , format, will close the issues when pr gets merged fixes special notes for your reviewer release note releasenote none",neutral,3.0
1334,c5fddd81ab47ddbfd5525210fb1536472de399b8,Alex Crichton <alex@alexcrichton.com>,Wed Feb 18 14:31:23 2015 -0800,rust-lang/rust,635,2015Q1,635 rust-lang/rust 2015Q1,"rollup merge of parsefail after making rustc fail on errors at a stop point, like z parseonly, in , the files in this pr also fail during the parse stage and should be moved as well. sorry for spliting this move up in two prs.",satisfaction,4.0
1335,2a89d695f4edb6fe8c7629f48908d3d3d9076426,Kevin Butler <haqkrs@gmail.com>,Mon Mar 30 23:47:01 2015 +0100,rust-lang/rust,635,2015Q1,635 rust-lang/rust 2015Q1,libcore ensure min and max functions are consistent for equal inputs,satisfaction,4.0
1336,f97dd62ece6637b160be823c094bd5a7c63f66a8,Matt Bierner <matb@microsoft.com>,Tue Mar 2 11:31:34 2021 -0800,microsoft/vscode,303,2021Q1,303 microsoft/vscode 2021Q1,make sure we use the cannonical uri for file move target for,neutral,4.0
1337,c81420bb3793f1f6523831c33d66c7d5ee72a42a,meganrogge <megrogge@gmail.com>,Wed Mar 31 20:26:42 2021 -0700,microsoft/vscode,303,2021Q1,303 microsoft/vscode 2021Q1,add onprocessbinary to ptyhostservice,neutral,1.0
1338,e791ae9c099f3bb01b888608060459855d20c33a,sky@google.com <sky@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Aug 20 22:06:21 2008 +0000,chromium/chromium,4568,2008Q3,4568 chromium/chromium 2008Q3,fixes leak in bookmarkbarcontextmenu test. dcbdfc,neutral,2.0
1339,411c2b7eff5b81465f6c8abb4da264043be15e0c,hyatt@apple.com <hyatt@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Jul 14 22:10:10 2008 +0000,chromium/chromium,4568,2008Q3,4568 chromium/chromium 2008Q3,"david hyatt fix for bugzilla bug , link and style elements should be allowed outside the . reviewed by sam added styleoutsidehead.html added linkoutsidehead.html .cpp webcoredocumentaddstylesheetcandidatenode webcoredocumentremovestylesheetcandidatenode webcoredocumentrecalcstyleselector .h .cpp webcorenodecomparedocumentposition .cpp webcoreprocessinginstructioncheckstylesheet webcoreprocessinginstructioninsertedintodocument webcoreprocessinginstructionremovedfromdocument webcoreprocessinginstructionfinishparsingchildren .h webcoreprocessinginstructionsetcreatedbyparser .cpp webcorestyleelementremovedfromdocument .cpp webcorexmltokenizerstartelementns webcorexmltokenizerprocessinginstruction webcore .cpp webcorelinkconstructor .cpp webcorehtmllinkelementhtmllinkelement webcorehtmllinkelementinsertedintodocument webcorehtmllinkelementremovedfromdocument webcorehtmllinkelementfinishparsingchildren .h webcorehtmllinkelementsetcreatedbyparser .cpp webcorehtmlstyleelementinsertedintodocument webcorehtmlstyleelementremovedfromdocument .cpp webcoresvgstyleelementinsertedintodocument webcoresvgstyleelementremovedfromdocument bb",neutral,4.0
1340,5d58163f7dda5109d477166f037b8eab9b025a3d,Matthias Krüger <matthias.krueger@famsik.de>,Mon May 6 21:41:05 2019 +0200,rust-lang/rust,635,2019Q2,635 rust-lang/rust 2019Q2,trivially_copy_pass_by_ref print size of type and limit in the lint message,frustration,3.0
1341,869ddd8d0019683c007956bae17fc07cd30f39f7,Pietro Albini <pietro@pietroalbini.org>,Fri May 10 10:17:52 2019 +0200,rust-lang/rust,635,2019Q2,635 rust-lang/rust 2019Q2,ci still use aws for caches,satisfaction,6.0
1342,17864d5dd2d159d8143ab23f37eea39b6f64e145,swift_jenkins <swift_jenkins@apple.com>,Sun Sep 6 16:55:16 2020 -0700,apple/swift,556,2020Q3,556 apple/swift 2020Q3,merge remotetracking branch '' into masternext,satisfaction,2.0
1343,03411af15a1780ddca1962e3a373e832761f3736,David Zarzycki <dave@znu.io>,Thu Jul 9 08:22:46 2020 -0400,apple/swift,556,2020Q3,556 apple/swift 2020Q3,"convert computeloweredrvaluetype to cantypevisitor in practice, llvm can only optimize trivial if chains into a switch.",neutral,3.0
1344,0cfc058a4270d198d540c4b547999c289a18b1aa,Alan Cox <alc@FreeBSD.org>,Thu Jul 22 23:04:41 2004 +0000,freebsd/freebsd-src,1207,2004Q3,1207 freebsd/freebsd-src 2004Q3,revision . use kmem_alloc_nofault rather than kmem_alloc_pageable in pmap_mapdev. see revision . of .c for a detailed rationale.,satisfaction,4.0
1345,5285558ac2d0c7bb889d962c3d270463ee921ce0,Alan Cox <alc@FreeBSD.org>,Thu Jul 22 19:44:49 2004 +0000,freebsd/freebsd-src,1207,2004Q3,1207 freebsd/freebsd-src 2004Q3,"change uma_zone_set_obj to call kmem_alloc_nofault instead of kmem_alloc_pageable. the difference between these is that an errant memory access to the zone will be detected sooner with kmem_alloc_nofault. the following changes serve to eliminate the following lockorder reversal reported by witness xcac vm object vm object . xcacb swap_pager swhash swap_pager swhash . xcbdc vm object vm object . there is no potential deadlock in this case. however, witness is unable to recognize this because vm objects used by uma have the same type as ordinary vm objects. to remedy this, we make the following changes add a mutex type argument to vm_object_lock_init. use the mutex type argument to assign distinct types to special vm objects such as the kernel object, kmem object, and uma objects. define a static swap zone object for use by uma. only static objects are assigned a special mutex type.",neutral,3.0
1346,1f9cdce9cf1bcdd3db24463eece13e8d81d7325f,Eric Tune <etune@google.com>,Thu Mar 26 10:52:09 2015 -0700,kubernetes/kubernetes,464,2015Q1,464 kubernetes/kubernetes 2015Q1,merge pull request from update readme to show community support,frustration,3.0
1347,ee276b26cb91415c0229a1f01e5c853f53b1f5f2,Alex Mohr <mohr@google.com>,Mon Mar 9 10:58:44 2015 -0700,kubernetes/kubernetes,464,2015Q1,464 kubernetes/kubernetes 2015Q1,merge pull request from deleting old sample json moving those in use updating references,satisfaction,2.0
1348,37e0136fef68712e6757f460529f1dec7e768fe0,Chris Lattner <sabre@nondot.org>,Wed Dec 3 07:45:15 2008 +0000,llvm/llvm-project,1805,2008Q4,1805 llvm/llvm-project 2008Q4,third time is the charm. llvmsvn,neutral,4.0
1349,765edbc4e47c1f1f0c81bc167b42807093ac6195,Dan Gohman <gohman@apple.com>,Tue Oct 14 15:14:55 2008 +0000,llvm/llvm-project,1805,2008Q4,1805 llvm/llvm-project 2008Q4,add a brief mention of the new freelist management code. llvmsvn,caution,2.0
1350,773865445571ae10782711c80d9a6f55ae22ed20,Alex Ross <alros@microsoft.com>,Tue May 5 17:27:48 2020 +0200,microsoft/vscode,303,2020Q2,303 microsoft/vscode 2020Q2,fix task instance limit part of,frustration,3.0
1351,6849775440496504e0677ffcf2a46d47ad9130f5,rebornix <penn.lv@gmail.com>,Thu May 14 21:00:07 2020 -0700,microsoft/vscode,303,2020Q2,303 microsoft/vscode 2020Q2,clear list view disposables,frustration,5.0
1352,e6f8843c701a0ea72ddfe0b5538b815767a4ee5d,Joe Groff <jgroff@apple.com>,Thu Sep 22 18:48:26 2016 -0700,apple/swift,556,2016Q3,556 apple/swift 2016Q3,merge pull request from depends attempt to tighten up dependencies for new mapkit and quartzcore overlays.,neutral,4.0
1353,2aab125258ba6de566c64affda766665218e1013,Chris Lattner <clattner@nondot.org>,Sun Jul 3 14:22:04 2016 -0700,apple/swift,556,2016Q3,556 apple/swift 2016Q3,revert turning se error back to warning,satisfaction,3.0
1354,c51f3753df6f7b5e77d9bbe898f54265e8593dda,Poul-Henning Kamp <phk@FreeBSD.org>,Fri Sep 13 11:41:25 2002 +0000,freebsd/freebsd-src,1207,2002Q3,1207 freebsd/freebsd-src 2002Q3,fix printf format issues by using j sponsored by darpa nai labs.,neutral,3.0
1355,95ec5961f62fedbd81b09a816c7a82a6a091f66e,Scott Long <scottl@FreeBSD.org>,Tue Aug 20 04:46:04 2002 +0000,freebsd/freebsd-src,1207,2002Q3,1207 freebsd/freebsd-src 2002Q3,don't abuse the stack when translating names.,frustration,5.0
1356,4d9a24026cbef4115129538456dd3fbbbd477b06,A. Unique TensorFlower <gardener@tensorflow.org>,Thu Jan 12 12:27:19 2017 -0800,tensorflow/tensorflow,496,2017Q1,496 tensorflow/tensorflow 2017Q1,transpose confusion matrix output to make it consistent with sklearn. change,neutral,2.0
1357,dbca4f78380d56c0b144daa058decaea2bbf55ff,Yong Tang <yong.tang.github@outlook.com>,Sat Mar 25 14:03:33 2017 -0700,tensorflow/tensorflow,496,2017Q1,496 tensorflow/tensorflow 2017Q1,"remove pandas imports, and use convert_to_tensor, as suggested in the review. this fix removes pandas imports, and use convert_to_tensor, as suggested in the review. tang",frustration,5.0
1358,02a1932d1cf88d25390396d6caac7a947a04a83a,Andrew Turner <andrew@FreeBSD.org>,Tue May 31 18:05:17 2016 +0000,freebsd/freebsd-src,1207,2016Q2,1207 freebsd/freebsd-src 2016Q2,"arm_gic_map is a mask not the cpus id, there is no need to shift it. pointyhat to andrew obtained from abt systems ltd sponsored by the freebsd foundation",caution,2.0
1359,932a6e432d2b901f0d7741c2be64c5c5730f6f22,Jamie Gritton <jamie@FreeBSD.org>,Thu Jun 9 21:59:11 2016 +0000,freebsd/freebsd-src,1207,2016Q2,1207 freebsd/freebsd-src 2016Q2,fix a vnode leak when giving a child jail a toolong path when debug,neutral,2.0
1360,7b69ad91585cebb50a1b6cae0d8d9a3ac83d78ff,"NODA, Kai <nodakai@gmail.com>",Sun Mar 27 05:29:05 2016 +0800,rust-lang/rust,635,2016Q1,635 rust-lang/rust 2016Q1,"type macro is tracked at rust, not kai",neutral,1.0
1361,d0bac3f1475503d044f50c5997c3d48d87675541,bors <bors@rust-lang.org>,Mon Jan 18 00:58:21 2016 +0000,rust-lang/rust,635,2016Q1,635 rust-lang/rust 2016Q1,"auto merge of , i dont understand what the flow information of an address is, but it looks separate from the scope id. this was probably a error.",neutral,2.0
1362,c46ec66a1fd88365220596ed03322cedfe16a761,Ted Yu <yuzhihong@gmail.com>,Wed May 29 17:25:49 2019 -0700,kubernetes/kubernetes,464,2019Q2,464 kubernetes/kubernetes 2019Q2,avoid unnecessary concatenation of errors,neutral,2.0
1363,477f17475dd7edb2d395688dc83bd25bccef9165,Lee Verberne <verb@google.com>,Thu Jun 20 09:24:06 2019 +0000,kubernetes/kubernetes,464,2019Q2,464 kubernetes/kubernetes 2019Q2,generated code for ephemeral containers integration tests,neutral,3.0
1364,287bbd4df40cdf96549894b4c378a55ac9c5e26e,zoecarver <z.zoelec2@gmail.com>,Sun Nov 3 13:01:52 2019 -0800,apple/swift,556,2019Q4,556 apple/swift 2019Q4,add a test,neutral,2.0
1365,1f667676091d12933c3b3144b953bd92535e2d8e,zoecarver <z.zoelec2@gmail.com>,Tue Dec 24 15:40:10 2019 -0800,apple/swift,556,2019Q4,556 apple/swift 2019Q4,update requirements for test,satisfaction,5.0
1366,fd5cef485792e356410116386dd94e05fbb218c7,Andrew Trick <atrick@apple.com>,Fri Jan 8 12:04:57 2021 -0800,apple/swift,556,2021Q1,556 apple/swift 2021Q1,add requires asserts to copy_propagation.sil test.,frustration,2.0
1367,d4673467af4282dd0339c778a396bd448d575a4a,Robert Widmann <rwidmann@apple.com>,Mon Feb 22 15:18:07 2021 -0800,apple/swift,556,2021Q1,556 apple/swift 2021Q1,switch the subject of dependency references to a declcontext,neutral,2.0
1368,16b4ad5200598b452bf3a29369eb9adbdcaaabaa,Giorgos Keramidas <keramida@FreeBSD.org>,Fri Mar 8 00:36:36 2002 +0000,freebsd/freebsd-src,1207,2002Q1,1207 freebsd/freebsd-src 2002Q1,merge a duplicate description of the l option into the first one. pr mfc after week,neutral,3.0
1369,5597f0ccf2e5f57b59dcc79a398705a5d8ed2bf6,Robert Drehmel <robert@FreeBSD.org>,Wed Feb 27 15:06:33 2002 +0000,freebsd/freebsd-src,1207,2002Q1,1207 freebsd/freebsd-src 2002Q1,use the getcredhostname function to fill the hostname into the linux_newuname_args structure. this should fix the case of jailed linux processes not using the jail's hostname. pr reviewed by phk,frustration,2.0
1370,3aadede9250ce40b0ef1eedb03837537ab259646,Michael Gottesman <mgottesman@apple.com>,Fri Jul 28 16:57:35 2017 -0700,apple/swift,556,2017Q3,556 apple/swift 2017Q3,"make sure that apply partial_apply apply' bails if we have an argument with a dependent type. what is going on here is that currently this optimization if itneeds to perform lfietime extension always creates an alloc_stack at the of a function. if the object whose lifetime is being extended has a dependent type, then the alloc_stack will be created before the dependent type exists resulting in the compiler crashing. rdar",neutral,3.0
1371,c33d8667ae817df3f6f3040cb4a73606126ccb44,swift-ci <swift-ci@users.noreply.github.com>,Tue Jul 11 12:49:08 2017 -0700,apple/swift,556,2017Q3,556 apple/swift 2017Q3,merge remotetracking branch '' into masternext,neutral,1.0
1372,943ad6c048fe8352b5c0c1c7744fb4523b1fbe53,Peter Hawkins <phawkins@google.com>,Fri Sep 29 10:18:16 2017 -0700,tensorflow/tensorflow,496,2017Q3,496 tensorflow/tensorflow 2017Q3,add loop b_sync control trigger nodes to the outer context via addinnerop. piperoriginrevid,neutral,3.0
1373,75d2fd55e8c1a7cd572614ccd3ba924ea036d660,Alexandre Passos <apassos@google.com>,Thu Sep 14 10:28:44 2017 -0700,tensorflow/tensorflow,496,2017Q3,496 tensorflow/tensorflow 2017Q3,remove dependency on autograd from tf. piperoriginrevid,neutral,3.0
1374,792259a1b835e0346aa26d59a03564143883b27f,Joe Pamer <joe@noteven.org>,Thu Apr 21 13:00:31 2016 -0700,apple/swift,556,2016Q2,556 apple/swift 2016Q2,merge pull request from .srtest update test to remove dependency on foundation.,frustration,3.0
1375,d3fe17dd012cb89275a86ebebf3a735dccf5f009,Dmitri Gribenko <gribozavr@gmail.com>,Wed Jun 22 11:37:05 2016 -0700,apple/swift,556,2016Q2,556 apple/swift 2016Q2,"merge pull request from swifttypebasegetmembersubstitutions add case , triggered in swifttypebasegetmembersubstitutions",frustration,3.0
1376,6b2d01a1386d6a4d96d6b14913f82cf209ad8a7c,Sandeep Somavarapu <sasomava@microsoft.com>,Thu May 3 11:26:30 2018 +0200,microsoft/vscode,303,2018Q2,303 microsoft/vscode 2018Q2,move context menu action to composite bar,neutral,1.0
1377,b79dc1ed1a4512fe8413212f515621bfc1dc07db,Daniel Imms <daimms@microsoft.com>,Sat Jun 16 19:05:53 2018 +0200,microsoft/vscode,303,2018Q2,303 microsoft/vscode 2018Q2,more event simplification,satisfaction,3.0
1378,802ba9ea5b432d36444d8da8646bd2a1624b9dfa,Sebastian Dröge <sebastian@centricular.com>,Tue Jan 2 14:55:25 2018 +0200,rust-lang/rust,635,2018Q1,635 rust-lang/rust 2018Q1,fix assertions in examples of the exact_chunk documentation,neutral,2.0
1379,edb9d2b20dd907903d0cf70194c4c28c8d40c063,Andrew Cann <shum@canndrew.org>,Thu Mar 1 01:26:51 2018 +0800,rust-lang/rust,635,2018Q1,635 rust-lang/rust 2018Q1,fix ui test errors,caution,5.0
1380,5f6de3d40238aa253b7dc4dd037599ef9e29999f,Jimmy Cuadra <jimmy@jimmycuadra.com>,Mon Sep 18 22:19:00 2017 -0700,rust-lang/rust,635,2017Q3,635 rust-lang/rust 2017Q3,derive additional traits for infallible.,caution,4.0
1381,fe57fdd15e6046720463491359d32c5833ffad9c,Benoît CORTIER <benoit.cortier@fried-world.eu>,Sat Jul 1 12:02:00 2017 +0200,rust-lang/rust,635,2017Q3,635 rust-lang/rust 2017Q3,improve needless_borrowed_ref and update its stderr.,neutral,2.0
1382,ee2d4a1c9b7b3ae48c06a5f32e259bba2bdf3058,Benjamin Pasero <benjpas@microsoft.com>,Sat Oct 13 18:09:34 2018 +0200,microsoft/vscode,303,2018Q4,303 microsoft/vscode 2018Q4,sqlite trim trailing whitespace,neutral,2.0
1383,a649ade2b752edf2a18170ac46a24fbc77112648,karan verma <karan.verma@zoomcar.com>,Wed Nov 21 20:08:51 2018 +0530,microsoft/vscode,303,2018Q4,303 microsoft/vscode 2018Q4,fix returning undefined to ensure the default value is applied,neutral,3.0
1384,8fa332cce3cdf3e510c18ffe9682b920422bbd28,Davanum Srinivas <davanum@gmail.com>,Thu Feb 14 09:01:14 2019 -0500,kubernetes/kubernetes,464,2019Q1,464 kubernetes/kubernetes 2019Q1,ensure prometheus metrics are not registered twice,frustration,6.0
1385,30397a3d230254cb989639c8919eb41946bfb3e0,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Fri Feb 8 06:53:52 2019 -0800,kubernetes/kubernetes,464,2019Q1,464 kubernetes/kubernetes 2019Q1,merge pull request from api fix shellcheck in csiapi,neutral,1.0
1386,2041034c3d1e7b2ebba904f43c9158508ad9d2bf,Pawel Jakub Dawidek <pjd@FreeBSD.org>,Fri Apr 30 16:18:01 2004 +0000,freebsd/freebsd-src,1207,2004Q2,1207 freebsd/freebsd-src 2004Q2,geom gate network client and control utility.,neutral,2.0
1387,f3d319a76cd1a198cd2cde61da0633ad911c6df8,Maxime Henrion <mux@FreeBSD.org>,Mon Jun 28 11:32:58 2004 +0000,freebsd/freebsd-src,1207,2004Q2,1207 freebsd/freebsd-src 2004Q2,the location of the boemler's pci database has moved. update comments to reflect reality.,neutral,3.0
1388,0a2d531b94f4c49ecc0b190b1feb438e27c3e882,Niko Matsakis <niko@alum.mit.edu>,Wed Dec 31 14:42:06 2014 -0500,rust-lang/rust,635,2014Q4,635 rust-lang/rust 2014Q4,teach trans to drain fulfillment context. japaric encountered problems due to this but we were not able to isolate a smaller test case.,neutral,2.0
1389,2274996a1d1092d513ac5df74524b30cb8928961,bors <bors@rust-lang.org>,Sun Nov 23 00:36:43 2014 +0000,rust-lang/rust,635,2014Q4,635 rust-lang/rust 2014Q4,"auto merge of tbu,",neutral,1.0
1390,519e9d1b7b026225c7896506a95e16c1216e69f3,Anago GCB <nobody@k8s.io>,Tue Jun 26 16:39:18 2018 +0000,kubernetes/kubernetes,464,2018Q2,464 kubernetes/kubernetes 2018Q2,update changelogmd for rc,neutral,1.0
1391,fd6b01f4bf2c6506e5435a24f632bda93624da6e,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Thu Apr 26 18:35:49 2018 -0700,kubernetes/kubernetes,464,2018Q2,464 kubernetes/kubernetes 2018Q2,"merge pull request from automatic merge from submitqueue. if you want to cherrypick this change to another branch, please follow the instructions here. events on pvcs in integration volume binding test what this pr does why we need it events on pvcs in integration volume binding test which issues this pr fixes optional, in fixes , fixes , format, will close the issues when pr gets merged fixes special notes for your reviewer release note releasenote none",frustration,3.0
1392,ff8716f4cf6180771615865428fe45f529add46b,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Wed Sep 25 13:52:48 2019 -0700,kubernetes/kubernetes,464,2019Q3,464 kubernetes/kubernetes 2019Q3,merge pull request from .owners kubeadm update owners for .,frustration,2.0
1393,848293ba29189dc43a437f26423ae5f09e78a667,Yuqi Wang <yqwang@microsoft.com>,Thu Jul 4 23:02:18 2019 +0800,kubernetes/kubernetes,464,2019Q3,464 kubernetes/kubernetes 2019Q3,extender bind should respect isinterested,frustration,4.0
1394,f37b9d742c697bdf20203b963fe99473d11be163,Joao Moreno <joao.moreno@microsoft.com>,Wed Nov 20 16:06:55 2019 +0100,microsoft/vscode,303,2019Q4,303 microsoft/vscode 2019Q4,git isolate ipc env,neutral,3.0
1395,b2cb8babc5885f0e76024d1c99e642c8613d9a7c,Daniel Imms <daimms@microsoft.com>,Fri Oct 25 11:17:57 2019 -0700,microsoft/vscode,303,2019Q4,303 microsoft/vscode 2019Q4,fix hidden sash in terminal with right panel and splits fixes,frustration,5.0
1396,f4fe0dcb874689001c9d6332e9be1e993663f4e6,Warner Losh <imp@FreeBSD.org>,Mon Jun 9 06:19:15 2003 +0000,freebsd/freebsd-src,1207,2003Q2,1207 freebsd/freebsd-src 2003Q2,include string.h for memcmp declearation,neutral,2.0
1397,2c6c0947144175a777f310284d9e02188eb16d40,Maxime Henrion <mux@FreeBSD.org>,Mon Apr 7 14:53:30 2003 +0000,freebsd/freebsd-src,1207,2003Q2,1207 freebsd/freebsd-src 2003Q2,"remove an erroneous . the byte_count field in the struct fxp_cb_config is a bit field, not a bit integer as in struct fxp_cb_tx.",satisfaction,2.0
1398,98b870fa7b5b5c3402bdd05ed56b2daf08996cd2,Andrey A. Chernov <ache@FreeBSD.org>,Tue Dec 25 08:43:35 2001 +0000,freebsd/freebsd-src,1207,2001Q4,1207 freebsd/freebsd-src 2001Q4,add except the handling of errors into equivalent to paragraph. pointed by bde inspired by posix,frustration,3.0
1399,3494d2652729ac6c191a66c56e1eddc0c5050fd7,Brian S. Dean <bsd@FreeBSD.org>,Fri Nov 30 00:30:28 2001 +0000,freebsd/freebsd-src,1207,2001Q4,1207 freebsd/freebsd-src 2001Q4,"killall operates on all processes owned by the real uid, not the effective uid. mfc after days",neutral,4.0
1400,753d582f62a99b51381ae4cc6523b5b62392ae24,Eduard-Mihai Burtescu <edy.burt@gmail.com>,Sat Oct 28 16:52:41 2017 +0300,rust-lang/rust,635,2017Q4,635 rust-lang/rust 2017Q4,rustc rename cachedlayout to layoutdetails.,neutral,2.0
1401,6fc9fe2eba79958672a859497f75a689fa3e87f6,topecongiro <seuchida@gmail.com>,Thu Nov 2 07:18:34 2017 +0900,rust-lang/rust,635,2017Q4,635 rust-lang/rust 2017Q4,fix a typo,satisfaction,4.0
1402,00c48d3779fb4c372d2dfe7a8654c6cd1e065511,bors <bors@rust-lang.org>,Sat Apr 25 21:44:50 2015 +0000,rust-lang/rust,635,2015Q2,635 rust-lang/rust 2015Q2,"auto merge of , closes it breaks code such as , so this is a , you have to add missing comma after the last lifetime arguement now.",neutral,3.0
1403,650566ef2a10a0bf1538667ad08bde4ec1a8f227,bors <bors@rust-lang.org>,Sat Jun 27 07:32:56 2015 +0000,rust-lang/rust,635,2015Q2,635 rust-lang/rust 2015Q2,"auto merge of , next step towards split type contexts, after . cc rust jroesch",satisfaction,4.0
1404,346c9818d5b6ea6a7e750cebad845d8c55df94a2,Hellmuth Michaelis <hm@FreeBSD.org>,Sat Jul 21 11:30:38 2001 +0000,freebsd/freebsd-src,1207,2001Q3,1207 freebsd/freebsd-src 2001Q3,update releasenotes for isdnd keyword maxconnecttime,neutral,3.0
1405,1dfa423639a29f1cb7d2dd6102208364bfd106be,Andrey A. Chernov <ache@FreeBSD.org>,Fri Aug 31 13:14:49 2001 +0000,freebsd/freebsd-src,1207,2001Q3,1207 freebsd/freebsd-src 2001Q3,"initialize _offset to in fopen, it helps to optimize",satisfaction,2.0
1406,d6c4b36840c3d99708d51d288f84d3791937b25e,marco <marco@openbsd.org>,Fri Apr 7 20:27:51 2006 +0000,openbsd/src,932,2006Q2,932 openbsd/src 2006Q2,replace bus_space functions with generic ones that do barriers.,frustration,3.0
1407,9b03b4d2692b18909cc6817c163f35f47399ba9d,brad <brad@openbsd.org>,Sat May 13 19:04:30 2006 +0000,openbsd/src,932,2006Q2,932 openbsd/src 2006Q2,add ifq_set_ready in wanpipe_generic_register to notify the stack that this driver is altq ready. ok canacar thanks to peter hessler for noticing the issue and testing.,frustration,5.0
1408,9c0d2b246589d7329d78e93afc04d270278e6ada,Nathan Kleyn <nathan@nathankleyn.com>,Wed Aug 12 18:07:56 2015 +0100,rust-lang/rust,635,2015Q3,635 rust-lang/rust 2015Q3,"add detailed diagnostics for . this adds detailed diagnostics for , 'partial reinitialization of uninitialized structure'. this is part of rust.",neutral,3.0
1409,bf9254a75e06f61ecd837e2f90ed0afc22ffdede,Andrea Canciani <ranma42@gmail.com>,Wed Sep 16 15:25:51 2015 +0200,rust-lang/rust,635,2015Q3,635 rust-lang/rust 2015Q3,"reuse cmp in totally ordered types instead of manually defining it, partial_cmp can simply wrap the result of cmp for totally ordered types.",neutral,4.0
1410,9531b8c0b4c9d24f67e186ec0cc9d1e62ff6b1c6,Warner Losh <imp@FreeBSD.org>,Fri Jan 8 23:02:17 2010 +0000,freebsd/freebsd-src,1207,2010Q1,1207 freebsd/freebsd-src 2010Q1,"backmerge by hand gonzo mon, jul lines get rid of ugly target_cpu_default default. is mask_dsp and was set there due to my ignroance.",neutral,4.0
1411,62f500d0c2b29c297a3da2751feb23e20724e630,Bjoern A. Zeeb <bz@FreeBSD.org>,Sat Mar 27 17:50:02 2010 +0000,freebsd/freebsd-src,1207,2010Q1,1207 freebsd/freebsd-src 2010Q1,"mfc destroy tcp uma zones empty or not upon network stack teardown to not leak them, otherwise making unhappy with every stoped vnet. we will still leak pages especially for zones marked nofree. reshuffle cleanup order in tcp_destroy to get rid of what we can easily free first. reviewed by rwatson",satisfaction,3.0
1412,afc2dcd0ca65a4960e65374b2c836f012c7d508c,Mark Rousskov <mark.simulacrum@gmail.com>,Tue Dec 20 10:46:44 2016 -0700,rust-lang/rust,635,2016Q4,635 rust-lang/rust 2016Q4,"make drop glue for unsized value pass two arguments instead of data, meta",frustration,3.0
1413,08741494dbe847c6449ba16940310f22ca2264f6,Alex Crichton <alex@alexcrichton.com>,Tue Dec 20 11:16:35 2016 -0800,rust-lang/rust,635,2016Q4,635 rust-lang/rust 2016Q4,"rollup merge of redox, add prefix to config.toml this allows rustbuild to be used to install to a prefix. toml prefix install for example, the following config.toml will cause x.py dist install to install to install",caution,4.0
1414,96e426f43d27a6ffee029700fa433c292c9dc45a,Jordan K. Hubbard <jkh@FreeBSD.org>,Sun May 13 20:08:54 2001 +0000,freebsd/freebsd-src,1207,2001Q2,1207 freebsd/freebsd-src 2001Q2,"add u_long sector_size to struct disk documented in libdisk. make open_disk sense the sector size by trying , and in this order. this makes the kernel note that dscheck bio_bcount is not on a sector boundary ssize dscheck bio_bcount is not on a sector boundary ssize if is the sector size. if this worries anyone the message is from subr_diskslice.c and shutups are to be placed there. have read_block and write_block use an additional parameter, the sector size. replace all barfout calls with return null, , __line__, etc. note that this does not emit diagnostics. more often than not, you don't want library functions to scribble on stderr it may not even be available. the right thing is to propagate the error condition to upper management. the app should take care of errors. use sector_size instead of in various places. i've left many places untouched, especially those writing mbrs. i simply added another arg hardcoded as . this is because i would not know what i'm doing i felt this approach would be reasonably backward compatible and not introduce any new bugs in critical software. famous last words. messing with mbrs might soon put me in the same screwup meister category as, uh, never mind. bump the max no of disks from to due to pr . pr submitted by jens schweikhardt",neutral,1.0
1415,e0e5247337fe9d252caa73834cfe86aaa62047b2,Warner Losh <imp@FreeBSD.org>,Fri May 25 19:24:58 2001 +0000,freebsd/freebsd-src,1207,2001Q2,1207 freebsd/freebsd-src 2001Q2,fix a minor formatting nit,neutral,2.0
1416,6e9774f4bb70e2508113a91656d4938935ff2d09,Daniel Firth <locallycompact@gmail.com>,Sun May 22 20:47:59 2016 +0100,rust-lang/rust,635,2016Q2,635 rust-lang/rust 2016Q2,fix misleading intentation errors on gcc .,frustration,6.0
1417,52b2db1cca591a14b9790ce3d11fba39696ae4a7,Niko Matsakis <niko@alum.mit.edu>,Thu Apr 21 05:15:53 2016 -0400,rust-lang/rust,635,2016Q2,635 rust-lang/rust 2016Q2,"warn if leakcheck relies on lbrs that will change when we do a hr subtype check, we replace all latebound regions lbr in the subtype with fresh variables, and skolemize the latebound regions in the supertype. if those skolemized regions from the supertype wind up being superregions directly or indirectly of either another skolemized region or, some region that preexists the hr subtype check e.g a region variable that is not one of those created to represent bound regions in the subtype then the subtype check fails. what will change when we fix is that some of the lbr in the subtype may become earlybound. in that case, they would no longer be in the permitted set of variables that can be related to a skolemized type. so the foundation for this warning is to collect variables that we found to be related to a skolemized type. for each of them, we have a boundregion which carries a flag. we check whether any of those flags indicate that this variable was created from a lifetime that will change from late to earlybound. if so, we issue a warning indicating that the results of compilation may change. this is imperfect, since there are other kinds of code that will not compile once is fixed. however, it fixes the errors observed in practice on crater runs.",caution,3.0
1418,4369aee65742207f7eece100018fbc4ab6b42b2c,Steve Klabnik <steve@steveklabnik.com>,Thu Mar 2 20:15:41 2017 -0500,rust-lang/rust,635,2017Q1,635 rust-lang/rust 2017Q1,import nomicon submodule,neutral,4.0
1419,6d22aa42e0ee1c77f140c9b07c764ad06ccc6a2f,Andre Bogus <bogusandre@gmail.com>,Sun Jan 15 06:20:54 2017 +0100,rust-lang/rust,635,2017Q1,635 rust-lang/rust 2017Q1,merge pull request from use closure body span for needless_return lint fixes,neutral,4.0
1420,b71bca0f842aaf6e3898187c361b2e498c1b572d,Marcel Moolenaar <marcel@FreeBSD.org>,Thu Jan 27 06:01:44 2005 +0000,freebsd/freebsd-src,1207,2005Q1,1207 freebsd/freebsd-src 2005Q1,"fix handling of post increment either the first or second operand is the register with the memory address, and it's that register's value we need to increment or decrement. mfc after days",frustration,3.0
1421,bd40429e3d098b8d11b21c4e3aa4126ac0e12816,Sam Leffler <sam@FreeBSD.org>,Wed Mar 16 20:42:00 2005 +0000,freebsd/freebsd-src,1207,2005Q1,1207 freebsd/freebsd-src 2005Q1,correct comparison for null ptr noticed by coverity prevent analysis tool,caution,2.0
1422,eb74223b9f3e3b265b05c8d188e94f236a4e5090,Mike Barcroft <mike@FreeBSD.org>,Sun Oct 6 21:54:08 2002 +0000,freebsd/freebsd-src,1207,2002Q4,1207 freebsd/freebsd-src 2002Q4,o use relatively new visibility primitives from . o add typedef for pid_t. o add comment about missing restrict typequalifier. o remove unneeded includes and .,neutral,2.0
1423,9fa3506ecdd70a18ee49ede6d14bff0a28716ab4,Robert Watson <rwatson@FreeBSD.org>,Fri Nov 8 18:04:00 2002 +0000,freebsd/freebsd-src,1207,2002Q4,1207 freebsd/freebsd-src 2002Q4,"add an explicit execlabel argument to execrelated mac policy entry points, rather than relying on policies to grub around in the image activator instance structure. approved by re obtained from trustedbsd project sponsored by darpa, network associates laboratories",frustration,4.0
1424,205c49a94c36172d8c7fc32a4e88bdfd3d4397f6,Rob Lourens <roblourens@gmail.com>,Tue Jan 16 11:04:40 2018 -0800,microsoft/vscode,303,2018Q1,303 microsoft/vscode 2018Q1,fix settings search telemetry metadata for settings edited from editable side of settings editor,satisfaction,3.0
1425,af160c40ccc98eb056707934cb857ef4d7cd2d9d,Alex Dima <alexdima@microsoft.com>,Tue Jan 16 11:38:25 2018 +0100,microsoft/vscode,303,2018Q1,303 microsoft/vscode 2018Q1,validate offset before passing it down,neutral,4.0
1426,7fc7425df3494f2df9c3a3ecc96e7b7373f452e7,Søren Schmidt <sos@FreeBSD.org>,Sun Jan 19 20:18:07 2003 +0000,freebsd/freebsd-src,1207,2003Q1,1207 freebsd/freebsd-src 2003Q1,"small change to the previous commit, zero out the flag in ata_command instead of in dmadone.",neutral,3.0
1427,ac7b094dcaf04d0876dc2150f394c7ccca77c31c,Yoshihiro Takahashi <nyan@FreeBSD.org>,Sat Feb 8 07:05:07 2003 +0000,freebsd/freebsd-src,1207,2003Q1,1207 freebsd/freebsd-src 2003Q1,include to fix building on alpha.,neutral,3.0
1428,2959c8517bb86283419ec59f79f07fe9d3824bbf,Johannes Rieken <johannes.rieken@gmail.com>,Wed Aug 15 13:22:15 2018 +0200,microsoft/vscode,303,2018Q3,303 microsoft/vscode 2018Q3,fix typo in color name,neutral,1.0
1429,9c3d240c9b5ea4f320221b2cab6c6b4292837541,Johannes Rieken <johannes.rieken@gmail.com>,Thu Sep 6 18:41:21 2018 +0200,microsoft/vscode,303,2018Q3,303 microsoft/vscode 2018Q3,build stats send one object with size and count properties,satisfaction,2.0
1430,c38f1ac2bd8f0664831a476243d3d4534a566668,Peter Hawkins <phawkins@google.com>,Fri May 5 06:00:35 2017 -0800,tensorflow/tensorflow,496,2017Q2,496 tensorflow/tensorflow 2017Q2,update llvm revision to svn revision . change,neutral,3.0
1431,7536c7edde208b028519bfb70b52ad7cc1da1c1a,A. Unique TensorFlower <gardener@tensorflow.org>,Tue Apr 25 15:07:52 2017 -0800,tensorflow/tensorflow,496,2017Q2,496 tensorflow/tensorflow 2017Q2,use pylint for sanity for now. change,frustration,2.0
1432,5928be1d9bcd96ce4dd7b328fe527683a4e1621f,philipp <philipp>,Mon Aug 29 19:43:18 2016 +0200,rust-lang/rust,635,2016Q3,635 rust-lang/rust 2016Q3,changed issue number to,satisfaction,1.0
1433,1006f794cdb45e28dfdd4a548f8a891ec4023598,Guillaume Gomez <guillaume1.gomez@gmail.com>,Thu Jul 21 11:27:01 2016 +0200,rust-lang/rust,635,2016Q3,635 rust-lang/rust 2016Q3,"rollup merge of asslice, add doc examples for vecas_slice,as_mut_slice. none",neutral,3.0
1434,2ecfc099dfb6df7b60207893ede11c93c0532abc,jmc <jmc@openbsd.org>,Fri Dec 16 16:49:46 2005 +0000,openbsd/src,932,2005Q4,932 openbsd/src 2005Q4,move the section on updating bootblocks into the man body of the page,neutral,4.0
1435,62e813f1ea8eadffb48f04d6fef0a5b8a968d436,jaredy <jaredy@openbsd.org>,Wed Oct 19 18:29:50 2005 +0000,openbsd/src,932,2005Q4,932 openbsd/src 2005Q4,add missing header for history section ok jmc awhile ago,satisfaction,4.0
1436,d4ad7638933d9776b43764b0f53be923f475b289,claudio <claudio@openbsd.org>,Tue May 29 01:43:44 2007 +0000,openbsd/src,932,2007Q2,932 openbsd/src 2007Q2,kill some if define__otherbsd__. ok dlg,frustration,5.0
1437,f2815d4eea26a39668de473297c299220b98e0a2,steven <steven@openbsd.org>,Wed Jun 20 15:41:36 2007 +0000,openbsd/src,932,2007Q2,932 openbsd/src 2007Q2,"mention https protocol, for which support was added recently. ok espie",neutral,2.0
1438,bb9be80edf2bb0f63740a26cdc7857ba9407f993,Adrian Prantl <aprantl@apple.com>,Tue May 13 22:48:31 2014 +0000,apple/swift,556,2014Q2,556 apple/swift 2014Q2,debug info factor out createpointersizedstruct for leaf types that have mangled names. swift svn,satisfaction,4.0
1439,76a27e16c5160300f778672cf53d8164d17d579a,Jordan Rose <jordan_rose@apple.com>,Tue May 6 22:50:34 2014 +0000,apple/swift,556,2014Q2,556 apple/swift 2014Q2,update a stray diagnostic that still included unchecked. swift svn,neutral,2.0
1440,4885b976644691a4f4549cb0663fdc9b133b9be7,Chris Lattner <sabre@nondot.org>,Sun Apr 20 18:47:55 2008 +0000,llvm/llvm-project,1805,2008Q2,1805 llvm/llvm-project 2008Q2,"for exponentrelated errors, emit the diagnostic on the 'e' or 'p'. llvmsvn",frustration,5.0
1441,38806c3e9c3d4286e9550cedd979684827fafee4,Chris Lattner <sabre@nondot.org>,Mon Apr 21 00:19:16 2008 +0000,llvm/llvm-project,1805,2008Q2,1805 llvm/llvm-project 2008Q2,fit in cols llvmsvn,frustration,5.0
1442,45165ed1acf8ec7dd05b23a671d247bb682e7a8b,Anton Korobeynikov <asl@math.spbu.ru>,Mon Sep 8 21:13:56 2008 +0000,llvm/llvm-project,1805,2008Q3,1805 llvm/llvm-project 2008Q3,reapply unbreak and fix indentation llvmsvn,neutral,4.0
1443,e972aa471dbdf5d214d20e345cbc0ccc6b3ef799,Douglas Gregor <dgregor@apple.com>,Thu Sep 11 02:46:36 2008 +0000,llvm/llvm-project,1805,2008Q3,1805 llvm/llvm-project 2008Q3,add support for expectednote to clang's verify option llvmsvn,frustration,6.0
1444,4187a96543a811e87881c98bfac281195c552b67,Alexander Motin <mav@FreeBSD.org>,Sat Nov 21 21:01:00 2015 +0000,freebsd/freebsd-src,1207,2015Q4,1207 freebsd/freebsd-src 2015Q4,"fix target mode with fabric for pre chips. for those chips we are not receiving login events, adding initiators based on atio requests. but there is no port id in that structure, so in fabric mode we have to explicitly fetch it from firmware to be able to do normal scan after that.",satisfaction,3.0
1445,8e8319a68d0b966895bf4cb6bc2fc9eb0f234dd2,Bryan Drewery <bdrewery@FreeBSD.org>,Wed Nov 25 19:10:59 2015 +0000,freebsd/freebsd-src,1207,2015Q4,1207 freebsd/freebsd-src 2015Q4,"stop building vers.c in include and only build the needed osreldate.h. because of how osreldate.h was being built with newvers.sh, which always spat out a vers.c dependent on svn or git, the meta mode build was considering osreldate.h to depend on the current git or svn index. this would lead to entire tree rebuilds when modifying git's index. there's no reason to be generating vers.c here so just skip it. while here, in mkosreldate.sh rename param_h to proper paramfile which newvers.sh already has a default for and remove unneeded export. sponsored by emc isilon storage division",neutral,2.0
1446,784630d9b2e7ccf0daeb3b28208a06ae67ae6b15,David Zarzycki <dave@znu.io>,Wed Mar 19 21:24:42 2014 +0000,apple/swift,556,2014Q1,556 apple/swift 2014Q1,runtime fix assembly cfi data this should fix swift svn,neutral,4.0
1447,b30ab409df352cdf8546402eef2920d330f3e921,John McCall <rjmccall@apple.com>,Mon Jan 6 20:05:12 2014 +0000,apple/swift,556,2014Q1,556 apple/swift 2014Q1,prettify crashes in the demangler. revert add a hackaround for rdar. i don't unerstand the code enough to tell if this is the right fix. this reverts commit bddeccae. swift svn,neutral,4.0
1448,f87578d9fbf37f76fc1ccd3eb92ef24f8b2a0b31,Daniel Micay <danielmicay@gmail.com>,Sat Sep 7 14:52:31 2013 -0400,rust-lang/rust,635,2013Q3,635 rust-lang/rust 2013Q3,fix repr of with quotes closes,frustration,5.0
1449,66c2965b046029bec04b3f2c73e6619c15784145,Daniel Micay <danielmicay@gmail.com>,Sun Sep 15 00:39:34 2013 -0400,rust-lang/rust,635,2013Q3,635 rust-lang/rust 2013Q3,iter fix rangeinclusive's doubleendediterator,neutral,3.0
1450,5286d9c4ab9c9a1607acee940031d8278fbd465e,Doug Gregor <dgregor@apple.com>,Wed Nov 18 07:19:10 2020 -0800,apple/swift,556,2020Q4,556 apple/swift 2020Q4,merge pull request from importmirroredprotocols make sure we mirror protocol decls for all names.,satisfaction,3.0
1451,660f74b68a1585dee31ddca63964e98a151197e4,Nate Chandler <nate_chandler@apple.com>,Wed Oct 28 16:46:47 2020 -0700,apple/swift,556,2020Q4,556 apple/swift 2020Q4,add asyncfunctionpointer to vtable.,satisfaction,2.0
1452,ead4296edbd4b6c72c4e0b0cb8d89a0bd82a2477,Ruslan Ermilov <ru@FreeBSD.org>,Fri Jul 4 17:35:26 2003 +0000,freebsd/freebsd-src,1207,2003Q3,1207 freebsd/freebsd-src 2003Q3,"don't hardcore path into binmake the latter should only be comprised of the path to a make binary possibly the one built by the make target in this makefile, and a path to a fresh . the idea is to allow make release pick up the right make binary, if one exists. this fixes release. i broke with the last commit here the second path here was overriding the right one from wmakeenv while rebuilding the buildtools for crunched binaries.",frustration,1.0
1453,6935adfc2f67f6328f84cb513651c28340a5235e,Martin Blapp <mbr@FreeBSD.org>,Tue Sep 2 15:27:38 2003 +0000,freebsd/freebsd-src,1207,2003Q3,1207 freebsd/freebsd-src 2003Q3,"this commit was generated by to compensate for changes in , which included commits to rcs files with nontrunk default branches.",neutral,2.0
1454,52517c0a5700e0732484c61fc342d0107bb35e61,Tony Finch <fanf@FreeBSD.org>,Fri Jan 22 16:43:49 2016 +0000,freebsd/freebsd-src,1207,2016Q1,1207 freebsd/freebsd-src 2016Q1,a few whois usability improvements look up as numbers at arin. handle more referral formats. suppress spammy nameserver objects when querying the .com and .net whois servers by explicitly querying for domain names by default.,caution,5.0
1455,ecc7ce0f3ebaf41be0aaae5b6b19f31c14bf10de,Hans Petter Selasky <hselasky@FreeBSD.org>,Tue Feb 23 14:58:20 2016 +0000,freebsd/freebsd-src,1207,2016Q1,1207 freebsd/freebsd-src 2016Q1,be more verbose when truncating number of hid items. suggested by larry rosenman mfc after week,neutral,3.0
1456,80ae565585bf814c9c4e0124132d30d31d5cd06c,Matt Jacob <mjacob@FreeBSD.org>,Sun Nov 21 03:12:58 1999 +0000,freebsd/freebsd-src,1207,1999Q4,1207 freebsd/freebsd-src 1999Q4,fix some includes for when we eventually get target mode working again. role the core version minor number. change the arguments to the dma setup function to use a u_int_t for the output request loop pointer truly amazing that this hasn't blown up in anyones face so far. do some shuffling around of some items.,neutral,2.0
1457,687d9f5709ed62064f159cf05f5943931ec3ef8e,Brian Somers <brian@FreeBSD.org>,Mon Dec 20 20:30:47 1999 +0000,freebsd/freebsd-src,1207,1999Q4,1207 freebsd/freebsd-src 1999Q4,use getpwuidpw_dir instead of home when expanding ''.,caution,7.0
1458,e9bd8d7b4cd66e27ca98b7bae5024860be420918,jsing <jsing@openbsd.org>,Tue Jul 8 09:46:44 2014 +0000,openbsd/src,932,2014Q3,932 openbsd/src 2014Q3,"avoid locking in bio_get_port by using getservbyname_r instead of getservbyname. while here, provide a return path. ok deraadt",neutral,3.0
1459,8743827181180a89a2f6bfa72a48fa1bab4e136d,reyk <reyk@openbsd.org>,Tue Aug 5 16:34:03 2014 +0000,openbsd/src,932,2014Q3,932 openbsd/src 2014Q3,"fix an example, natto requires to specify the out direction in pf rules. from vigdis via misc can go in deraadt",neutral,4.0
1460,12a39a13db6fadccc0ff1895a6899ea0242b8a56,Sam Leffler <sam@FreeBSD.org>,Wed Jun 24 18:24:20 2009 +0000,freebsd/freebsd-src,1207,2009Q2,1207 freebsd/freebsd-src 2009Q2,read back the written value and display,satisfaction,4.0
1461,22da50cfc88081e487465042b96f969349ecb6c5,Brian Somers <brian@FreeBSD.org>,Fri Jun 5 09:08:53 2009 +0000,freebsd/freebsd-src,1207,2009Q2,1207 freebsd/freebsd-src 2009Q2,"change the behaviour of f slightly it now persists forever in trying to open files rather than giving up when it encounters an error. enoent errors are not reported. as a result, files that are moved away then recreated are not at risk of being 'lost' to tail. files that are recreated and temporarily have unreadable permissions will be shown when they are fixed. this behaviour is consistent with the gnu version of tail but without the verbiage that goes with the gnu version. this change also fixes error messages accompanying f and f. they no longer report problems with null! mfc after weeks",satisfaction,3.0
1462,ce8e886731471094fbecb870a00fe323a1f92278,Steve Naroff <snaroff@apple.com>,Sat Mar 15 00:55:56 2008 +0000,llvm/llvm-project,1805,2008Q1,1805 llvm/llvm-project 2008Q1,remove objc rewriter dependency on gcc's . llvmsvn,satisfaction,3.0
1463,cf193b83204199e1621b2bf17e4ca322bc54e3e2,Devang Patel <dpatel@apple.com>,Wed Feb 20 19:39:41 2008 +0000,llvm/llvm-project,1805,2008Q1,1805 llvm/llvm-project 2008Q1,getresult does not support nested aggregates. llvmsvn,neutral,5.0
1464,5dc2a47de7cc3e02ef789d903e50187e82b60510,Yoshinobu Inoue <shin@FreeBSD.org>,Wed Feb 23 18:00:33 2000 +0000,freebsd/freebsd-src,1207,2000Q1,1207 freebsd/freebsd-src 2000Q1,"add an scope index embedded link local addr creation support, by route command. this is a workaround for some kernel interface which can't treat sin_scope_id, yet.",neutral,6.0
1465,f560c4e709d6f3b1edb5349d928670577918afb8,Jason Evans <jasone@FreeBSD.org>,Wed Jan 12 09:28:58 2000 +0000,freebsd/freebsd-src,1207,2000Q1,1207 freebsd/freebsd-src 2000Q1,track libc's threetier symbol naming. libc_r must currently implement the _libc_ entry points and add weak aliases. this will all change for the better when libc_r becomes libpthread.,neutral,3.0
1466,c65eeb736e5567427b25fb4d304d72d372cd96d9,Andrey A. Chernov <ache@FreeBSD.org>,Mon Mar 8 18:09:33 2004 +0000,freebsd/freebsd-src,1207,2004Q1,1207 freebsd/freebsd-src 2004Q1,remove a.out at the end of 'make test',satisfaction,2.0
1467,d40d033ac01faffc602ac83b9837ada8d4d625e4,Robert Watson <rwatson@FreeBSD.org>,Mon Mar 22 16:37:32 2004 +0000,freebsd/freebsd-src,1207,2004Q1,1207 freebsd/freebsd-src 2004Q1,"commit a message to updating indicating that during network stack locking merges, debug.mpsafenet will no longer be safe to use, and that it should be turned off which is the default. i will commit a followup message to updating and post to freebsdcurrent when it's safe to turn it on, with a description of under what circumstances it is safe to use.",neutral,2.0
1468,59051c789e0eecce057e6dfe2c7bdaa0f2a252a0,todd <todd@openbsd.org>,Wed Sep 19 02:18:50 2001 +0000,openbsd/src,932,2001Q3,932 openbsd/src 2001Q3,"from stone age to the stars in one afternoon, not bad! go, jason",neutral,1.0
1469,916002376d05fe16b367aa7f2e657b4793498542,markus <markus@openbsd.org>,Wed Aug 1 23:33:09 2001 +0000,openbsd/src,932,2001Q3,932 openbsd/src 2001Q3,allow uploading rsa keys for nondefault over passphrase like sectok.,neutral,1.0
1470,fc326445becd7959b5d78a3de468015741a8c5b3,rebornix <penn.lv@gmail.com>,Wed Jun 14 13:20:38 2017 -0700,microsoft/vscode,303,2017Q2,303 microsoft/vscode 2017Q2,"autoindent on paste, remove all indent whitespaces.",frustration,5.0
1471,d6e800520fef59901f091cf671836f5ec0534ef3,Martin Aeschlimann <martinae@microsoft.com>,Fri May 12 17:42:45 2017 +0200,microsoft/vscode,303,2017Q2,303 microsoft/vscode 2017Q2,editorscrollbar move off editor.viewinfo.theme,satisfaction,4.0
1472,665f4d14574d4c2901d7cc52cc67eb7eb2a1542e,Benjamin Pasero <benjpas@microsoft.com>,Wed Feb 20 09:44:36 2019 +0100,microsoft/vscode,303,2019Q1,303 microsoft/vscode 2019Q1,editor allow to preserve focus when closing for,satisfaction,3.0
1473,a8d3aea1e995a381aad3f9f2fc0235d9306b7ec7,Martin Aeschlimann <martinae@microsoft.com>,Wed Mar 20 16:55:12 2019 +0100,microsoft/vscode,303,2019Q1,303 microsoft/vscode 2019Q1,statusbarservice collect entries if not yet created,satisfaction,4.0
1474,4bec356e01a89a75da7460bee5a0666b4c7c561d,Kubernetes Submit Queue <k8s-merge-robot@users.noreply.github.com>,Wed Aug 1 06:02:37 2018 -0700,kubernetes/kubernetes,464,2018Q3,464 kubernetes/kubernetes 2018Q3,"merge pull request from check automatic merge from submitqueue. if you want to cherrypick this change to another branch, please follow the instructions here. need expectnoerror check what this pr does why we need it err need expectnoerror check release note releasenote none",caution,6.0
1475,809dc2c763fc6546df3e1b02c38f9d806aaf5260,Kevin W Monroe <kevin.monroe@canonical.com>,Mon Aug 20 05:20:59 2018 +0000,kubernetes/kubernetes,464,2018Q3,464 kubernetes/kubernetes 2018Q3,add uuid bits to to make it a bit easier on operators,caution,5.0
1476,e895e7fce7f5fabf36e2b0358cc7a0cefb631981,Stephen J. Kiernan <stevek@FreeBSD.org>,Mon Feb 13 18:52:26 2017 +0000,freebsd/freebsd-src,1207,2017Q1,1207 freebsd/freebsd-src 2017Q1,fix typo where opening brace was needed. reported by michael butler reviewed by sjg approved by sjg mentor,neutral,3.0
1477,b2ee1181b4555230a015f1b8f27a1e7ec3c2bb6e,Martin Matuska <mm@FreeBSD.org>,Wed Feb 15 20:00:36 2017 +0000,freebsd/freebsd-src,1207,2017Q1,1207 freebsd/freebsd-src 2017Q1,update to git edabbadfcfedcbaededabc vendor changes make schily.acl.ace header more compact acls vendor bugfixes zip reader integer parsing fix ossfuzz spelling fixes issue,neutral,4.0
1478,e3ad1b58f560ba0557d21c1aceb25da3442ba3f6,Alex Crichton <alex@alexcrichton.com>,Mon Apr 17 17:17:11 2017 -0700,rust-lang/rust,635,2017Q2,635 rust-lang/rust 2017Q2,"disable debuginfo when compiling tools currently the cargo binary has jumped from to on the beta channel, which appears to be due to the fact that we're compiling tools with debug information inside them. this additionally means that the rls binary is right now! this wasn't an intentional change, so be sure to disable debuginfo when compiling tools as it's just intended for the standard library and compile for now.",neutral,5.0
1479,1a24a591dd43c53de7e3f16eff9f67469cf7a52b,Hanna Kruppe <hanna.kruppe@gmail.com>,Wed Apr 26 23:22:45 2017 +0200,rust-lang/rust,635,2017Q2,635 rust-lang/rust 2017Q2,"remove rustc_llvm dependency from rustc_metadata move the code for loading metadata from rlibs and dylibs from rustc_metadata into rustc_trans, and introduce a trait to avoid introducing a direct dependency on rustc_trans. this means rustc_metadata is no longer rebuilt when llvm changes.",neutral,3.0
1480,9a9219be3531d12c804f671e3e236a0d05c01d70,A. Unique TensorFlower <gardener@tensorflow.org>,Fri Jul 8 09:06:00 2016 -0800,tensorflow/tensorflow,496,2016Q3,496 tensorflow/tensorflow 2016Q3,update generated python op docs. change,neutral,4.0
1481,4c4006c241d0fdb8305a0fcbe5cc1179dc2bd552,A. Unique TensorFlower <gardener@tensorflow.org>,Mon Sep 12 12:07:08 2016 -0800,tensorflow/tensorflow,496,2016Q3,496 tensorflow/tensorflow 2016Q3,add stacktrace.h change,satisfaction,4.0
1482,cfa5f20f8e2b3e53679db21b85bb1ae7a0421b80,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Fri Feb 28 12:54:38 2020 -0800,kubernetes/kubernetes,464,2020Q1,464 kubernetes/kubernetes 2020Q1,merge pull request from binderreasons volume binder simplify api,neutral,3.0
1483,2f5468f1ae5b91877db914438d1b5ff02e7a70b7,Elijah Oyekunle <eloyekunle@gmail.com>,Fri Feb 28 16:31:06 2020 +0100,kubernetes/kubernetes,464,2020Q1,464 kubernetes/kubernetes 2020Q1,update map keys api doc with validation requirements,satisfaction,4.0
1484,5441635eb0d24bb37b0c85cf2bdba12ccec5cf75,Jayachandran C. <jchandra@FreeBSD.org>,Thu Feb 26 02:22:47 2015 +0000,freebsd/freebsd-src,1207,2015Q1,1207 freebsd/freebsd-src 2015Q1,remove runtime allocation of xlp irqs follow the same static irq to interrupt table entry mapping as the other os supported on xlp.,satisfaction,3.0
1485,39b86a6a6f48aa1365855593fb99578e8d62ac36,Hans Petter Selasky <hselasky@FreeBSD.org>,Wed Feb 25 21:10:03 2015 +0000,freebsd/freebsd-src,1207,2015Q1,1207 freebsd/freebsd-src 2015Q1,update to upstream version . the most notable new feature is support for definition files. obtained from mfc after week,neutral,2.0
1486,602d35f21fbb8c5e4924d65b4042f24fa908dad2,tobiasu <tobiasu@openbsd.org>,Mon Sep 21 00:24:21 2015 +0000,openbsd/src,932,2015Q3,932 openbsd/src 2015Q3,"increase maxtsiz to , required for ok miod",neutral,3.0
1487,091a6000f75d523efb46c0d059ee36a552b56482,bluhm <bluhm@openbsd.org>,Fri Jul 10 22:07:48 2015 +0000,openbsd/src,932,2015Q3,932 openbsd/src 2015Q3,"make kassert in tcp_input less strict, tcpcb may be null. ok deraadt",satisfaction,2.0
1488,125d742fc9cbf6fdf3db48960bd483fc82f69e29,fgsch <fgsch@openbsd.org>,Sat May 25 13:54:03 2002 +0000,openbsd/src,932,2002Q2,932 openbsd/src 2002Q2,fix usage from sam smith .,satisfaction,5.0
1489,846d8895ea6ace09d351d35252e9f8fadee20eed,markus <markus@openbsd.org>,Tue Apr 2 08:44:57 2002 +0000,openbsd/src,932,2002Q2,932 openbsd/src 2002Q2,fix keyid encoding wi_tx_key,satisfaction,4.0
1490,aa4a7878510c6f634d79626de5e6348e943ef613,Johannes Rieken <johannes.rieken@gmail.com>,Thu Oct 15 12:41:03 2020 +0200,microsoft/vscode,303,2020Q4,303 microsoft/vscode 2020Q4,update references viewlet,neutral,4.0
1491,0608e3f5bdafda6cbf48450c5bd1e6db2961eced,Matt Bierner <matb@microsoft.com>,Tue Nov 3 15:04:10 2020 -0800,microsoft/vscode,303,2020Q4,303 microsoft/vscode 2020Q4,pick up ts .rc for insiders,satisfaction,4.0
1492,a3ea6d41b97bc23e762caea2704e5775db1675c6,Dag-Erling Smørgrav <des@FreeBSD.org>,Sun Jan 21 22:23:11 2001 +0000,freebsd/freebsd-src,1207,2001Q1,1207 freebsd/freebsd-src 2001Q1,"first step towards an mpsafe zone allocator have zalloc and zfree always lock the vm_zone. remove zalloci and zfreei, which are now redundant. reviewed by bmilekic, jasone",satisfaction,3.0
1493,711abb6d69038ec4ee03927e0e3e7823393b42f9,Ruslan Ermilov <ru@FreeBSD.org>,Tue Mar 20 09:02:32 2001 +0000,freebsd/freebsd-src,1207,2001Q1,1207 freebsd/freebsd-src 2001Q1,removed the second copy of the manual page!,neutral,3.0
1494,7d25db56036fb99286ddcef67fd2fd051c9e508a,Michael Gottesman <mgottesman@apple.com>,Fri Dec 16 17:03:06 2016 -0800,apple/swift,556,2016Q4,556 apple/swift 2016Q4,implement support for most silnodes in valueownershipkindvisitor. the remaining nodes will be defined in subsequent commits. they are . silargument. . builtininst. rdar,satisfaction,3.0
1495,850ef048958ec7413fea2a7eb3b39748c821a995,practicalswift <practicalswift@users.noreply.github.com>,Thu Dec 8 13:33:51 2016 +0100,apple/swift,556,2016Q4,556 apple/swift 2016Q4,remove neverread bool havefirst.,frustration,6.0
1496,9acdf52877573e6bf8823b447f87239b3d1a57ec,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Tue Dec 3 19:44:57 2019 -0800,kubernetes/kubernetes,464,2019Q4,464 kubernetes/kubernetes 2019Q4,merge pull request from golintproblems fix golint issues in lifecycle,caution,3.0
1497,10883c4c69978b1e435c8e5bb330912f6314b732,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Tue Nov 26 02:09:10 2019 -0800,kubernetes/kubernetes,464,2019Q4,464 kubernetes/kubernetes 2019Q4,merge pull request from migrate kubemark to distroless,neutral,2.0
1498,5167f178ab866f4ccba4edac61260df4150f7560,Justin Hibbits <jhibbits@FreeBSD.org>,Sat Jun 2 20:28:58 2018 +0000,freebsd/freebsd-src,1207,2018Q2,1207 freebsd/freebsd-src 2018Q2,included vsx registers in powerpc core dumps summary included vsx registers in powerpc core dumps both kernel and gcore submitted by luis pires differential revision,neutral,4.0
1499,b7b8a096580633b2a09b659d886887969ea2ee9f,Konstantin Belousov <kib@FreeBSD.org>,Thu Jun 14 19:41:02 2018 +0000,freebsd/freebsd-src,1207,2018Q2,1207 freebsd/freebsd-src 2018Q2,"handle the race between and faults. if fault started before vmspace_fork locked the map, and then during fork, vm_map_copy_entryvm_object_split is executed, it is possible that the fault instantiate the page into the original object when the page was already copied into the new object see vm_map_split for the objects terminology. this can happen if split found a busy page e.g. from the fault and slept dropping the objects lock, which allows the swap pager to instantiate readbehind pages for the fault. then the restart of the scan can see a page in the scanned range, where it was already copied to the upper object. fix it by instantiating the readahead pages before swap_pager_getpages method drops the lock to allocate pbuf. the object scan would see the whole range prefilled with the busy pages and not proceed the range. note that vm_fault rechecks the map generation count after the object unlock, so that it restarts the handling if raced with split, and relookups the right page from the upper object. in collaboration with alc tested by pho sponsored by the freebsd foundation mfc after week",caution,4.0
500,bb6d19846d1cee7cc977ce3aa736ec60d7163d3a,Chris Wilson <chris@chris-wilson.co.uk>,Thu Nov 26 13:31:42 2015 +0000,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"check the timeout passed to i_wait_request we have relied upon the sole caller wait_ioctl validating the timeout argument. however, when waiting for multiple requests i forgot to ensure that the timeout was still positive on the later requests. this is more simply done inside __i_wait_request. fixes regression introduced in commit bbaccededd author chris wilson date mon apr implement interengine readread optimisations the impact of the regression is jiffie for each extra active ring for a wait_ioctl with a timeout i don't think anyone has noticed. wilson cc lionel landwerlin cc tvrtko ursulin cc daniel vetter vetter link nikula",caution,5.0
501,6ebe21c1cf459d9bd501454ba65650c04fdf9288,Andy Shevchenko <andriy.shevchenko@linux.intel.com>,Fri Oct 23 12:16:43 2015 +0300,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,mfd intel_quark_ic_gpio support devices behind bus on intel galileo the gpio expanders are connected to the bus. for those devices the acpi table has specific parameters that refer to an actual host controller. since mfd now copes with that specific configuration we have to provide a necessary information how to distinguish devices in acpi namespace. here the _adr values are provided. jones shevchenko sang,caution,2.0
502,32f033287bdf1420b86fd459cbd19c060053037c,Glen Lee <glen.lee@atmel.com>,Thu Oct 29 12:18:45 2015 +0900,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"staging wilc_wlan_txq_add_to_tail add argument net_device this patch adds new argument dev and use netdev private data member wilc instead of g_linux_wlan, pass the function dev also. lee kroahhartman",satisfaction,1.0
503,405c92f7a5417274419192ad134d6dc71aedaaa4,Hannes Frederic Sowa <hannes@stressinduktion.org>,Tue Oct 27 22:40:42 2015 +0100,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,add defensive check for checksum_partial skbs in ip_fragment checksum_partial skbs should never arrive in ip_fragment. if we get one of those warn about them once and handle them gracefully by recalculating the checksum. fixes commit dcedd allow for partial checksums on nonufo packets seealso commit ebbd ip_fragment should check checksum_partial cc eric dumazet cc vlad yasevich cc benjamin coddington cc tom herbert frederic sowa s. miller,caution,3.0
504,1dccb598df549d892b6450c261da54cdd7af44b4,Arnd Bergmann <arnd@arndb.de>,Mon Nov 16 17:25:48 2015 +0100,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"simplify dma_get_ops including .h from mapping.h causes tons of compiletime warnings, e.g. . warning false redefined . warning true redefined . warning true redefined . warning false redefined however, it looks like the dependency should not even there as i do not see why __generic_dma_ops cares about whether we have an acpi based system or not. the current behavior is to fall back to the global dma_ops when a device has not set its own dma_ops, but only for dt based systems. this seems dangerous, as a random device might have different requirements regarding iommu or coherency, so we should really never have that fallback and just forbid dma when we have not initialized dma for a device. this removes the global dma_ops variable and the specialcasing for acpi, and just returns the dma ops that got set for the device, or the dummy_dma_ops if none were present. the original code has apparently been copied from where we rely on it for isa devices things like the floppy controller, but we should have no such devices on . bergmann marinas",frustration,1.0
505,6575a9c69a211ac1cf454f9c76be54f7a5fae9fe,Geert Uytterhoeven <geert+renesas@glider.be>,Thu Nov 19 19:32:06 2015 +0100,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"drivers sh clk avoid crashes when passing null clocks several clock api functions handle null clocks when the common clock framework is used, while their legacy sh counterparts don't, and would just crash when a null clock is passed. add null checks to clk_get_rate, clk_set_rate, clk_get_parent, and clk_round_rate, to avoid different behavior in drivers shared between legacy and ccfbased platforms. uytterhoeven horman",frustration,2.0
506,8eed76fa4885f1ed9f19f4d3a16dd24cebf09c19,Anjali Singhai Jain <anjali.singhai@intel.com>,Wed Dec 9 15:50:31 2015 -0800,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,cleanup the code with respect to restarting autoneg the restartautoneg work around does not apply to . added a flag to set it only for the right mac and right fw version where the work around should be applied. singhai jain,neutral,3.0
507,f39814f60ad0fa982ac87a97af1fb0bde244c319,Andreas Gruenbacher <agruenba@redhat.com>,Thu Dec 24 11:09:40 2015 -0500,torvalds/linux,4589,2015Q4,4589 torvalds/linux 2015Q4,"invalid security labels of inodes when they go invalid when releases the glock of an inode, it must invalidate all information cached for that inode, including the page cache and acls. use the new security_inode_invalidate_secctx hook to also invalidate security labels in that case. these items will be reread from disk when needed after reacquiring the glock. gruenbacher peterson whitehouse cc moore",satisfaction,3.0
508,011b8046a07ac2cedde530a05f81e8fb41f80c62,keishi <keishi@chromium.org>,Thu Apr 14 07:21:40 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,rename heap to threadheap .chromium.tryserver.chromium.tryserver.chromium. committed cr,frustration,2.0
509,e3168773cb69e2a78acce39d1b4c1adbf56cac87,mlamouri <mlamouri@chromium.org>,Wed May 4 07:30:38 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,fix webviewlayouttest regarding global interface expectations. the expectation file assume speechsynthesis is an attribute but its now a getter. chromium.org reviewurl cr,frustration,3.0
510,52aab65ed49850e4dc0bcf35ee5fce80dcc82bf4,mastiz <mastiz@chromium.org>,Fri Apr 29 00:56:10 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,"reintroduce metric newtabpage.snippets.numarticles the histogram was originally introduced in and later dropped during a major rewrite in it records the number of snippets available, after the remotely fetched list is merged into the local cache. it excludes snippets discarded by the user. reviewurl cr",satisfaction,3.0
511,2b2114872f08a1fcfe2a6fb284b645a8152da85c,grunell <grunell@chromium.org>,Mon May 30 06:50:48 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,"forward output glitch information from stream webrtc log a callback is added as input parameter on audiomanager create stream functions. onlogmessage function is added to the audiolog interface. the audiooutputdispatcherimpl gives audiologonlogmessage as callback when creating an output stream. audioinputcontroller gives audioinputcontrollerlogmessage new function as callback when creating an input stream. in this function, the message is passed to audioinputrendererhostonlog. in both input and output cases, the message is then passed to the webrtc log. the mac input and output streams inform about os glitches via the callback. reviewurl cr",frustration,2.0
512,423b16914aeb4988b7e4f1f64af6d77aa4d39086,skia-deps-roller <skia-deps-roller@chromium.org>,Wed May 4 22:02:00 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,roll skia ebdaedfdf commit. git log ebdaedfdf nomerges format'ad ae s' sclittle revert of modernize skmutex and sksemaphore. patchset of . google.com reviewurl cr,neutral,5.0
513,abec35f181976833456084b6f4862afa80f5bc8f,rouslan <rouslan@chromium.org>,Wed Apr 6 17:22:41 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,"use the framespecific service registry for paymentrequest this patch changes paymentrequest to use the mojo service registry from localframe.h. this service registry is distinct from platform.h, which is for the render thread. thread's and frame's service registries communicate to different sets of mojo services in the browser. review url cr",caution,2.0
514,928d2ca84201ab313eff7ccf97c11345b36140d8,dpapad <dpapad@chromium.org>,Wed Apr 27 16:35:55 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,cleanup remove dead code left overs from . most_visited_page_test.js the test that was using this has been deleted since same holds for util.js getfaviconurlforcurrentdevicepixelratio helper. reviewurl cr,satisfaction,3.0
515,a11de20c793b16d4dc4e5440097f8493666f0721,dalecurtis <dalecurtis@chromium.org>,Fri Jun 24 17:53:49 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,"restrict onsuspend restrictions for audio to nonandroid. on android suspend and resume work differently than other platforms, the notifications are delivered a few seconds after an app is put into the background. we don't want to suspend background audio in these cases full player suspend and resume is controlled by the webmediaplayerimpl instead when necessary video only, paused, etc. reviewurl cr",neutral,4.0
516,069c75b5285bd84940bf10f448eea35fed639f68,catapult-deps-roller <catapult-deps-roller@chromium.org>,Thu May 5 20:49:17 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,roll catapult commit. git log nomerges format'ad ae s' reviewurl cr,neutral,3.0
517,88b19ef7788c9b388cf5eb877d75c264d81e4298,mstensho <mstensho@opera.com>,Fri May 20 10:31:01 2016 -0700,chromium/chromium,4568,2016Q2,4568 chromium/chromium 2016Q2,"keep writingmode in sync between a column spanner and its placeholder. don't exclude layoutmulticolumnspannerplaceholder which is just a layoutbox in propagatestyletoanonymouschildren. there was an optional requirement for the child to be layoutblock or better, but there really doesn't seem to be any point in doing this. we no longer create anonymous layoutinline objects, ever, anyway will file a separate cl to remove some unneeded support code for that in layoutinline. all we need to do now is to steer clear of such anonymous objects that have custom ways of inheriting style. layoutfullscreen and layoutfullscreenplaceholder were already taken care of. now that we always try to propagate style to nonlayoutblock objects as well, we need to avoid layoutlistmarker too. reviewurl cr",frustration,4.0
518,ba20442acad8010389c44df03e16bf4a6ae45605,chrome-tpm <chrome-tpm@google.com>,Sat Jul 25 20:04:29 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,updating trunk version from . to . cr,satisfaction,3.0
519,c782069b6493400ad5b0cd1afaab6a4cdb48ef3c,dbeam <dbeam@chromium.org>,Mon Jul 20 13:19:39 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,teach the presubmit about cssmixins. chromium.org review url cr,neutral,3.0
520,a220d56504d1a5f6edd52dca99349383bd5d42cc,blink-deps-roller <blink-deps-roller@chromium.org>,Tue Jul 14 06:22:15 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,"roll webkit svn summary of changes available at chromium.org, review url cr",satisfaction,3.0
521,947d49c679be307f6f36d91a513a4810699a0d9d,vasilii <vasilii@chromium.org>,Wed Jul 22 03:16:08 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,don't steal the focus in the password bubble on mac. review url cr,caution,4.0
522,e863ee2471316fa5f177d3eac32c5f412d6682a8,skia-deps-roller <skia-deps-roller@chromium.org>,Tue Aug 11 10:19:39 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,roll skia summary of changes available at . google.com commits in this roll cfee revert move some public headers into private move some public headers into private review url cr,frustration,2.0
523,d0412f4064413cb3a2429a40c591e130aa465e2d,mtomasz <mtomasz@chromium.org>,Tue Jul 14 00:35:17 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,update pindrivefile to accept entries instead of urls. chromium.org manually by pinning a file and confirming it stays pinned. review url cr,satisfaction,2.0
524,9c6a53d38c0b59836738c831b839213fbc722163,xiyuan <xiyuan@chromium.org>,Thu Aug 27 10:29:28 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,eraser remove dead string in ntpresourcecache review url cr,caution,2.0
525,10d43ed173131e3b8a69c38bf5519789a4aa834d,estade <estade@chromium.org>,Tue Aug 18 12:41:12 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,"delete some old avatar bubble code. this breaks switcheskdisablenewavatarmenu, which afaik is deprecated. note that there are some code paths which were attempting to still use the old avatar bubble on cros, but failing hitting a dcheck and not showing any ui. one example pass enableaccountconsistency print preview cloud print sign in along the way, this changes a lot of runtime switches to compiletime switching. ifdefs aren't great but i think they're a lot better than trying to logic your way through all possible code flows and hopefully this is just temporary until the code is refactored in a more elegant way. review url cr",frustration,4.0
526,8b39fa0de8ae2354a10717c4949d15ff8ad0bc3e,msarda <msarda@chromium.org>,Fri Aug 21 02:17:00 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,"remove dcheck that primary account is present in new accounts when reloading credentials. when the ios token service reloads its accounts, there was an assumption that the primary account id is always available among the ios provider accounts. this assumption is wrong in the case when the identity corresponding to the primary account was removed by the user when the application was killed or in background. this cl removes the corresponding dcheck. review url cr",satisfaction,2.0
527,b8fd739dcdaf1174beb3df8ac1fb31896a569adb,rvargas <rvargas@chromium.org>,Mon Jul 27 16:53:47 2015 -0700,chromium/chromium,4568,2015Q3,4568 chromium/chromium 2015Q3,sandbox small cleanup for the path handling code. no functionality change. review url cr,caution,3.0
528,0b728e0ea00f70b912ae80f48deda7272c7ed9f8,philn@webkit.org <philn@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Jul 31 17:16:24 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,"live stream support is weak reviewed by martin robinson. make sure ondisk buffering is disabled for live streams. it is enabled initially when loading any remote media file if preload is set to auto. later on if the player detects that the media is live it disables ondisk buffering. this patch also adds support for caching the total size of the media. .cpp webcoremediaplayerprivategstreamermediaplayerprivategstreamer webcoremediaplayerprivategstreamerload keep track of the media url as an instance attribute. webcoremediaplayerprivategstreamerduration logging improvement. webcoremediaplayerprivategstreamersetrate use the new islivestream method. webcoremediaplayerprivategstreamerbuffered ditto. webcoremediaplayerprivategstreamerhandlemessage indicate source of duration message. webcoremediaplayerprivategstreamerfilltimerfired perform an anonymous duration change emission, mostly to cache its value. webcoremediaplayerprivategstreamertotalbytes return cached size when available. webcoremediaplayerprivategstreamerupdatestates use the new islivestream method and handle state change corner cases for live streams. webcoremediaplayerprivategstreamerdurationchanged cache media total size and reenable ondisk buffering if caching succeeds. webcoremediaplayerprivategstreamermovieloadtype new implementation handling ondisk buffered and live streaming cases. webcoremediaplayerprivategstreamersetpreload remember the case where preload is updated from auto to another value, do ondisk buffering only for auto preload attribute. .h mediaplayerprivategstreamer webcoremediaplayerprivategstreamerislivestream utility method, a stream is live if it goes to pause without prerolling. bb",neutral,3.0
529,07864fd58b808b13d26bc5e17c90cad6e2994ff7,ossy@webkit.org <ossy@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Sep 7 05:32:04 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,"regression it broke debuggerexpandscope.html unreviewed, reverting the expected file change. debuggerexpandscopeexpected.txt bb",satisfaction,3.0
530,f0b3faa8b0861bc2960d7d7d9ab394fc73ae820d,jamesr@google.com <jamesr@google.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Sep 6 05:28:45 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,"unreviewed chromium windows build fix. some of the rules in webcore_remaining only apply to files under . since moved all such files from the webcore_files variable to webcore_platform_files, these rules have to be applied to webcore_platform instead. this also means that these files link into webcore_platform instead of webcore_remaining, which makes a lot more sense, and we can delete several redundant rules. webcoregyp bb",caution,2.0
531,4518b61f530e8c8fb41399563b64a70b70112709,danhn@chromium.org <danhn@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jul 26 22:40:20 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,fixed the following warnings review url dcbdfc,satisfaction,1.0
532,83c084851ee6734baa3c2f9503af00416a15c6d6,haraken@chromium.org <haraken@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Aug 10 15:16:22 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,remove collectisolatedcontexts from reviewed by adam barth. we want to remove . this patch removes collectisolatedcontexts. no tests. no change in behavior. scriptcontroller.cpp webcorescriptcontrollercollectisolatedcontexts .cpp webcorecollectisolatedcontexts bb,neutral,3.0
533,7ba7da936c28a6f54f5f7a16f0d1c9a7d9376167,dpranke@chromium.org <dpranke@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Sep 19 00:44:46 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,"wordspacingcharacters,complex no longer fail on mac. unreviewed, expectations change. testexpectations bb",frustration,3.0
534,3a1b422883ffb7fd4b0e8eda3059223eaf1dd595,jbauman@chromium.org <jbauman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Sep 24 00:08:15 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,"fix extensionwebstoregetwebglstatustest.blocked this should only really be checking the status of webgl, so ensure that's the case chromium.org review url dcbdfc",frustration,5.0
535,d833fc2695e8ef6b5912cc7078685b476a39ffae,vsevik@chromium.org <vsevik@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Aug 15 12:06:45 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,web inspector save as of edited source in developer mode fails to update saved file reviewed by pavel feldman. added dirty flag check when saving uisourcecode to save working copy in this case. .js webinspector.handlerregistry.prototype.appendapplicableitems.save webinspector.handlerregistry.prototype.appendapplicableitems bb,satisfaction,2.0
536,d37789d7be1682d25d86dae163c900ae5c78c1b3,jorgelo@chromium.org <jorgelo@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Aug 7 19:08:32 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,clean up gpu process seccompbpf sandbox policies. conformance tests on chrome os. review url dcbdfc,satisfaction,4.0
537,b43c581a56683a842a39afa78ec8fc0ea8c1f4b0,mihaip@chromium.org <mihaip@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jul 13 03:00:21 2012 +0000,chromium/chromium,4568,2012Q3,4568 chromium/chromium 2012Q3,make tag shim handle tags created after load. the script gets injected and run so early as the script context is created that the mutation observer would not get registered correctly. the fix is to move the mutation observer creation into the domcontentloaded event handler it can't observe mutations before that point anyway. chromium.org review url dcbdfc,neutral,4.0
538,3ae54ce53ddf4801fb78cfb768445ca3dcdd44a8,viettrungluu@chromium.org <viettrungluu@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Feb 11 18:35:53 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,"revert mojo add a test_support.h. this isn't quite right. it breaks on a linux shared library build mojo_shell_unittests at runtime. the stuff in test_support.h also differs considerably from other stuff in environment it's not something chosen by the app, so it doesn't belong there. . mojo add a test_support.h. remove 's base dependency. chromium.org review url chromium.org, review url dcbdfc",frustration,3.0
539,e68a98bbb670639783835f699a569c0defd4df5d,leng@chromium.org <leng@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Mar 26 19:43:00 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,"make uisimplemenumodeldelegate's destructor public. this allows classes to use scoped_ptr with a subclass, without knowing exactly which subclass. review url dcbdfc",caution,2.0
540,e7f6fde14dd18a182ac86497a5e9fccb5fb65776,hclam@chromium.org <hclam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat Mar 1 06:44:41 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,socket pass netlog to sockethostudp a netlog object is passed to socket such we can track socket events. review url dcbdfc,neutral,4.0
541,e9c46441b3cd0355b942e01ce949d02df3e2bfc0,bokan@chromium.org <bokan@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Mar 13 02:11:48 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,moved pinchviewport from webviewimpl to framehost. review url bb,satisfaction,6.0
542,506624d720730a69ee10ac12d7567afadd7ce891,rmcilroy@chromium.org <rmcilroy@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Mar 11 16:26:44 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,remove unreachable code in visitdatabasegetmostrecentvisitsforurl also add a test for getmostrecentvisitsforurl in visit_database_unittests.cc review url dcbdfc,caution,4.0
543,22df2b2f3898ff722f9b65619753c7bbdda085d0,glider@chromium.org <glider@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Mar 13 10:55:07 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,disable asan instrumentation for globals on mac to work around issue chromium.org review url dcbdfc,neutral,2.0
544,085e0a1102bbe182369aed6c9dfe206ed6320b8c,spang@chromium.org <spang@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Mar 24 19:29:45 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,ozone add default cursor support to bitmapcursorfactoryozone this uses the aura bitmap cursors as the default cursors. ozone review url dcbdfc,neutral,4.0
545,b23624b1286b39b81df10d82d4d2654ac4af3c39,skuhne@chromium.org <skuhne@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jan 29 02:31:39 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,adding a dialog which explains that the multi user session has ended because a user policy has changed. review url dcbdfc,frustration,5.0
546,387b36435f0ca05a922558d1e577748cbf1a8786,hidehiko@chromium.org <hidehiko@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Mar 14 15:24:28 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,"add very simple loading test for nonsfi nacl. this is the first step to add test cases for nonsfi nacl. the testee binary is build by a new target rule introduced by this cl, which is free binary. the code has a minimum set of handlers for irt_ppapi, to load the plugin successfully done with communicating hosts processes. along this change, some dcheck errors are found. so they're fixed, too. atexitmanager is conflicting. in nonsfi mode, atexitmanager is already instantiated in nacl_helper. to avoid the conflicting, skip to create it in plugin_main_irt.cc. allowed creating singleton on the plugin's main thread. srpc may be successfully done, and then notreached catch it in nacl_listener. it is false alarm, so removed it. code.google.detail? .browser_tests nonsfi locally. run trybots. review url dcbdfc",satisfaction,4.0
547,28654610f4fdf169ef5a908b30b797f1fa494614,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Feb 19 15:33:09 2014 +0000,chromium/chromium,4568,2014Q1,4568 chromium/chromium 2014Q1,update .deps.git dcbdfc,neutral,6.0
548,343cd75743aca0c7736c4eaff925b4887742b488,lfg <lfg@chromium.org>,Fri Sep 9 21:59:31 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,move windowresizerrect from webviewclient into webwidgetclient. this is part of a refactor to split . reviewurl cr,neutral,3.0
549,585e2557d53d8f6cea285799c7925518372a7850,dbeam <dbeam@chromium.org>,Thu Aug 4 09:49:45 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,media router remove performance.now externs they're unnecessary if window.performance is used. this is because of how wc_navigation_timing.js types the global performance. chromium.org .tryserver.chromium. reviewurl cr,neutral,3.0
550,cde1af7bd0ccf5b051bd3bac47290e15d8a0ef29,brettw <brettw@chromium.org>,Tue Sep 27 14:16:26 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,"remove som gyp annotations, remove unused manifest. removes annotations of gyp version from gn targets. removes shell.exe.manifest which was used only by the gyp build. chromium.org .tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium. reviewurl cr",frustration,6.0
551,c62c6291b67905156e52f1d20245b933bb959904,jam <jam@chromium.org>,Mon Sep 26 13:44:18 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,plznavigate inform the webframeclient that a form will be submitted this cl makes it so that the webframeclient is informed that a form will be submitted when the embedder handles the navigation. fixes autofilltest.aggregatesminvalidprofile autofilltest.aggregatesminvalidprofiledifferentjs autofilltest.appendcountrycodeforaggregatedphones autofilltest.profilesavedwithvalidcountryphone autofilltest.profilesnotaggregatedwithinvalidemail autofilltest.profilesnotaggregatedwithnoaddress autofilltest.profilesnotaggregatedwithsubmithandler autofilltest.profilewithemailinotherfieldnotsaved autofilltest.useplussignforinternationalnumber autofillservertest.queryanduploadbothincludefieldswithautocompleteoff formautocompletetest. formautocompletetest.autocompleteoffinputsubmit formautocompletetest. formautocompletetest.normalformsubmit this is a reland of clamy's change from with a fix for the crash. reviewurl cr,neutral,1.0
552,c542d3744b905a2a00f5ac2dd2047a6a323ec181,bugsnash <bugsnash@chromium.org>,Tue Sep 13 18:58:26 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,"made elementraredata store computedstyle on layoutobject if possible. made elementraredata store computedstyle on layoutobject of it's base class noderaredatabase if it has a layoutobject. otherwise it is stored on the computedstyle member of elementraredata. the reason for this is to make it consistent with storage of computedstyle on node, which stores a union that can be one of a computedstyle a layoutobject computedstyle can be stored on this a noderaredata layoutobject can be stored on this which stores computedstyle or if no layoutobject computedstyle can be stored directly on elementraredata this patch encapsulates the logic of where to store the computedstyle on the elementraredata so that it doesn't need to be done at the call site e.g. in new method nodesetcomputedstyle from the clearcomputedstyle method is special and only clears the computedstyle member as its current use is not intended to clear a layoutobject's computedstyle. reviewurl cr",neutral,2.0
553,5bfed2ae9de23af386fe69e6f42f1e2385314fe6,sdefresne <sdefresne@chromium.org>,Mon Aug 8 16:41:13 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,swap rsesek for thomasvl as owners of mac. reviewurl cr,frustration,5.0
554,7d7a94d999847d71bc9f0557fd4103efa5a8ed71,dmazzoni <dmazzoni@chromium.org>,Mon Sep 26 13:22:47 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,"implement nsaccessibilityscrolltovisibleaction on mac if you navigate to an element with voiceover, chrome wasn't scrolling it into view unless it was focusable. to fix this we mainly just needed to implement nsaccessibilityscrolltovisibleaction. to get this to work in pdf files too, we needed an extra fix since the pdf node is outside of web content but can't scroll itself, so we get the pdf node's coordinates and then tell the web document to scroll to make that bounding box visible. , reviewurl cr",neutral,2.0
555,cf67a6582d3442775e0e52299160ed9119c899a3,recipe-roller <recipe-roller@chromium.org>,Fri Sep 9 18:00:02 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,"roll recipe dependencies trivial. this is an automated cl created by the recipe roller. this cl rolls recipe changes from upstream projects e.g. depot_tools into downstream projects e.g. . more info is at use to file a bug or complain build present tombstones in a new page for crashed test cases. chromium.org, recipetryjobbypassreason autoroller bugdroidsendemail false reviewurl cr",frustration,5.0
556,75e8d631af691f5607637bdf7fa3eb3fe9b98c88,mostynb <mostynb@opera.com>,Tue Aug 2 09:46:53 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,make use of existing gn args in .gn reviewurl cr,frustration,3.0
557,e74c2a9687c28f2718d71ae6ad9b6153119361c7,agoode <agoode@chromium.org>,Wed Jul 6 23:46:32 2016 -0700,chromium/chromium,4568,2016Q3,4568 chromium/chromium 2016Q3,"fix initialization of udev in midimanageralsa. new devices would not be detected on linux. worse, things would get very confused if you disconnected one device and connected another. this has been broken for four months, with crrev. reviewurl cr",neutral,3.0
558,9ab82050caed9b8dd806e264d4086356565c536c,rob.buis@samsung.com <rob.buis@samsung.com>,Wed May 20 02:01:57 2015 +0000,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,"remove csspropertyparserinviewport method remove csspropertyparserinviewport method since with the new css parser enabled we can rely on m_ruletype to be set correctly. , review url bb",neutral,3.0
559,8c36b0c96bee3fea8e5b125bacae03d3c537a386,skyostil <skyostil@chromium.org>,Tue Jun 16 18:59:06 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,"google_apis migrate callers of message_loop_proxy to task_runner migrate callers of messageloop,threadmessage_loop_proxy to messageloop,threadtask_runner. since the types at the call sites have already been updated, this is just a bulk rename. review url cr",frustration,3.0
560,ad0371ec70989b98bf42488da9f5dec3e6db7b21,jyasskin <jyasskin@chromium.org>,Fri Apr 24 16:41:32 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,"exclude winheapdumpprovidertest.dumpinto because it has an 'invalid heap' error in drmemory. chromium.org, review url cr",neutral,3.0
561,814405216bd3b55179fbaff0a0a5f2b1c60e78c7,chrome-tpm <chrome-tpm@google.com>,Wed May 13 20:03:27 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,updating trunk version from . to . cr,satisfaction,5.0
562,d822f5ad1f78e1fb7cd5186c62ed6f4aa0149b94,ketan.goyal <ketan.goyal@samsung.com>,Wed Jun 3 21:32:08 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,convert bare pointer to scoped_ptr in chromium.org review url cr,neutral,3.0
563,9845b890dd38f0b88b0304f3bd6c437a7c6f8f8d,torne <torne@chromium.org>,Tue Apr 7 14:02:54 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,"remove indirection of cpufeatures.gypi. now that android_webview_build is no longer supported, the extra level of indirection of including cpufeatures.gypi instead of directly depending on the cpufeatures target is not necessary. remove the cases in the chromium tree. other references appear in projects pulled in via deps that will have to be fixed separately before cpufeatures.gypi can be entirely deleted. review url cr",neutral,3.0
564,76d3600fe1eb6366e2aa467339e0ba4b2f76d5b3,chrishtr@chromium.org <chrishtr@chromium.org>,Mon Apr 27 19:25:03 2015 +0000,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,"update transform after layout for table sections. table sections and rows are allowed to have transforms on them, but we were not previously updating the transform properly after layout. this patch is a partial reimplementation of crrev which was reverted, because of problems with the inheritance hierarchy of layout objects. review url bb",frustration,3.0
565,8f279b4c8ad2374ba272f4c3a3446495fbfabc86,thestig <thestig@chromium.org>,Wed May 20 21:42:31 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,remove an old todo in . this was added in but will no longer be needed once fixes the test. review url cr,satisfaction,1.0
566,4a0177a1dba8197f61021ff3b4f9426e45faaa62,reveman <reveman@chromium.org>,Mon May 18 14:23:10 2015 -0700,chromium/chromium,4568,2015Q2,4568 chromium/chromium 2015Q2,content use numberofprocessors raster threads. raster threads improve performance on core machines. core machines might not be a priority but it seems like an unnecessary limitation to have. bug url cr,caution,5.0
567,d2b7c2aaf7b565532c7d9937519b199fbca4a779,Alexander Stein <alexander.stein@systec-electronic.com>,Thu Apr 16 14:51:56 2015 +0200,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,asoc use specific variable for lo_vag this is a preparation for calculating lo_vol which needs both vag and lo_vag. stein brown,neutral,2.0
568,a065fe6aa25ba6ba93c02dc13486131bb3c64d5f,Sagi Grimberg <sagig@mellanox.com>,Tue Apr 14 18:08:13 2015 +0300,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"fix wrong calculation of protection buffer length this length misscalculation may cause a silent data corruption in the dix case and cause the device to reference unmapped area. fixes defd 'libiscsi, iser adjust data_length to include protection information' grimberg ledford",neutral,5.0
569,76dfa6082032b5c179864816fa508879421678eb,Eric Dumazet <edumazet@google.com>,Fri May 15 12:39:29 2015 -0700,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"tcp allow one skb to be received per socket under memory pressure while testing tight tcp_mem settings, i found tcp sessions could be stuck because we do not allow even one skb to be received on them. by allowing one skb to be received, we introduce fairness and eventuallu force memory hogs to release their allocation. dumazet s. miller",neutral,3.0
570,ef2a5153b4d2c48c05b9280491cb5592a46df385,Geert Uytterhoeven <geert+renesas@glider.be>,Tue Apr 14 15:44:22 2015 -0700,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"mark unmap_and_move noinline to avoid ice in gcc with gcc version ubuntu .c in function migrate_pages' . internal compiler error in push_minipool_fix, at arm. please submit a full bug report, with preprocessed source if appropriate. see for instructions. preprocessed source stored into .out file, please attach this to your bugreport. make error make error mark unmap_and_move which is used in a single place only noinline to work around this compiler bug. uytterhoeven reportedby kevin hilman cc marc zyngier testedby kevin hilman testedby lina iyer morton torvalds",satisfaction,5.0
571,9e6f4ca3e567d5d9e4133d2da8bae8f476f85873,Jakub Kicinski <kubakici@wp.pl>,Fri May 29 21:20:29 2015 +0200,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,scisxx use kthread_worker for tx_work and irq convert workqueue usage to a realtime kworker. the problem with workqueues is that we cannot set realtime priorities on our work and asynchronous reconfiguration can be blocked by less important tasks. we need kthread for the interrupt anyway and because we will now be using single kthread for all txrelated operations we can get rid of the port mutex. kicinski kroahhartman,neutral,4.0
572,7baa184dbd407b4a1b619c6f5f78074f0bb19ae9,Greg Kroah-Hartman <gregkh@google.com>,Tue Apr 7 20:27:53 2015 +0200,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"greybus busgreybus document the endo and svc this documents the endo device, and the svc specific files that are present in the sysfs device tree. kroahhartman elder",neutral,3.0
573,724cde479dafcd4a6ee1e39e820ac94c0c7c04c5,Stephen Boyd <sboyd@codeaurora.org>,Tue Jun 16 13:31:15 2015 -0700,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"arm dts qcom add node for wired ethernet the micrel device is present on cdp boards. it is connected to two regulators, one controlled via a gpio and another controlled via the rpm. add the gsbi, spi, gpio regulator, and micrel nodes so that ethernet works properly. boyd gross",frustration,3.0
574,a7f4ee1fe93aa9ae191971be9324edb8f9fbcb4a,Michael Ellerman <mpe@ellerman.id.au>,Sat Apr 4 19:28:50 2015 +1100,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,"powerpc drop return value of smp_opsprobe smp_opsprobe is currently supposed to return the number of cpus in the system. the last actual usage of the value was removed in may in eecf simplify smp_space_timers. we still passed the value around until june when even that was finally removed in caada powerpc clean up obsolete code relating to decrementer and timebase. so drop that requirement, probe now returns void, and update all implementations. ellerman",neutral,2.0
575,4d1640927bd54aa118f91c2bcfe6c2de0e2ba2a3,Ingo Molnar <mingo@kernel.org>,Wed Apr 22 13:44:25 2015 +0200,torvalds/linux,4589,2015Q2,4589 torvalds/linux 2015Q2,factor out the fpu bug detection code into fpu__init_check_bugs move the boottime fpu bug detection code to the other fpu boot time init code in .c. no change in code size text data bss dec hex filename fc vmlinux.before fc vmlinux.after petkov cc andy lutomirski cc dave hansen cc fenghua yu cc h. peter anvin cc linus torvalds cc oleg nesterov cc peter zijlstra cc thomas gleixner molnar,frustration,3.0
576,55713eceac5ddad41cbf6be7b4f4864dffcb8722,pasko <pasko@chromium.org>,Thu Oct 27 08:57:15 2016 -0700,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"reenable nonhtml tests after the prefetchfinished notification was moved to documentfinishedparsing, it actually started executing even for nonhtml documents, which kills the renderer properly, and hence the tests can be reenabled. initially prefetchfinished was called htmldocumentparserend which made these tests fail, but then the call was moved to the better place during review. , reviewurl cr",neutral,1.0
577,25f5ff1a94014368c5595c9e3488d957563a772c,tyoshino <tyoshino@chromium.org>,Wed Nov 30 01:00:38 2016 -0800,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"refactor preloader code for better role separation remove dependency to resourcepreloader from htmlpreloadscanner move fetchrequest construction and loading logic from htmlresourcepreloader to preloadrequest chromium.org, reviewurl cr",caution,4.0
578,1e865beae078d9f966d2775208d5429fc4469939,xhwang <xhwang@chromium.org>,Mon Oct 3 17:23:47 2016 -0700,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"media add uma to report media pipeline start result recently we see some changes in the pipeline start success rate. however, we can only get this statistics indirectly through some other umas. this cl adds a uma directly for this. note that if the media pipeline is destroyed during the starting process, this uma will not be reported. this should be relatively rare. also, in this case, the result won't affect user experience anyways. tested to make sure the metric is reported. reviewurl cr",neutral,3.0
579,445e652a8090bad27d23ddfd9cb10ea509705ff8,olivierrobin <olivierrobin@chromium.org>,Mon Dec 26 00:56:46 2016 -0800,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"fix unseen logic for reading list menu entry. the entry is blue iff at least one entry has the unseen status. add an api to get the number of unseen items and use it in the menu. add convenience methods to update unread, read and unseen counter. add a markallread method to mark all items read. reviewurl cr",neutral,2.0
580,dfa6f55457af008340e95ccb8258693895c639e5,v8-autoroll <v8-autoroll@chromium.org>,Thu Dec 1 05:51:02 2016 -0800,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,update to version summary of changes available at please follow these instructions for 'ing issues please close rolling in case of a roll revert this only works with a google account. .tryserver.master.tryserver.chromium.master.tryserver.chromium.master.tryserver.chromium. chromium.org reviewurl cr,satisfaction,5.0
581,5b3b87f01a6922bc2a42266ed5925d960c49ea0a,zhongyi <zhongyi@chromium.org>,Mon Oct 17 16:48:06 2016 -0700,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,disable pushed and unclaimed server push bytes collection to help temporarily fix crash in quicchromiumclientsessiononpushstreamtimedout. bug reviewurl cr,satisfaction,5.0
582,cc11f1e65bc21e264ec3a763e9c0d36f2d9025b1,emaxx <emaxx@chromium.org>,Tue Nov 22 09:28:50 2016 -0800,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"expose signing key from cloud policy stores this change makes the cloud policy stores user, device, devicelocal to expose more information about the policies that they own the public part of the signing key. this was not exposed by their interfaces previously. no behavior change is expected to be introduced by this cl. this change is intended to be a base for the subsequent implementation of the component cloud policy signature verification. unit tests reviewurl cr",frustration,3.0
583,c4e4d1ec115efd49ee6d396b115b68ede6189c6d,djacobo <djacobo@google.com>,Thu Oct 20 22:52:18 2016 -0700,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,"removing insets for intentpickerbubbleview border was painted inside of the bubble, not visible anymore thanks to estade fix. tested the picker looks correct. reviewurl cr",frustration,3.0
584,9a50f58c3d2612b162feb9c098c971f892024d48,eugenebut <eugenebut@chromium.org>,Fri Dec 9 10:19:54 2016 -0800,chromium/chromium,4568,2016Q4,4568 chromium/chromium 2016Q4,removed dependency from net. this removes files from net compilation. reviewurl cr,neutral,2.0
585,970282d0e1404b23f9d7ec6a676fa76ff15b3376,David S. Miller <davem@davemloft.net>,Thu Mar 19 15:18:04 2015 -0400,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"merge branch 'forupstream' of johan hedberg says pull request bluetoothnext this wont the last . bluetoothnext pull request, but we've piled up enough patches in less than a week that i wanted to save you from a single huge lastminute pull somewhere closer to the merge window. the main changes are simultaneous le discovery support for hw that can do it complete le oob pairing support more finegrained mgmtcommand access control normal user can now do harmless readonly operations. added rf power amplifier support in driver some in code please let me know if there are any issues pulling. thanks. s. miller",neutral,3.0
586,739cfd9be9af6bbbe4c652077add59409adf2225,Laurent Pinchart <laurent.pinchart@ideasonboard.com>,Mon Mar 9 03:39:35 2015 -0300,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"rcarvin don't implement empty optional clock operations the clock_start and clock_stop operations are now optional, don't implement empty stubs. pinchart liakhovetski carvalho chehab",frustration,4.0
587,201f201c33220f53856fd300e1990b779538d67f,Jens Axboe <axboe@fb.com>,Tue Feb 10 13:31:34 2015 -0700,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"blkmq make blk_mq_run_queues static we no longer use it outside of blkmq.c, so we can make it static and stop exporting it. additionally, kill the 'async' argument, as there's only one used of it. axboe",satisfaction,3.0
588,03ec2ac0977dd1d44f8637f33c63a9a7022cf9af,Eric W. Biederman <ebiederm@xmission.com>,Mon Mar 2 00:02:19 2015 -0600,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,rose transmit packets in rose_xmit not rose_rebuild_header patterned after the similar code in this turns out to be a trivial obviously correct transmformation. cc ralf baechle cc w. biederman s. miller,neutral,6.0
589,df78222d78f0f985ffb7917df4a058113e227561,Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>,Fri Feb 20 22:35:52 2015 +0200,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"drm rcardu remove drm_fbdev_cma_restore_mode call at init time the function is meant to restore the fbdev mode in the lastclose handler, not to be called at init time. remove the call. pinchart",caution,4.0
590,2dccb4cdbf8fd4cb1d779a6f7ddd66d193bb5805,Petr Matousek <pmatouse@redhat.com>,Wed Mar 11 12:16:09 2015 +0100,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"kvm return initialized data on invalidsize read if data is read from pic with invalid access size, the return data stays uninitialized even though success is returned. fix this by always initializing the data. matousek reportedby nadav amit messageid bonzini",neutral,2.0
591,1805f4d6514b70d40bf9468308fa8bdfbfcd3905,Barry Song <Baohua.Song@csr.com>,Sun Jan 4 17:40:54 2015 +0800,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"arm sirf move to debug_ll_io_init and drop map_io this patch moves to debug_ll_io_init, then finally drops csr map_io machine callbacks. song bergmann",frustration,3.0
592,9143e398a443d104d0c1247a3049ccdeb9b7f192,Nimrod Andy <B38611@freescale.com>,Tue Jan 20 16:48:17 2015 +0800,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"arm dts correct i. sdb board enet phy address the commit dfcc cause i. sdb enet cannot work. the cause is the commit add mdio node with uncorrect phy address. the patch just correct i. sdb board enet phy address. as shawn's suggestion that unitaddress should match 'reg' property, so update ethernetphy unitaddress. agner duan guo s. miller",neutral,4.0
593,d6e0b7fa11862433773d986b5f995ffdf47ce672,Vladimir Davydov <vdavydov.dev@gmail.com>,Thu Feb 12 14:59:47 2015 -0800,torvalds/linux,4589,2015Q1,4589 torvalds/linux 2015Q1,"slub make dead caches discard free slabs immediately to speed up further allocations slub may store empty slabs in per partial lists instead of freeing them immediately. this prevents per memcg caches destruction, because kmem caches created for a memory cgroup are only destroyed after the last page charged to the cgroup is freed. to fix this issue, this patch resurrects approach first proposed in . it forbids slub to cache empty slabs after the memory cgroup that the cache belongs to was destroyed. it is achieved by setting kmem_cache's cpu_partial and min_partial constants to and tuning put_cpu_partial so that it would drop frozen empty slabs immediately if cpu_partial . the runtime overhead is minimal. from all the hot functions, we only touch relatively cold put_cpu_partial we make it call unfreeze_partials after freezing a slab that belongs to an offline memory cgroup. since slab freezing exists to avoid moving slabs a partial list on , and there can't be allocations from dead caches, it shouldn't cause any overhead. we do have to disable preemption for put_cpu_partial to achieve that though. the original patch was accepted well and even merged to the mm tree. however, i decided to withdraw it due to changes happening to the memcg core at that time. i had an idea of introducing permemcg shrinkers for kmem caches, but now, as memcg has finally settled down, i do not see it as an option, because slub shrinker would be too costly to call since slub does not keep free slabs on a separate list. besides, we currently do not even call permemcg shrinkers for offline memcgs. overall, it would introduce much more complexity to both slub and memcg than this small patch. regarding to slab, there's no problem with it, because it shrinks per caches periodically. thanks to list_lru reparenting, we no longer keep entries for offline cgroups in permemcg arrays such as memcg_cache_paramsmemcg_caches, so we do not have to bother if a permemcg cache will be shrunk a bit later than it could be. davydov cc christoph lameter cc pekka enberg cc david rientjes cc joonsoo kim morton torvalds",satisfaction,2.0
594,f494a916d3bed992e1275157eeaf709d8383aa27,Dave Jones <davej@redhat.com>,Thu Feb 13 14:45:26 2014 -0500,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,"move ioctl_bcm_gpio_set_request case out to its own function. bcm_char_ioctl is one of the longest nongenerated functions in the kernel, at lines. splitting it up into multiple functions should simplify this a lot. jones kroahhartman",neutral,4.0
595,fb5bb60cd004a00c1d11db680a37942ecdedb1c5,Yinghai Lu <yinghai@kernel.org>,Mon Jan 27 17:06:52 2014 -0800,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,"memblock don't silently align size in memblock_virt_alloc in original __alloc_memory_core_early for bootmem wrapper, we do not align size silently. we should not do that, as later free with old size will leave some range not freed. it's obvious that code is copied from memblock_base_nid, and that code is wrong for the same reason. also remove that in memblock_alloc_base. lu shilimkar cc dave hansen cc russell king cc konrad rzeszutek wilk cc ingo molnar cc h. peter anvin morton torvalds",satisfaction,2.0
596,a16942e63008875a6a057ea2973becd261ed0c4e,Michal Kazior <michal.kazior@tieto.com>,Thu Feb 27 18:50:04 2014 +0200,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,bypass htc for htt tx path going through full htc tx path for htt tx is a waste of resources. by skipping it it's possible to easily submit scattergather to the pci hif for reduced host cpu load and improved performance. the new approach uses dma pool to store the following metadata for each tx request msdu fragment list htc header htt tx command the htt tx command contains a msdu prefetch. instead of copying it original mapped msdu address is used to submit a second scattergather item to hif to make a complete htt tx command. the htt tx command itself hands over dma mapped pointers to msdus and completion of the command itself doesn't mean the frame has been sent and can be . this is why htc tx completion is skipped for htt tx as all tx related resources are freed upon htt tx completion indication event which also implicitly means htt tx command itself was completed. since now each htt tx request effectively consists of copy engine items ce_htt_ht_msg_src_nentries is updated to allow maximum of target_x_num_msdu_desc msdus being queued. this keeps the tx path resource management simple. kazior valo,satisfaction,4.0
597,56f15e518cfdc732bd4e4da90e0c9cf2fc4e7c1b,Heiko Carstens <hca@linux.ibm.com>,Mon Jan 27 10:25:39 2014 +0100,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,"introduce 'uaccesspt' kernel parameter the uaccesspt kernel parameter allows to enforce using the uaccess page table walk variant. this is mainly for debugging purposes, so this mode can also be enabled on machines which support the mvcos instruction. carstens schwidefsky",neutral,3.0
598,768821a302ae98c2d6a570e0ad63780180ba34db,Jingoo Han <jg1.han@samsung.com>,Thu Feb 27 20:38:20 2014 +0900,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,hwmon use simple_dev_pm_ops macro use simple_dev_pm_ops macro in order to make the code simpler. han stigge roeck,frustration,4.0
599,9da62eb01f7b38af3c9e75e786eed5dfdb622753,Dean Anderson <linux-dev@sensoray.com>,Wed Feb 5 14:58:06 2014 -0300,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,buffer setup fix buffer setup should check if minimum number of buffers is used. anderson verkuil carvalho chehab,neutral,1.0
600,e839c42d0b8789edc9814b69dcbedd3e1ad7c544,Chi Pham <fempsci@gmail.com>,Sat Mar 8 08:06:00 2014 +0100,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,removed assignments from if statements in .c. pham kroahhartman,neutral,3.0
601,c19ba9f99977d6954dec5211928d23060d9c317d,Denis Carikli <denis@eukrea.com>,Fri Feb 7 15:50:23 2014 +0800,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,arm dts add support for the board from eukrea and its baseboard. the following were added main and secondary uarts. and the device. ethernet. nand. the button. the led. watchdog sd. cc rob herring cc pawel moll cc mark rutland cc stephen warren cc ian campbell cc cc sascha hauer cc cc eric bénard carikli guo,neutral,4.0
602,c99f8b216c39b1fbeb8b6830b95e461db551afa9,Takashi Iwai <tiwai@suse.de>,Tue Feb 18 10:06:47 2014 +0100,torvalds/linux,4589,2014Q1,4589 torvalds/linux 2014Q1,asoc use soc_enum_single_decl just replace with the helper macro. no functional change at all. iwai girdwood clausen brown,frustration,3.0
603,f7ba8b3672aa62589e801bcd549b210f90443a13,jln@chromium.org <jln@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Oct 14 19:33:19 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,"linux sandbox make error tunable in open broker the broker process that can be used to perform open calls on behalf of a less privileged process now will return an errno specified at contruction time instead of eperm. , chromium.org review url dcbdfc",neutral,2.0
604,fd1a307756fbe290ee111de28c71185e220b8ec5,eseidel@chromium.org <eseidel@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Nov 12 20:04:40 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,blink roll tbr bug url dcbdfc,satisfaction,4.0
605,980f535b88a854e55bd1af4ba744df0278af5012,szym@chromium.org <szym@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Dec 16 23:48:20 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,"implement perpixel algorithms in bitmap as a c extension. bitmap_unittest chromium.org, review url dcbdfc",frustration,3.0
606,16bce34195e8e47d45379d4a21d8984f488ce21b,philipj@opera.com <philipj@opera.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Oct 2 12:19:28 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,"correct and simplify the cookie events browser test the listeners were being removed in the completion callback to chrome.cookies.set instead of in the chrome.cookiesonchanged listener. nothing guaranteed the order of these two, so the test begun failing when delete started waiting for flush in . simplify the tests by using . review url dcbdfc",neutral,2.0
607,f527d9cdabd11282598dc769fa32ed9490c877d9,dbeam@chromium.org <dbeam@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Dec 30 21:43:00 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,"remove 'using base' from .h and remove temporary presubmit.py _checkforstring. chromium.org, chromium.org, review url dcbdfc",frustration,2.0
608,6778feddfd9451088649a5b42de79d032832e4ee,avi@chromium.org <avi@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Dec 24 20:09:37 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,update some uses of utf conversions in to use the base namespace. change chromium.org review url dcbdfc,frustration,4.0
609,dd4e60aea1c67c7380e2a5d75160246cc930c15b,steveblock@chromium.org <steveblock@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Oct 23 10:10:53 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,remove failing expectation for animationsatendeventtransform.html this test has been passing reliably for some time. review url bb,frustration,5.0
610,564e2e53d0e025aab57c02e55e30a3dcf0b3aa9b,erg@chromium.org <erg@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Dec 19 01:44:21 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,"plumb the font hinting settings from render_text_pango.cc to skpaint. this also doesn't fix the font hinting settings, but is another link in plumbing from the user settings to the actual rendering. review url dcbdfc",frustration,3.0
611,eea7c5073e1b9d7107e4b2b7c72d02894998cf8c,chrome-admin@google.com <chrome-admin@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Dec 20 17:38:08 2013 +0000,chromium/chromium,4568,2013Q4,4568 chromium/chromium 2013Q4,update .deps.git dcbdfc,frustration,4.0
612,8d305b1ab291c389b55e2c38fbdab8e99e4b52ca,kaanb@chromium.org <kaanb@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Sep 19 06:17:14 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,content set gpumemorymanager minimum limits for android to all android trybots are green and this change needs to land together with so landing via notry. bug url dcbdfc,neutral,3.0
613,1fee897988e88e7f73965bbceda90eba7c13c67a,qsr@chromium.org <qsr@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Aug 6 17:24:33 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"mhtmlgenerationmanager handles the death of a render process. when mhtml start to download mhtml, it does keep track of the callbacks it will need to call when the jobs are done. but if the render process dies while serializing a page, the manager will not be called, and the callback will stays stall forever. this cl make sure that mhtmlgenerationmanager is getting notified when the renderer process dies and send an error for all currently active jobs. chromium.org review url dcbdfc",frustration,5.0
614,acbc3fb9b41af24c83bd5f0688c03ee91fd35a25,wtc@chromium.org <wtc@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Sep 27 21:45:49 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"don't log a on decryption failure. because quic does trial decryption, some decryption failures are to be expected in a successful connection, so the my_decrypt failed nss error log messages are confusing. chromium.org review url dcbdfc",satisfaction,2.0
615,043a53f92df65ba226ef5fc463613e051c782985,haraken@chromium.org <haraken@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Sep 5 04:59:19 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"fix threading races on hrtfelevationaudiobusmap according to the crash report there is a threading race in hrtfelevationgetconcatenatedimpulseresponsesforsubject. static passrefptr getconcatenatedimpulseresponsesforsubject typedef hashmap audiobusmap define_static_localaudiobusmap, audiobusmap, refptr bus audiobusmapiterator iterator audiobusmap.findsubjectname a if iterator audiobusmap.end audiobusmap.setsubjectname, bus b it's possible that thread executes a thread executes a thread executes b thread executes b and crashes. this cl protects accesses to the audiobusmap with mutex. no tests because the crash depends on threading races and thus not reproducible. review url bb",frustration,3.0
616,8e49465e564f2701ede15c84574b140dcd38e339,dongseong.hwang@intel.com <dongseong.hwang@intel.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Sep 25 13:25:50 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"renderlayerbackingstartanimation return value has incorrect semantic this cl is based on shawn singh's work webkit. renderlayerbackingstartanimation was returning true whenever any property of an animation was accepted for accelerated animation by the compositor. however, the rest of the code outside this was using the return value to indicate that all properties were accepted for accelerated animation. propertiesinkeyframedanimation.html review url bb",neutral,3.0
617,44219331bc8f7017225bb0faa7a99c27ae69042c,wittman@chromium.org <wittman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Sep 4 17:21:35 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"don't listen for notification_tab_closing in tabmodalconfirmdialogdelegate webcontentsmodaldialogmanager closes web contents modal dialogs when the webcontents is destroyed, so there is no need for tabmodalconfirmdialogdelegate to also close dialogs on tab closing. chromium.org review url dcbdfc",satisfaction,3.0
618,b4db86a6595ca691f52ad1658bbd5ca51867c243,hidehiko@chromium.org <hidehiko@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Sep 10 09:03:44 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"introduce state to driveintegrationservice. this is small refactoring of driveintegrationservice by introducing state. this is preparation of state migration of driveintegrationserivice. by the migration, driveintegrationservice can be obtained even before initialization. this cl supports the change. also, by this cl, filesystem can be deleted even before initialize is called. unit_tests chromium.org review url dcbdfc",neutral,5.0
619,047f81c732e85c0a43f2ea927caca85e81ca4f26,rogerta@chromium.org <rogerta@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat Sep 7 15:47:11 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,remove signinmanagerstartsignin since clientlogin is no longer used. review url dcbdfc,caution,3.0
620,c797ce9be44135bc0f91898a52150f384a894a46,hartmanng@chromium.org <hartmanng@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Aug 23 21:57:29 2013 +0000,chromium/chromium,4568,2013Q3,4568 chromium/chromium 2013Q3,"add compile asserts for new compositing reasons. in we start using these reasons on the chromiumside, so we should have these asserts as a safeguard. , review url dcbdfc",frustration,4.0
621,aa7399744dd02537523b7bf9e3070600b6f79751,Felipe Balbi <balbi@ti.com>,Mon Jul 20 14:48:13 2015 -0500,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,usb gadget defer endpoint name change we should only change endpoint names when we actually manage to it. balbi,frustration,1.0
622,93d988310bb2f5ed16ba075bbc4281aa06907e72,Lv Zheng <lv.zheng@intel.com>,Wed Aug 5 16:23:43 2015 +0800,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,"acpi sysfs add acpi_lv_repair debug level. this patch updates debug_level file, adding acpi_lv_repair. zheng j. wysocki",neutral,3.0
623,bc76c28719d4333248a516fd4d469ab741b44b63,Bob Copeland <me@bobcopeland.com>,Wed Sep 9 12:47:35 2015 -0400,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,"check for encryption before adding mic_len in the case of raw mode without nohwcrypt parameter, we should still make sure the frame is protected before adding mic_len to avoid skb_under_panic errors. copeland valo",neutral,4.0
624,f8c47144bf2964c8599ccce350ef71b62c2cbe28,Daniel Vetter <daniel.vetter@ffwll.ch>,Tue Sep 8 13:56:30 2015 +0200,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,"drm drop drm_unlocked from modeset drivers just one special case since lost its ums code, yay radeon has slots for the old ums ioctls which don't have drm_unlocked, but all filled with drm_invalid_op. so ok to drop it everywhere. every other kms driver just has drm_unlocked for all their ioctls, as they should. admgpu happened, include that one too. and lost its ums support which means we can change all the ioctls too. rebased on top of new vmwgfx dx interface extensions. rebase on top of rendernode support in exynos. vetter herrmann könig vetter",neutral,3.0
625,28c80605757883016c11a13465bd0573848f2139,Karol Herbst <nouveau@karolherbst.de>,Sun Aug 30 20:06:16 2015 +0200,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,pci add variant change email used in header change copyright information revert copyright changes herbst,satisfaction,3.0
626,3e40a78461739d86fe1084c515ec227507ba993d,Vinod Koul <vkoul@kernel.org>,Fri Jul 10 22:18:42 2015 +0530,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,asoc intel skylake add code loader dma apis this patch adds the last piece of code loader dma apis by adding the code loader dma apis for the driver to use s. prusty kp koul brown,neutral,2.0
627,36154dc3deea461eec4c8428336387192fe6e2ce,Mateusz Kulikowski <mateusz.kulikowski@gmail.com>,Sun Jul 19 19:28:16 2015 +0200,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,staging rename rtl_pci_resetdescring use naming schema found in other rtlwifi devices. rename rtl_pci_resetdescring to rtle_reset_desc_ring. kulikowski kroahhartman,frustration,5.0
628,6b251fc96cf2cdf1ce4b5db055547e2a5679bc77,Andrea Arcangeli <aarcange@redhat.com>,Fri Sep 4 15:46:20 2015 -0700,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,userfaultfd call handle_userfault for userfaultfd_missing faults this is where the page faults must be modified to call handle_userfault if userfaultfd_missing is true so if the vmavm_flags had vm_uffd_missing set. handle_userfault then takes care of blocking the page fault and delivering it to userland. the fault flags must also be passed as parameter so the readwrite kind of fault can be passed to userland. arcangeli emelyanov cc sanidhya kashyap cc cc kirill a. shutemov cc andres lagarcavilla cc dave hansen cc paolo bonzini cc rik van riel cc mel gorman cc andy lutomirski cc hugh dickins cc peter feiner cc dr. david alan gilbert cc johannes weiner cc huangpeng peter morton torvalds,neutral,3.0
629,8328447af88eaab1db29852cb3e4a71cda5bd887,Boris Barbulovski <bbarbulovski@gmail.com>,Tue Sep 22 11:36:01 2015 -0700,torvalds/linux,4589,2015Q3,4589 torvalds/linux 2015Q3,remove support for and older. barbulovski macieira marek,frustration,1.0
630,d853bed8ad213b0177e1a0ce502ef207009ad8da,vchigrin <vchigrin@yandex-team.ru>,Tue Jan 13 00:31:18 2015 -0800,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,proper dependencies for in windows gn build. review url cr,neutral,2.0
631,c38a45a25bac176d98e91aed57d87ff9c4d14e31,sdefresne <sdefresne@chromium.org>,Tue Mar 17 08:32:19 2015 -0700,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,"remove scorehistorymatchbuilder scoredhistorymatchbuilder was introduced to allow keeping scoredhistorymatch in the history component without having a dependency on autocomplete code. as scoredhistorymatch has been moved to autocomplete this makes the code more complex than necessary, so remove it. review url cr",caution,3.0
632,bd3aa1380548de94e30206492646d7cb5ccaf0f6,simonhatch <simonhatch@chromium.org>,Thu Feb 12 07:29:35 2015 -0800,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,"output device affinity along with the test name from test_runner.py. this will let us sort the runs by device, and make it clearer if one device is having trouble. example must land first review url cr",satisfaction,2.0
633,2049f02d1b11f3d53f67bbb7f7088421704f6cc1,verwaest@chromium.org <verwaest@chromium.org>,Tue Jan 20 14:06:01 2015 +0000,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,update test expectations for new type error message on call of nonfunction review url bb,neutral,2.0
634,5d811a93fd256878164ffc951514d9a7057e5fea,horo <horo@chromium.org>,Mon Mar 30 22:51:06 2015 -0700,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,send serviceworkerversion.scriptlastmodified and scriptresponsetime to devtools window. this cl depends on review url cr,caution,4.0
635,e17c4ca518cf85f598d07e61bade581c52ccb492,ajuma <ajuma@chromium.org>,Fri Jan 16 06:55:43 2015 -0800,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,"cc fix scroll offset after scroll animation is canceled when a scroll offset animation is removed by the main thread and a new scroll position is set, this new position should propagate to the pending tree on commit, and then to the active tree on activation. however, the removed animation continues running on the compositor thread until activation, producing a scroll delta. currently, this scroll delta gets added to the new scroll position on both threads. this cl prevents the scroll delta produced by a removed animation from being added to the new postanimation scroll position. review url cr",neutral,4.0
636,1b447a9e6add5a07a3f2357388aeedf08ef53f27,waltercacau <waltercacau@chromium.org>,Thu Mar 19 01:58:15 2015 -0700,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,collecting uma metrics for the unmaskprompt. review url cr,frustration,2.0
637,8183bd41d834b3210a83277fab72d3deb87fcdf8,sigbjornf@opera.com <sigbjornf@opera.com>,Tue Mar 10 17:34:55 2015 +0000,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,oilpan fix build after . reviews review url bb,caution,3.0
638,4ce8a485bb49f280ac007823e5fa9987b65cad01,dongseong.hwang@intel.com <dongseong.hwang@intel.com>,Mon Jan 19 05:28:04 2015 +0000,chromium/chromium,4568,2015Q1,4568 chromium/chromium 2015Q1,"make beginlayer and use skxfermodemode. compositeoperator and blendmode is mutual exclusive. from the css perspective, a css property is always set either, not both. for example, sourcein with lighten is impossible. if sourcein is needed, blendmode must be webblendnormal. otherwise, if lighten is needed, compositeoperartion must be sourceover. this cl makes use skxfermodemode directly. it helps to avoid a bug of having invalid compositeoperator and blendmode combination. graphicscontextbeginlayer gets webblendmode as parameter. graphicscontextbeginlayer receives only compositeoperator while graphicscontextsetcompositeoperation receives both compositeoperator and blendmode. it can causes a developer to be confused. for example, fullcanvascompositeddraw restores only compositeoperator after beginlayer, although fortunately it doesn't cause any bugs because blendmode is always webblendnormal at the moment. review url bb",satisfaction,6.0
639,9664877ed8956b81feb3bd6b3b2621b5fcdb624f,Ferruh Yigit <fery@cypress.com>,Sun Jun 30 18:46:56 2013 -0700,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,"input cyttsp driver split into two modules existing code is for truetouch devices truetouch device is using same protocol, will split driver into two pieces to use common code with both drivers. functions parameter list modified, since shared code will be used by two separate drivers and these drivers are not sharing same structs, parameters updated to use common structures. yigit kroahhartman martinez canillas torokhov",satisfaction,3.0
640,f0b0b48d10a6dbc050f998f7f7b5439d1242571d,Kumar Gala <galak@kernel.crashing.org>,Wed Apr 10 16:58:28 2013 -0500,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,fix bit device tree the localbus node should be in at not xffe. also fixed the names of the localbus and pci nodes to reflect the addresses they are actually at. gala phillips gala,neutral,3.0
641,b56a7f9206efa2982140837e36aca88cfedd66bc,Olof Johansson <olof@lixom.net>,Sun Apr 14 20:49:21 2013 -0700,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,"merge tag 'msmcore.' of into from david brown patches for msm core these patches are changes to the msm timer code that will be for upcoming targets, including a generalization of the binding and preventing a missing timer interrupt. tag 'msmcore.' of arm msm wait for timer clear to complete arm msm rework timer binding to be more general johansson",frustration,2.0
642,32b0253803bf8e384a37a70f2dfffb2056e7d087,Josef Bacik <jbacik@fusionio.com>,Wed Apr 24 16:38:50 2013 -0400,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,"btrfs don't panic if we're trying to drop too many refs this is just obnoxious. just print a message, abort the transaction, and return an error. thanks, bacik",satisfaction,3.0
643,6d5aeb54b157116430e4857119165dd427facdf9,Lidza Louina <lidza.louina@gmail.com>,Sun May 12 20:42:22 2013 -0400,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,"fixes whitespace around commas in sme_userspace.c. fixes whitepace around commas. caught by checkpatch.pl. error space required after that ',' louina kroahhartman",neutral,4.0
644,3c5886d145a1bd46601313c735de214bc874aebc,Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>,Wed May 8 23:15:50 2013 +0000,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,shpfc ra add ether pin groups add ether magic pin groups to ra pfc driver. shtylyov pinchart walleij horman,neutral,4.0
645,4026099a3118a1e038c48f3f85203a674938025b,Sebastian Ott <sebott@linux.vnet.ibm.com>,Tue Jun 18 17:38:31 2013 +0200,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,support debug_dma_mapping_error without this patch drivers will get blamed for not calling dma_mapping_error even if they do. ott schaefer schwidefsky,satisfaction,4.0
646,864bfb25b57a6766ea689befa5cf09a4353281ce,Jiri Kosina <jkosina@suse.cz>,Tue May 28 10:09:22 2013 +0200,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,merge branch 'master' into fornext merge with kthread document ways of reducing os jitter due to percpu kthreads to be able to apply fixup patch on top of it. kosina,neutral,4.0
647,6e6ceaedb5901c7ebd23e5222726dab5362938bd,Sebastian Siewior <bigeasy@linutronix.de>,Wed Apr 24 08:48:24 2013 +0000,torvalds/linux,4589,2013Q2,4589 torvalds/linux 2013Q2,"optimize the for_each_slave_macro text data bss dec hex filename da cpsw.o.before cd cpsw.o.after bytes smaller, for each invocation. andrzej siewior v n s. miller",satisfaction,3.0
648,367294be7c257dd4d8d8f0e296aa9824eae18568,Vandana Kannan <vandana.kannan@intel.com>,Tue Nov 4 17:06:46 2014 +0000,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"add read latency to wm level according to the updated bspec, the mailbox response data is not currently accounting for memory read latency. add microseconds to the result for each level. this patch adds to latency of level for all cases and for all other levels only if latency . slightly rework the patch and add a big comment damien rebase on top of the renames of the memory latency defines kannan lespiau syrjälä satheeshakrishna cc lespiau, damien cc m, satheeshakrishna vetter",frustration,1.0
649,733e625139fe455b4d910ac63c18c90f7cbe2d6f,Mika Westerberg <mika.westerberg@linux.intel.com>,Tue Oct 21 13:33:56 2014 +0200,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,acpi allow drivers to match using device tree compatible property we have lots of existing device tree enabled drivers and allocating separate _hid for each is not feasible. instead we allocate special _hid that means that the match should be done using device tree compatible property using driver's .of_match_table instead if the driver is missing .acpi_match_table. if there is a need to distinguish from where the device is enumerated driver can check devof_node or acpi_compationdev. westerberg likely j. wysocki,satisfaction,5.0
650,1f7870dd8729c64b8472b42440811e7ff94d16a4,Paul E. McKenney <paulmck@kernel.org>,Sun Oct 19 12:05:22 2014 -0700,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,documentation add atomic_long_t to atomic_ops.txt e. mckenney kumar,caution,3.0
651,0db5dc943e7649bbfbc2d2de8f5cb778b05ea5bd,Lars-Peter Clausen <lars@metafoo.de>,Thu Nov 20 21:21:55 2014 +0100,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"asoc replace wcodec snd_soc_dapm_to_codecwdapm the codec field of the snd_soc_widget struct is eventually going to be removed, use snd_soc_dapm_to_codecwdapm instead. clausen brown",satisfaction,2.0
652,9cce02ec7146248862ba63a41bf8eb32d9e4fb63,Ley Foon Tan <lftan@altera.com>,Thu Nov 6 15:20:15 2014 +0800,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,documentation add documentation for architecture foon tan,neutral,3.0
653,ab86bd600400357ffa0dfdb1797f587476d01352,James Hogan <jhogan@kernel.org>,Tue Dec 2 15:48:24 2014 +0000,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"mips kvm expose msa registers add kvm register numbers for the mips simd architecture msa registers, and implement access to them with the kvm_get_one_reg kvm_set_one_reg ioctls when the msa capability is enabled exposed in a later patch and present in the guest according to its .msap bit. the msa vector registers use the same register numbers as the fpu registers except with a different size . since msa depends on status these registers are inaccessible when status these registers are returned as a single native endian value, rather than least significant half first with each bit half native endian as the kernel uses internally. hogan cc paolo bonzini cc paul burton cc ralf baechle cc gleb natapov cc jonathan corbet cc cc cc cc",satisfaction,3.0
654,f42bb57c61fd21fb7e30a2b99dbeb1671666bc47,Anish Bhatt <anish@chelsio.com>,Tue Oct 14 20:07:23 2014 -0700,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"fix wunusedfunction warning a bunch of related code is left on by default. while this causes no compilation issues, there is no need to have this enabled by default. guard with an check, which also takes care of a wunusedfunction warning. bhatt s. miller",satisfaction,3.0
655,5df1415aee48e1d20328238d3077e39793e83232,Andy Shevchenko <andriy.shevchenko@linux.intel.com>,Mon Oct 13 15:55:27 2014 -0700,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"remove unused print_ssid in kernel we have pe specifier to print an escaped buffer. all users now switched to that approach. this fixes a bug as well. the current implementation wrongly prints octal numbers only two first digits are used in case when are required and the rest of the string ends up cut off. additionally by default the f, v, a, and e are escaped to their alphabetic representation. it's safe to do since it is currently used for messaging only. shevchenko cc john w . linville cc johannes berg cc greg kroahhartman cc joe perches morton torvalds",caution,4.0
656,65b5732d241b8b39e07653794eefffd0d8028cbb,Doug Anderson <dianders@chromium.org>,Wed Oct 8 00:33:47 2014 -0700,torvalds/linux,4589,2014Q4,4589 torvalds/linux 2014Q4,"clocksource arch_timer allow the device tree to specify uninitialized timer registers some bit systems are architected like this the firmware doesn't know and doesn't care about hypervisor mode and we don't want to add the complexity of hypervisor there. the firmware isn't involved in smp bringup or resume. the arch timer come up with an uninitialized offset cntvoff between the virtual and physical counters. each core gets a different random offset. the device boots in secure svc mode. nothing has touched the reset value of cnthctl. or cnthctl. both default to at reset on systems like the above, it doesn't make sense to use the virtual counter. there's nobody managing the offset and each time a core goes down and comes back up it will get reinitialized to some other random value. this adds an optional property which can inform the kernel of this situation, and firmware is free to remove the property if it is going to initialize the cntvoff registers when each cpu comes out of reset. currently, the best course of action in this case is to use the physical timer, which is why it is important that cnthctl hasn't been changed from its reset value and it's a reasonable assumption given that the firmware has never entered hyp mode. note that it's been said that on systems the firmware and kernel really can't be architected as described above. that means using the physical timer like this really only makes sense for systems. anderson rao rutland lezcano marinas johansson",frustration,2.0
657,4f6d45d7db7e4622a74b9fd8c99b13c68129d70d,Lijun Pan <LIJUN.PAN@FREESCALE.COM>,Thu Oct 24 16:11:13 2013 -0500,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,include power isa properties and device trees do not have these properties. pan wood,caution,2.0
658,3a4462e0e2fe8f715f54147d36b5433a7ff5a85a,Hans de Goede <hdegoede@redhat.com>,Thu Nov 14 11:06:13 2013 +0100,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"uas clear cmdinfo on command queueing the scsi error handling path reuses previously queued up and erroredout cmds. if such a reused cmd had a dataphase then cmdinfo will have data_in_urb data_out_urb still set to the freeed urbs from the erroredout cmd, and they will get freeed a second time when the error handling cmd completes, corrupting the kernel heap. clearing cmdinfo on command queueing fixes this, and seems like a good idea in general. de goede sharp",caution,5.0
659,40e4dc530118dbb79e270d5554ac8415588378d2,Heinz Graalfs <graalfs@linux.vnet.ibm.com>,Tue Oct 29 09:40:39 2013 +1030,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"virtio_console verify if queue is broken after virtqueue_get_buf if virtqueue_get_buf returns with a null pointer it should be verified if the virtqueue is broken, in order to avoid loop calling cpu_relax. graalfs russell",satisfaction,2.0
660,4bf08ff6f9f381fa625d65e36c3e8e57313943cf,Chao Yu <chao@kernel.org>,Mon Nov 4 10:28:33 2013 +0800,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"remove unnecessary testclearpageerror when wait pages writeback in wait_on_node_pages_writeback we will test and clear error flag for all pages in radix tree, but not necessary. so we only do this for pages belong to the specified inode. yu kim",neutral,2.0
661,d8ccba866356e5b8989ff9081df66cf300b1f834,Daniel Vetter <daniel.vetter@ffwll.ch>,Tue Dec 17 23:42:11 2013 +0100,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"grab a pages pin count for preallocate stolen but only when we indeed set up a gtt mapping. we need this since the vma also holds a pages_pin_count, on top of the unconditional pages_pin_count we grab for all stolen objects to avoid swapout. this should avoid a pages_pin_count underrun when cleaning up framebuffers objects taken over from the bios. chris mentioned in his review that this bug even predates the vma conversion. reportedby jesse barnes cc jesse barnes cc ben widawsky wilson vetter",frustration,4.0
662,cc79714fbcd57607f3df7780374181c0637a0829,Chris Wilson <chris@chris-wilson.co.uk>,Tue Dec 31 15:50:30 2013 +0000,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"avoid dereference past end of page array in gen_ppgtt_insert_entries bug unable to handle kernel paging request at ip gen_ppgtt_insert_entries pgd pud dfe pmd dec pte oops smp debug_pagealloc cpu pid comm gem_concurrent_ not tainted hardware name intel corporation client lake , bios task ti task.ti rip gen_ppgtt_insert_entries rsp eflags rax rbx rcx rdx rsi rdi rbp fs ffd cs ds es d e stack call trace ppgtt_bind_vma i_gem_object_pin i_gem_execbuffer_reserve_vma.isra. i_gem_execbuffer_reserve i_gem_do_execbuffer.isra. ? i_gem_execbuffer i_gem_execbuffer drm_ioctl ? cpuacct_account_field ? cpuacct_account_field do_vfs_ioctl ? vtime_account_user ? context_tracking_user_exit ? trace_hardirqs_on sys_ioctl tracesys code bc ff bc ff rip gen_ppgtt_insert_entries rsp this bug dates back to the original introduction of the gen_ppgtt_insert_entries wilson cc daniel vetter cc ben widawsky widawsky vetter",neutral,3.0
663,94a12b15e4c575e0aa0ba5e24a4f213163a823d0,Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>,Sun Dec 8 02:59:18 2013 +0300,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"sh_eth add ra support add support for yet another arm member of the rcar family, rcar , also known as ra it will share the code and data with previously added ra. despite the ether devices in these socs are indistinguishable at least from the driver's point of view, we do introduce a new platform device id raether unlike the wildcard id used for socs, due to newly established policy for the renesas socs. shtylyov s. miller",neutral,1.0
664,f2783f0e9cac215df5b7ee0a903adfeabde90b24,Mark Brown <broonie@linaro.org>,Mon Oct 28 13:01:33 2013 -0700,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,merge remotetracking branch 'field' into regmapnext,frustration,3.0
665,456ae7ebfd2f38103f620294a7f3b92539baca04,Kelley Nielsen <kelleynnn@gmail.com>,Tue Oct 15 14:06:41 2013 -0700,torvalds/linux,4589,2013Q4,4589 torvalds/linux 2013Q4,"staging change write_block_fifo header to style in ft_download.c as per coding style, comments are not allowed removed some redundant information and empty space left the parameter descriptions because the parameter list is long and cryptic looking nielsen triplett kroahhartman",neutral,3.0
666,d00289450779a0b23452e45f383d1b4a0e42fa9e,Walt Feasel <waltfeasel@gmail.com>,Mon Nov 21 10:14:47 2016 -0500,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,staging speakup speakup_txprt.c spaces preferred around operator make suggested checkpatch modification for check spaces preferred around that '' feasel kroahhartman,satisfaction,2.0
667,83104d449e8c44e4870a795132437257cdf80006,Darrick J. Wong <darrick.wong@oracle.com>,Mon Oct 3 09:11:46 2016 -0700,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,"xfs garbage collect old cowextsz reservations trim cow reservations made on behalf of a cowextsz hint if they get too old or we run low on quota, so long as we don't have dirty data awaiting writeback or directio operations in progress. garbage collection of the cowextsize extents are kept separate from prealloc extent reaping because setting the cow prealloc lifetime to a much higher value than the regular prealloc extent lifetime has been useful for combatting cow fragmentation on vm hosts where the vms experience bursty write behaviors and we can keep the utilization ratios low enough that we don't start to run out of space. iows, it benefits us to keep the cow fork reservations around for as long as we can unless we run out of blocks or hit inode reclaim. j. wong hellwig",caution,2.0
668,122231445f2517de1d3dd30acd28801b66d72cab,Sebastian Andrzej Siewior <bigeasy@linutronix.de>,Thu Nov 3 15:50:10 2016 +0100,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,inject convert to hotplug state machine install the callbacks via the state machine and let the core invoke the callbacks on the already online cpus. the removal of the files happens now in the prepare down stage as there is no reason to keep them around until the cpu has actually died. andrzej siewior gleixner cc fenghua yu cc tony luck cc cc link gleixner,neutral,3.0
669,72e8072a1d5640a60bcf7f2b8d11336fe9f4e256,Ivan Safonov <insafonov@gmail.com>,Sat Oct 8 01:01:03 2016 +0700,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,remove free_recv_buf_queue_cnt member of recv_priv structure this variable does not used. safonov kroahhartman,neutral,3.0
670,8432bdb2905713cb3ef5cbe4a72630fa575565ad,Sagi Grimberg <sagi@grimberg.me>,Mon Nov 28 01:47:40 2016 +0200,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,nvme make controller state visible via sysfs easier for debugging and testing state machine transitions. grimberg thumshirn hellwig axboe,neutral,4.0
671,354872712e2008eb1307b68e4940587f2c0762d5,Vijai Kumar K <vijaikumar.kanagarajan@gmail.com>,Sun Nov 20 12:51:40 2016 -0800,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,staging fix coding style warnings on block comments fix checkpatch.pl warnings related to block comments in rf.c file. kumar k kroahhartman,satisfaction,3.0
672,401304cc0d508de2e366e693fedbe52b18aef0a8,James Smart <james.smart@broadcom.com>,Thu Oct 13 15:06:14 2016 -0700,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,scsi lpfc fix lost target in pttopt connect fix lost target in pttopt connect change reject code to something that allows a retry kennedy smart thumshirn reinecke k. petersen,neutral,4.0
673,41c43fbee68f4f9a2a9675d83bca91c77862d7f0,Asbjørn Sloth Tønnesen <asbjorn@asbjorn.st>,Sun Dec 11 00:18:57 2016 +0000,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,"net export debug flags to uapi move the ltp_msg_ definitions to uapi, as it is part of the netlink api. sloth toennesen s. miller",satisfaction,4.0
674,fef51ecd1056b5e090c9fb73e0833bd751389572,Jin Yao <yao.jin@linux.intel.com>,Mon Oct 31 09:19:53 2016 +0800,torvalds/linux,4589,2016Q4,4589 torvalds/linux 2016Q4,"perf report show branch info in callchain entry for browser mode if the branch is predicted then the predicted is hidden. similarly, if there is no branch tsx abort, the abort is hidden. there is only cycles shown cycle is supported on skylake platform, older platform would be . if no iterations, the iterations is hidden. jin kleen cc jiri olsa cc kan liang cc cc yao jin link carvalho de melo",frustration,5.0
675,6f54c361329dbb67dac9de174e938992651d12d7,Takashi Iwai <tiwai@suse.de>,Tue Jan 15 14:44:41 2013 +0100,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"alsa work around alsactl restore errors when alsactl restore is performed on hdmi codecs, it tries to restore the channel map value since the channel map controls are writable. but hdmi_chmap_ctl_put returns ebadfd when no pcm stream is assigned yet, and this results in an error message from alsactl. although the error is harmless, it's certainly ugly and can be regarded as a regression. as a workaround, this patch changes the return code in such a case to be zero for making others happy. a slight excuse is when the chmap is changed through the proper alsalib api, the pcm status is checked there anyway, so we don't have to be too strict in the kernel side. cc iwai",satisfaction,2.0
676,b2fb4f54ecd47c42413d54b4666b06cf93c05abf,Eric Dumazet <edumazet@google.com>,Wed Mar 6 12:58:01 2013 +0000,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,tcp uninline tcp_prequeue tcp_prequeue became too big to be inlined. dumazet s. miller,neutral,2.0
677,f77668dc25b27270fe589031b22c432c3462b1d8,Daniel Borkmann <daniel@iogearbox.net>,Tue Mar 19 06:39:30 2013 +0000,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"net flow_dissector add __skb_get_poff to get a start offset to payload __skb_get_poff returns the offset to the payload as far as it could be dissected. the main user is currently bpf, so that we can dynamically truncate packets without needing to push actual payload to the user space and instead can analyze headers only. suggestedby eric dumazet borkmann dumazet s. miller",neutral,4.0
678,08433eff2d041b263c68306f6a6ccb4e1f75e196,YOSHIFUJI Hideaki / 吉藤英明 <yoshfuji@linux-ipv6.org>,Thu Jan 24 00:44:23 2013 +0000,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"net neigh optimize neighbor entry size calculation. when allocating memory for neighbour cache entry, if tblentry_size is not set, we always calculate sizeofstruct neighbour tblkey_len, which is common in the same table. with this change, set tblentry_size during the table initialization phase, if it was not set, and use it in neigh_alloc and neighbour_priv. this change also allow us to have both of protocol private data and device priate data at tha same time. note that the only user of prototcol private is decnet and the only user of device private is atm clip. since those are exclusive, we have not been facing issues here. hideaki s. miller",frustration,3.0
679,54d5b7d079dffa74597715a892473b474babd5b5,Lai Jiangshan <laijs@cn.fujitsu.com>,Thu Feb 7 13:14:20 2013 -0800,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"workqueue make get_work_pool_id cheaper get_work_pool_id currently first obtains pool using get_work_pool and then return poolid. for an offqueue work item, this involves obtaining pool id from workerdata, performing idr_find to find the matching pool and then returning its poolid which of course is the same as the one which went into idr_find. just open code work_struct_cwq case and directly return pool id from workdata. tj the original patch dropped onqueue work item handling and renamed the function to offq_work_pool_id. there isn't much benefit in doing so. handling it only requires a single if and we need at least bug_on, which is also a branch, even if we drop onqueue handling. open code work_struct_cwq case and keep the function in line with get_work_pool. rewrote the description. jiangshan heo",caution,2.0
680,f0cb40e5c384cf2cc4b2b932b61474544ac1fc9a,Jayachandran C <c.jayachandran@gmail.com>,Mon Jan 14 15:11:53 2013 +0000,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,mips netlogic add to fmn config add support for cpus to the fast message network fmn configuration. c patchwork crispin,frustration,3.0
681,7be56a8f57b57cca1651fb97886e20246c168e25,Denis Ciocca <denis.ciocca@gmail.com>,Fri Jan 25 23:44:00 2013 +0000,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"add stmicroelectronics gyroscopes driver this patch adds a generic gyroscope driver for stmicroelectronics gyroscopes, currently it supports lgd, , lgd, lgdh, , lgis, . ciocca clausen cameron",frustration,2.0
682,c4ee22a3708d54d8fb5ee8a23ca08e74abcaedfd,Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>,Thu Mar 14 13:52:23 2013 -0500,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,ipr fix addition of abort command to hrrq free queue the abort command issued by ipr_cancel_op is being added to the wrong hrrq free queue after the command returns. fix it by using the hrrq pointer in the ipr command struct itself. sacilotto de souza xiong king bottomley,neutral,3.0
683,38a46c2128ade2a0c6ee4438297180b09a01c309,Mauro Carvalho Chehab <mchehab@kernel.org>,Fri Mar 29 09:43:14 2013 -0300,torvalds/linux,4589,2013Q1,4589 torvalds/linux 2013Q1,"radio vidioc_s now uses a const parameter vidioc_s_tuner, vidioc_s_frequency and vidioc_s_register now uses a constant argument. so, the driver reports warnings . warning initialization from incompatible pointer type . warning near initialization for 'si_ioctl_ops.vidioc_s_tuner' . warning initialization from incompatible pointer type . warning near initialization for 'si_ioctl_ops.vidioc_s_frequency' . warning initialization from incompatible pointer type . warning near initialization for 'si_ioctl_ops.vidioc_s_register' this is due to a soft merge conflict, as both this driver and the const patches were applied for the same kernel version. cc hans verkuil cc andrey smirnov carvalho chehab",neutral,3.0
684,d74021d947b21f6a0f14bf9364293415c2aa7f9f,yosin <yosin@chromium.org>,Thu Jan 21 18:28:43 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"introduce frameselectionupdateifneeded to update selection positions this patch introduces frameselectionupdateifneeded to canonicalize selection positions to with current layout and style, since we assume positions in selection point visible position. i tried to implement automatic update in frameselectionselection, however lots of tests depend current broken behavior. i'll fix these broken test incrementally to add call of frameselectionupdateifneeded in call path. once i fix all tests, i'll make frameselectionselection to return always return valid selection. this patch is a preparation of automatic selection updating and fix an issue for execcommands. insertorderedlistvisibilityhiddencrash.html review url cr",satisfaction,4.0
685,f72852358bb018390318b4b95775294f0a429eb8,sebsg <sebsg@chromium.org>,Thu Mar 17 13:52:16 2016 -0700,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,some text state fields have a maxlength of two. this can cause problem for some states. for example new york is filled as ne nebraska instead of ny. review url cr,neutral,3.0
686,ac42431092185ea03e152a7cd6fd4b9498c44db8,paulirish <paulirish@chromium.org>,Mon Mar 14 18:26:56 2016 -0700,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,devtools remove vendorprefixed css rule audit. review url cr,satisfaction,5.0
687,a1bc985299964f1fef449b39a2d7a8b22ce101aa,maxbogue <maxbogue@chromium.org>,Tue Feb 23 11:24:23 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"uss load data for pending commits on startup. this change also includes fairly massive changes to how the smtp test file works. specifically, there is now a simplestore for data and metadata, and the tests have been modified to assert against the stores. this was done to allow for more intuitive, flexible testing. other minor changes cleaned up some unnecessary functions in smtp and modeltypeentity. added helper functions for accessing modeltypeentity objects. removed fakemetadatachangelist. simple is sufficient for testing. switch to using map v over map.insertmake_pairk, v as the former looks cleaner and does not silently fail if a value for k already exists in the map. review url cr",caution,3.0
688,4292294e470b3d3bc88830d6195b13f65901f044,leviw <leviw@chromium.org>,Sun Jan 31 16:24:05 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"still riding the layoutunit constructor train to explicittown implicit layoutunit constructors are bad. i have a very particular set of skills. implicit layoutunit constructors, i will find you and i will correct you. also added a todo about line heights being layoutunits. review url cr",frustration,4.0
689,62acb0672da4163297a36dfaeb047ac740af5b83,oshima <oshima@chromium.org>,Fri Feb 5 11:46:50 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"enable usezoomfordsf on chromeos devices. , review url cr",frustration,5.0
690,4fc4066e585e2642e2876b1a928cbe0e9c83c2c4,jbroman <jbroman@chromium.org>,Thu Mar 31 22:14:35 2016 -0700,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"implement webkitboxreflect as a filter. this separates the notion of having the 'filter' property from having a filterinducing property i.e. a css property which is implemented as a filter operation. then webkitboxreflect is made to be such a property behind a runtime flag, so that specifying it adds an additional filter operation which draws a reflection behind the content. this allows the filter code to be substantially reused, rather than requiring separate logic to handle reflection, as exists in the current implementation. this will likely cause minor rendering changes, but it also fixes some bugs, simplifies the code at least, once the legacy code can be removed, and rationalizes the definition of this property. notably not implemented in this patch is support for the mask image parameter this will be added in a subsequent patch. review url cr",frustration,5.0
691,e8cb0a5872250fc3845c0fbe7e49c88888301c71,skia-deps-roller <skia-deps-roller@chromium.org>,Tue Mar 8 18:57:33 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,roll skia afc commit. git log afc nomerges format'ad ae s' kulshin initialize the font fallback when the direct write font manager is created. . google.com review url cr,frustration,3.0
692,5a9e2b34d01056dfdc1a60ce418f5e9f884c9967,gogerald <gogerald@chromium.org>,Thu Feb 4 11:06:01 2016 -0800,chromium/chromium,4568,2016Q1,4568 chromium/chromium 2016Q1,"implementation of newly designed sign in related histograms for android. this cl is dedicated to implement newly designed sign in related histograms signin.signinstartedaccesspoint, signin.signincompletedaccesspoint, signin.signinreason for android. please refer for details. review url cr",neutral,4.0
693,de2b8b8bbb2f5ad713c7eecd88f78666a54dc438,Ben Skeggs <bskeggs@redhat.com>,Thu Oct 11 22:45:15 2012 -0400,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"bios attempt to fetch entire acpi rom image in one shot fdo the _rom method silently truncates size to , perform a checksum test and fall back to slow _rom access on failure. skeggs",frustration,4.0
694,a052b42b0e618f34ca891f00b4e8b8ac0e4b80c0,Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>,Tue Oct 16 20:09:36 2012 +0800,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"kvm mmu move prefetch_invalid_gpte out of pagaing_tmp.h the function does not depend on guest mmu mode, move it out from paging_tmpl.h guangrong kivity",caution,6.0
695,ef34724df277f3a43a7b29d03be69f4c84fed5a8,H Hartley Sweeten <hartleys@visionengravers.com>,Wed Oct 31 16:56:11 2012 -0700,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"staging comedi addidata absorb pci_card_alloc into i_addi_attach the function pci_card_alloc enables the pci device by calling comedi_pci_enable and then optionally calls pci_set_master to enable bus mastering for dma. absorb this code directly into i_addi_attach as is more typical for comedi pci drivers. also, remove the now unused i_master parameter from ptr_select_and_alloc_pci_card. hartley sweeten cc ian abbott kroahhartman",frustration,2.0
696,465b1678ebdf5dbd9bc0502358ae472343351c2c,Masanari Iida <standby24x7@gmail.com>,Fri Nov 9 05:02:49 2012 +0000,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,isdn fix typo in correct spelling typo in printk within iida s. miller,neutral,4.0
697,1323024fd3296537dd34da70fe70b4df12a308ec,Mauro Carvalho Chehab <mchehab@kernel.org>,Fri Nov 23 13:48:39 2012 -0200,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"siano fix build with allmodconfig as reported by stephen after merging the dvb tree, today's linuxnext build x_ allmodconfig failed like this error sms_ir_exit undefined! error sms_ir_event undefined! error sms_ir_init undefined! the smsir file should be part of the smsmdtv core, if rc is defined. fix it. reportedby stephen rothwell carvalho chehab",caution,3.0
698,b66c5984017533316fd1951770302649baf1aa33,Kees Cook <keescook@chromium.org>,Thu Dec 20 15:05:16 2012 -0800,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"exec do not leave bprminterp on stack if a series of scripts are executed, each triggering module loading via unprintable bytes in the script header, kernel stack contents can leak into the command line. normally execution of binfmt_script and binfmt_misc happens recursively. however, when modules are enabled, and unprintable bytes exist in the bprmbuf, execution will restart after attempting to load matching binfmt modules. unfortunately, the logic in binfmt_script and binfmt_misc does not expect to get restarted. they leave bprminterp pointing to their local stack. this means on restart bprminterp is left pointing into unused stack memory which can then be copied into the userspace argv areas. after additional study, it seems that both recursion and restart remains the desirable way to handle exec with scripts, misc, and modules. as such, we need to protect the changes to interp. this changes the logic to require allocation for any changes to the bprminterp. to avoid adding a new kmalloc to every exec, the default value is left asis. only when passing through binfmt_script or binfmt_misc does an allocation take place. for a proof of concept, see dotest.sh from cook cc halfdog cc p j p cc alexander viro cc morton torvalds",neutral,7.0
699,145e2879560e3e99ae46e26f510e3b4a26cc03d4,Bill Pemberton <wfp5p@virginia.edu>,Fri Dec 7 09:26:23 2012 -0500,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"asoc cirrus remove __dev attributes config_hotplug is going away as an option. as result the __dev markings will be going away. remove use of __devinit, __devexit_p, __devinitdata, __devinitconst, and __devexit. pemberton brown",caution,3.0
700,da6958c873ecd846d71fafbfe0f6168bb9c2c99e,Dave Chinner <dchinner@redhat.com>,Mon Nov 12 22:54:18 2012 +1100,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,xfs add verifiers to data readahead. chinner white myers,satisfaction,3.0
701,6d569502b49849ae392a4453bfe3a2a973cc95d2,YAMANE Toshiaki <yamanetoshi@gmail.com>,Sun Nov 4 16:40:22 2012 -0300,torvalds/linux,4589,2012Q4,4589 torvalds/linux 2012Q4,"use dev_ printks in driver.c fixed below checkpatch warning. warning prefer netdev_infonetdev, then dev_infodev, then pr_info to printkkern_info toshiaki carvalho chehab",frustration,5.0
702,3aba952706c2f1e5f05987be0cda716ecf2b5d55,Mark Brown <broonie@linaro.org>,Sun Sep 1 13:50:14 2013 +0100,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,merge remotetracking branch '' into regulatornext,frustration,3.0
703,4e8764d95d439d03015643e078cd0e737e23bb87,Jingoo Han <jg1.han@samsung.com>,Mon Aug 19 16:40:15 2013 +0900,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,vme vme_tsi.c add missing __iomem annotation added missing __iomem annotation in order to fix the following sparse warnings . warning incorrect type in initializer different address spaces . expected void addr . got void . warning incorrect type in argument different address spaces . expected void const volatile addr . got void addr . warning incorrect type in argument different address spaces . expected void const volatile addr . got void . warning incorrect type in argument different address spaces . expected void const volatile addr . got void . warning incorrect type in argument different address spaces . expected void const volatile . got void . warning incorrect type in argument different address spaces . expected void const volatile addr . got void . warning incorrect type in argument different address spaces . expected void const volatile addr . got void . warning incorrect type in initializer different address spaces . expected void addr . got void . warning incorrect type in argument different address spaces . expected void volatile addr . got void addr . warning incorrect type in argument different address spaces . expected void volatile addr . got void . warning incorrect type in argument different address spaces . expected void volatile addr . got void . warning incorrect type in argument different address spaces . expected void volatile . got void . warning incorrect type in argument different address spaces . expected void volatile addr . got void . warning incorrect type in argument different address spaces . expected void volatile addr . got void han kroahhartman,frustration,4.0
704,559835ea7292e2f09304d81eda16f4209433245e,Pravin B Shelar <pshelar@nicira.com>,Tue Sep 24 10:25:40 2013 -0700,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,"vxlan use rcu apis to access sk_user_data. use of rcu api makes vxlan code easier to understand. it also fixes bug due to missing access_once on sk_user_data dereference. in rare case without access_once compiler might omit vs on sk_user_data dereference. compiler can use vs as alias for sksk_user_data, resulting in multiple sk_user_data dereference in rcu read context which could change. cc jesse gross b shelar s. miller",neutral,4.0
705,b74aec1a5f6cb559bc9fa38190afa59ddf746dda,Maxime Ripard <mripard@kernel.org>,Sat Aug 3 16:07:36 2013 +0200,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,arm dt fix soc bus base address there was a typo in the base address used for the soc node in the device tree. fix it with the proper base address. ripard,neutral,5.0
706,15d79747b57159fc1e063f1404e4f379cb5be026,Himanshu Madhani <himanshu.madhani@qlogic.com>,Fri Jul 19 16:56:31 2013 -0400,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,qlcnic fix ethtool display for adapter. o commit bdcacabfdffae qlcnic fix ethtool supported port status for introduced regression for display of link status for adapter while refactoring port status display. this patch is to fix the link status display for adapter. madhani chakraborty s. miller,caution,1.0
707,1b56749e541ad59068582f2a28297843e243b856,Keith Busch <kbusch@kernel.org>,Thu Jul 18 12:13:51 2013 -0600,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,nvme fix checkpatch issues busch,frustration,1.0
708,9808f79327806e00e681c18ac84e8abfa4373dbf,Magnus Damm <damm@opensource.se>,Thu Aug 1 04:01:55 2013 +0900,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,arm shmobile use default init_time on bockw leave init_time set to null to use the default arm behaviour. damm horman,neutral,4.0
709,da61efcfedabf16e994d67f983588683f3d59837,Jiang Liu <liuj97@gmail.com>,Wed Jul 3 15:04:12 2013 -0700,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,prepare for removing num_physpages and simplify mem_init prepare for removing num_physpages and simplify mem_init. liu cc paul mundt cc wen congyang cc tang chen morton torvalds,frustration,4.0
710,5b512beb0f18024e32e228976e3690d349b05b6a,Heiko Carstens <hca@linux.ibm.com>,Fri Sep 6 18:52:31 2013 +0200,torvalds/linux,4589,2013Q3,4589 torvalds/linux 2013Q3,signal add couple of __force annotations add __force annotations to get rid of a couple of sparse warnings . warning cast removes address space of expression carstens,satisfaction,1.0
711,46a1d51261bc4d9cd35b4e41a9b623687c0b4b8c,Luciano Coelho <coelho@ti.com>,Thu May 10 12:13:12 2012 +0300,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,add some boot operations and hwspecific configurations implement the boot operation. add a specific configuration structure namely to configure the mac and phy parameters. the default hw configuration matches the dvp board. coelho nemtsov,frustration,2.0
712,036cbfeb6e0595d7b85f14dd66e38adfa408e2ef,Sven Eckelmann <sven@narfation.org>,Sun Jun 3 22:19:09 2012 +0200,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,batmanadv prefix sysfs defines with batadv_ reportedby martin hundebøll eckelmann,frustration,3.0
713,fc065a09524991a5138835c6499e895d6be14049,Ido Shayevitz <idos@codeaurora.org>,Mon Jun 4 13:35:20 2012 +0300,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,"usb gadget fsl_qe_udc remove unneeded condition the removed condition is always true, since the endpoint descriptor is set prior to calling the enable endpoint. shayevitz balbi",caution,4.0
714,4d6e0fa1a593b2d7c4b468cb5ac52c29fe20e716,Kent Yoder <key@linux.vnet.ibm.com>,Thu Apr 12 05:04:01 2012 +0000,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,add new hvcall constants to support pfo the platform facilities option pfo adds several new h_calls and more return codes. jennings yoder herrenschmidt,caution,2.0
715,c50f2af8e1a33e95e4d3b7af9db05ed9096c6072,Bill Pemberton <wfp5p@virginia.edu>,Tue Jun 19 10:34:07 2012 -0400,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,usb serial remove unused serial_priv variable qt_open and qt_close both set a serial_priv variable but never used it. remove the variable from the functions. pemberton kroahhartman,satisfaction,3.0
716,95fea2f1d90626498e2495a81fe5aab7fba9fb3f,Asai Thambi S P <asamymuthupa@micron.com>,Mon Apr 9 08:35:39 2012 +0200,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,"dump tagmap on failure dump tagmap on failure, instead of individual tags. thambi s p axboe",neutral,4.0
717,c65390f4dd49755863f6d772ec538ee4757c08d7,Al Viro <viro@zeniv.linux.org.uk>,Mon Apr 9 01:36:28 2012 -0400,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,"fix breakage in mtdchar_open, sanitize failure exits simple_release_fs should be only done on failure there. viro",neutral,3.0
718,6a8576360a77be2c39ef2e151b5a60b214f67fd6,Ravishankar Karkala Mallikarjunayya <ravishankarkm32@gmail.com>,Tue May 1 11:55:07 2012 +0530,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,staging comedi fix printk issue in pcmmio.c this is a patch to the pcmmio.c file that fixes up a printk warning found by the checkpatch.pl tool. karkala mallikarjunayya kroahhartman,neutral,4.0
719,f522ae363d5f20de172ea6f9973ba4cc44801f2b,Gustavo Padovan <gustavo@padovan.org>,Wed May 9 18:28:00 2012 -0300,torvalds/linux,4589,2012Q2,4589 torvalds/linux 2012Q2,bluetooth improve readability of lcap_seq_list code removes one indentation level. padovan hedberg,neutral,4.0
720,a9125266d3fc89ff0bfd4c3a05bf2f31ffaeff1f,jamesr <jamesr@chromium.org>,Tue Nov 18 17:35:28 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,update mojo sdk to rev efaaebcfdbfcaeeca includes updates to ipc_channel_mojo.cc for mojoembedder api changes and updates to use mojobinding in and . review url cr,neutral,5.0
721,f3076af7e0dfc078e65039a0e6faebf9a7628a63,dcheng <dcheng@chromium.org>,Tue Oct 21 11:02:42 2014 -0700,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,revert of standardize usage of final in ipc patchset of reason for revert addressing reviewer comments in a followup patch. original issue's description standardize usage of final in ipc this patch was automatically generated by applying clang fixit hints generated by the plugin to the source tree. chromium.org committed cr,neutral,3.0
722,23d4272f69e1013bdb78cc4a2ebe21145d8b4235,sebmarchand <sebmarchand@chromium.org>,Wed Dec 17 12:36:31 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,"remove the syzyasan allocation filter file from the instrument.exe command line. our binaries crash when the allocation filter list is empty. a fix is coming on the syzygy side, but in the meantime we should remove this from here. bug url cr",satisfaction,5.0
723,ee4e35f0f5be89183ba008a57aff0fe9325f88cb,leviw@chromium.org <leviw@chromium.org>,Thu Oct 23 21:10:12 2014 +0000,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,one more rebaseline after chromium chromium.org review url bb,neutral,3.0
724,615e052e2d92b169da744d28a20ae3d1d21b1d9d,rdevlin.cronin <rdevlin.cronin@chromium.org>,Mon Dec 8 12:09:27 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,"add logic for adjusting actions when some are popped out when toolbar actions want to run, they can pop themselves out of the new overflow menu. unfortunately, this makes adjusting the of the toolbar difficult. add logic to handle these cases more gracefully. review url cr",neutral,2.0
725,79a0c113b7fb951398dddd31a8ec29cdaa283663,penghuang <penghuang@chromium.org>,Tue Nov 18 14:42:51 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,gpu add const modifier to two members of . review url cr,frustration,2.0
726,39caad968f9b43d7b24d6c2d75596161a951de68,a-v-y <a-v-y@yandex-team.ru>,Wed Oct 8 22:32:27 2014 -0700,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,"fixed bug with notification getting stucked on screen. this fixes a bug with notifications getting stucked on screen while hovering with mouse old notifications popups and new arrived popups. source of the problem is popup animation getting stopped, rather when finished. chromium.org, for reproduction details. review url cr",frustration,2.0
727,9aa366c235d91e510a5da1b6cbff03c94b968e87,blink-deps-roller <blink-deps-roller@chromium.org>,Sat Dec 13 05:56:09 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,roll webkit svn summary of changes available at tbr review url cr,neutral,1.0
728,ef2c7eac3c1c9de88f279d4b15f150ef17d2ae51,gunsch <gunsch@chromium.org>,Wed Nov 19 18:10:26 2014 -0800,chromium/chromium,4568,2014Q4,4568 chromium/chromium 2014Q4,"chromecast extensions to the browsercdm interface. chromium.org, review url cr",caution,3.0
729,3fd44cd40c920cb26c2697cea59442cd40cc8227,Masanari Iida <standby24x7@gmail.com>,Wed Jul 18 01:20:59 2012 +0900,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,tools perf fix typo in correct spelling typo in . iida kosina,frustration,5.0
730,3fd91fb35847a8b3287f00970efc069de16df8b4,Li RongQing <roy.qing.li@gmail.com>,Thu Sep 13 19:54:57 2012 +0000,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"recursive check rtdst.from when call rt_check_expired if dst cache dst_a copies from dst_b, and dst_b copies from dst_c, check if dst_a is expired or not, we should not end with dst_adst.from, dst_b, we should check dst_c. cc gao feng rongqing s. miller",caution,5.0
731,78c8f84302ce007aedcfa11912fd4aacf22727ab,Bjorn Helgaas <bhelgaas@google.com>,Mon Sep 24 17:24:11 2012 -0600,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,merge branch 'misc' into next,neutral,4.0
732,25918f9811eae1d657db2bccdfcb077038d9454c,Linus Torvalds <torvalds@linux-foundation.org>,Thu Jul 26 20:29:52 2012 -0700,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"merge tag 'fixesforlinus' of pull arm soc fixes from olof johansson a mixed bag of fixes, some for merge window fallout tegra, mxs, and a short series of fixes for marvell platforms that didn't make it in before tag 'fixesforlinus' of arm mxs fix compile error caused by prom_update_property change arm dt tegra trimslice enable port arm dt tegra trimslice add vbusgpio property arm add maintainer for architecture arm kirkwood replace mrvl with marvell arm orion fix driver probe error handling with respect to clk arm dove fixup initialisation arm kirkwood fix phy disable clk problems arm kirkwood ensure runit clock always ticks. arm versatile don't use platform clock for integrator ve arm tegra harmony add regulator supply name and its input supply",frustration,2.0
733,1f07b62f3205f6ed41759df2892eaf433bc051a1,Cong Wang <amwang@redhat.com>,Wed Aug 15 18:18:11 2012 +0800,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"sctp fix a compile error in sctp.h i got the following compile error in file included from ., from . .h in function sctp_dbg_objcnt_init . error parameter name omitted .h in function sctp_dbg_objcnt_exit . error parameter name omitted which is caused by commit dfbfbbafdadebadeae author eric w. biederman date mon aug sctp make the proc files per network namespace. this patch could fix it. cc david s. miller cc eric w. biederman wang s. miller",neutral,4.0
734,897b69e72054a39c1c1d99c8f334ffed6dc99ac4,Seungwon Jeon <tgih.jun@samsung.com>,Wed Sep 19 13:58:31 2012 +0800,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"mmc revert mmc dw_mmc add check for idmac configuration this reverts commit ccee add check for idmac configuration. synopsys says that only if internal dmac is not present, optional external dma interface is present. when internal dmac is present, '' value in dma_interface of hcon is reasonable. dma_interface indicates external dma interface. and idmac initialization is prohibited now. the commit should be reverted since the check for idmac is not reliable falling back to pio would provide awful performance we wouldn't expect to see instances of this block without dma support. jeon newton ball",satisfaction,2.0
735,4e872a46823c64e655d997e1e04a4b32e326aa1b,Mark Brown <broonie@opensource.wolfsonmicro.com>,Thu Aug 23 18:20:49 2012 +0100,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"asoc dapm don't force card bias level to be updated commit asoc dapm make sure all dapm contexts are updated means that any dapm context being updated will have the bias level automatically set, including the card. we can't safely do this as the card callbacks are called for each device context and so the management of the card bias is more complex. several multicomponent cards rely on this behaviour. skip updates during the asynchronous run entirely. we should really do them in the synchronous section but it's not clear which values to pick as the different dapm contexts may have different bias levels. brown",satisfaction,5.0
736,8b45a5c8a190d0ea0077928fd8e95c0752e40e41,Lars Ellenberg <lars.ellenberg@linbit.com>,Thu Sep 20 14:24:20 2012 +0200,torvalds/linux,4589,2012Q3,4589 torvalds/linux 2012Q3,"drbd a few more gfp_kernel gfp_noio this has not yet been observed, but conceivably, when using gfp_kernel allocations from drbd_md_sync, drbd_flush_after_epoch or receive_syncparam, we could trigger additional io to our own device, or an other device in a crisscross setup, and end up in a local deadlock, or potentially a distributed deadlock in a crisscross setup involving the peer blocked in a similar way waiting for us to make progress. reisner ellenberg axboe",neutral,3.0
737,18c69d7a46962952cec1aed4450363c7ad00ab13,munjal@chromium.org <munjal@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Nov 29 04:47:17 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,"make the access token fetcher class more generic takes in client id and client secret so that it can be used to refresh any access token, not just the login scoped token. review url dcbdfc",satisfaction,2.0
738,a30bf6b008bc80387d9b384736e7a1ba40b5583e,haraken@chromium.org <haraken@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sun Dec 11 18:04:50 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,"move toplevel code to generate a new changelog into a method reviewed by david kilzer. the objective is to make preparechangelog a loadable perl module for unit testing, which requires to remove toplevel code and global variables. this patch is one of the incremental refactorings for that. changelog moved toplevel code to generate a new changelog into generatenewchangelogs. generatefunctionlists findchangelogs generatenewchangelogs generatefilelist removed an unnecessary variable didchangeregressiontests. bb",frustration,2.0
739,5c9596dddc933fdbfc025d96f6fec43a28e9704b,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Nov 30 09:22:10 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,added default_cache_size define. patch by tomasz morawski on reviewed by filip pizlo. remove form code value used in code directly and replaced it by default_cache_size define. the code looks cleaner now. .cpp ewk_tile_matrix_new bb,neutral,4.0
740,4454db048f0da8f1816bacf06efef0977e1f16fb,toyoshim@chromium.org <toyoshim@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Nov 16 05:25:01 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,websocket pepper api documents minor revision review url dcbdfc,neutral,3.0
741,cae144058fea014bbdaf646402bc97a7e721ca21,achuith@chromium.org <achuith@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Oct 26 22:03:54 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,replace newcallback with callback in selectfiledialogimpl. pass. review url dcbdfc,frustration,3.0
742,24386eb05116699bf29cc81695973cfa3e5a6279,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Oct 4 21:50:04 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,update xp results for the font shaping patch. winbidineutralrunexpected.txt added. bb,neutral,2.0
743,fbb7a3506e58ce45043e26c71b3ee6f38d19fa7d,mattm@chromium.org <mattm@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Oct 20 05:32:29 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,"fix leaking certcertificate in nss createselfsigned. , bots review url dcbdfc",caution,3.0
744,d0be63774699f502698daeb829c724fecd37f41e,thestig@chromium.org <thestig@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Dec 20 23:18:04 2011 +0000,chromium/chromium,4568,2011Q4,4568 chromium/chromium 2011Q4,coverity fix a possible null dereference in renderwidget. review url dcbdfc,caution,3.0
745,0d0b72ad8c38c88b8ed1a21a612ea54b73996b24,thakis <thakis@chromium.org>,Tue Oct 13 11:26:27 2015 -0700,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,mac make device_unittests build with the . sdk. rssi gets an nsnumber parameter. it looks like this code unintentionally was passing a null pointer for this parameter instead of an object containing the value . fix this. review url cr,frustration,3.0
746,e55f3d9370ae76cc9ef23dd4eabc91d0bba7cfee,miu <miu@chromium.org>,Sat Nov 14 18:44:47 2015 -0800,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,media router sort sinks shown in device chooser ui. review url cr,neutral,3.0
747,ebf5393a68ac37b78d746d8e4d533edf278d5bc3,timav <timav@chromium.org>,Wed Nov 18 11:46:20 2015 -0800,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,"mediacodecplayer prevent requesting data in wrong states mediacodecplayer expects the demuxer response for each demuxer data request. currently it might happen that no response would come after a data request, which might result in the player lockup. this situation might happen if the data request callback arrives late at the media thread, e.g. after the player started the seek sequence. in this case the data request could come after the demuxer seek request which violates the demuxer contract. this cl checks the decoder state before calling the data request from demuxer. review url cr",neutral,2.0
748,01198da4bd7764be04c5c7f4af124652ad72e9eb,sigbjornf <sigbjornf@opera.com>,Wed Dec 30 09:37:38 2015 -0800,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,oilpan avoid heap allocation in majorgcwrappervisitor the collection of retained object roots is preferably not allocated on the oilpan heap as that risks triggering an unnecessary gc. bug url cr,satisfaction,4.0
749,ede90f0e979398d96f2eb5fb16e72abeb68a0696,rsadam <rsadam@chromium.org>,Tue Nov 3 11:55:58 2015 -0800,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,changes message when wallpaper is set by a third party. this is done by setting a css class when setbythirdparty is nonempty. review url cr,satisfaction,3.0
750,a5a5b30e1dc10d644f722483ccd3efc604bf4d3a,v8-autoroll <v8-autoroll@chromium.org>,Fri Oct 16 11:03:28 2015 -0700,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,update to version summary of changes available at please follow these instructions for 'ing issues please close rolling in case of a roll revert chromium.org review url cr,satisfaction,1.0
751,5f1a4fd1faf7a1e384bc0cbf7a19a746edcc8400,oshima <oshima@chromium.org>,Mon Nov 16 20:20:07 2015 -0800,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,cleanup remove meaningless contentsize it always return empty size. size is provided from js code. review url cr,neutral,3.0
752,0639980817fd92e1d02051cb46c99b53db5c696e,jdduke <jdduke@chromium.org>,Fri Oct 23 11:46:56 2015 -0700,chromium/chromium,4568,2015Q4,4568 chromium/chromium 2015Q4,"allow multitap selection in editable regions increase the touch tap count detection threshold to , but restrict multiclick selection for associated fake mouse events to editable regions. this allows multitap selection in editable regions, partially matching android platform behavior, while hopefully minimizing confusion when doubletapping elsewhere. review url cr",satisfaction,5.0
753,b89a7a5abaa13a3a56d37d2c6c893da6121da35e,eric@webkit.org <eric@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Jun 20 19:04:15 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,"eric seidel reviewed by adam barth. buildbots should run runbindingstests the test results were out of date, so i'm updating them. this is exactly the problem that making the buildbots run them will solve. jstestobj.cpp webcorejstestobjprototypefunctionwithdynamicframeandusergesture webcorejstestobjprototypefunctionwithdynamicframeandusergestureasad .cpp webcorecallbackwithstringlist .h .cpp webcoregetrawtemplate webcoregettemplate .cpp webcoregetrawtemplate webcoregettemplate .cpp webcoretestobjinternalwithdynamicframeandusergesturecallback webcoretestobjinternalwithdynamicframeandusergestureasadcallback webcoregetrawtemplate webcoregettemplate .cpp webcoregetrawtemplate webcoregettemplate eric seidel reviewed by adam barth. buildbots should run runbindingstests runbindingstests takes . seconds on my machine, so i expect this will not be noticeable on the bots. i also removed tigerspecific checks since tiger is no longer a supported platform for webkit. .webkit.org.cfg bb",satisfaction,4.0
754,f3e1b934c749aa166680225278e755e48cc9babd,enrica@apple.com <enrica@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Apr 8 22:39:42 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,improve lifetime management of nodes in replacenodewithspancommand. reviewed by maciej stachowiak. test boldwithdomchanges.html .cpp webcoreswapinnodepreservingattributesandchildren layouttests boldwithdomchangesexpected.txt added. boldwithdomchanges.html added. bb,neutral,3.0
755,49ecb960d685b5d73ddb3c9d490842de3c1dcd80,leandrogracia@chromium.org <leandrogracia@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jun 17 14:16:47 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,mark touchgetinfoplatformfile as flaky on mac os x. .touchgetinfoplatformfile review url dcbdfc,frustration,4.0
756,fcd7151fb91407c3d9834b3de052a6a2ef3245b9,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed May 4 21:12:08 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,adam barth reviewed by eric seidel. make the ews test logging less verbose this should help us generate less than a hundred mb of logs per hour. ports.py ports_unittest.py bb,frustration,4.0
757,291b4103fb653e57ec43ab18452140016e4d25ba,alokp@chromium.org <alokp@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Apr 13 16:27:31 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,fixed build failure on linux and mac. platformdevicemakeopaque is only present on windows! google.com review url dcbdfc,frustration,3.0
758,75dcbd8bbac4be8c4a47e6a7697dcc55b7306df7,krit@webkit.org <krit@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sun May 22 06:58:30 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,"dirk schulze reviewed by darin adler. regression pointerevents are broken in some cases the svgsvgelement shouldn't be the target of a mouse event, if its pointerevents attribute is set to 'none'. this matches the behavior on firefox where an embedded svg element is the target of an event, if none of its childs caught the event. this is the case for all pointerevents other than 'none'. tests pointereventsonsvgwithpointer.xhtml pointereventsonsvgwithoutpointer.xhtml rendersvgroot.cpp webcorerendersvgrootnodeatpoint dirk schulze reviewed by darin adler. regression pointerevents are broken in some cases check that an embedded svg element doesn't have a pointer, if pointerevents is set to 'none'. pointereventsonsvgwithpointerexpected.txt added. pointereventsonsvgwithpointer.xhtml added. pointereventsonsvgwithoutpointerexpected.txt added. pointereventsonsvgwithoutpointer.xhtml added. bb",neutral,6.0
759,97c90c6b6db17a3b12fd82bef75c2873373a5501,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Jun 29 17:42:55 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,"sheriff bot unreviewed, rolling out . seems to be causing merging issues on the dashboard, e.g. results.appspot.flakiness_dashboard.htmlgroup.org requested by aboxhall on webkit. json_layout_results_generator.py json_results_generator.py json_results_generator_unittest.py bb",satisfaction,5.0
760,dafb72aad4bbf51769b3af3d5d2337554dec1df0,noelutz@google.com <noelutz@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Jun 14 23:41:52 2011 +0000,chromium/chromium,4568,2011Q2,4568 chromium/chromium 2011Q2,initial cl to update the client model more frequently. review url dcbdfc,satisfaction,3.0
761,7c382d8de3b49ff8970e6b463866aafa0fce2ec8,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Jul 28 05:11:46 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,crypto.idl doesn't need legacy optional arguments reviewed by darin adler. this api is relatively new and useless to call without its only argument. .idl bb,neutral,1.0
762,ba2e6e8abfcd70a3e14077440fbf8f306c06b464,ossy@webkit.org <ossy@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Sep 1 17:22:45 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,implement borderimageslice webcore.pro unreviewed buildfix after dave scattered hyatt . bb,neutral,3.0
763,9ac0f9985ac4412b43b66837d956fb3494e28570,simo@google.com <simo@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Sep 30 09:16:54 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,policy now hides unsent policies in such a way that the page isn't unnecessarily long. test review url dcbdfc,caution,3.0
764,fd7da6e513485f601085f239f1be8d3f0088a6e5,knorton@google.com <knorton@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Aug 2 18:23:34 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,passes empty params property in messages to devtoolsagent. review url dcbdfc,frustration,2.0
765,af826c2cfb3a20d7801310aad6928ce87f7ba7b4,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Aug 4 07:49:12 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,update baselines after . boxboxshadowsexpected.png multiplehorizontalexpected.png multiplestricthorizontalexpected.png multiplestrictverticalexpected.png multipleverticalexpected.png bb,neutral,3.0
766,be79f8514da41f9b5cbcadfcfed768c8a390b401,finnur@chromium.org <finnur@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sat Jul 2 09:30:20 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,wire up notifications to the new tab page. has an extension to test this with. review url dcbdfc,satisfaction,4.0
767,65533ad0606a04de3746da2bc785702ba3da17b5,thakis@chromium.org <thakis@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Sun Jul 24 16:45:39 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,"mac fix new clang warnings. clang added two warnings it warns on implicit return types for objc methods it warns if synthesize is after a method, because that's apparently a compile error in arc so it's good practice to do the same in nonarc mode too, and hence this became a warning both sound like reasonable warnings, so let's just fix them. review url dcbdfc",frustration,4.0
768,b33625757df0ead6513fe87aab75ac3a3eab0c85,yusukes@google.com <yusukes@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Aug 17 09:28:50 2011 +0000,chromium/chromium,4568,2011Q3,4568 chromium/chromium 2011Q3,automatically remove invalid virtual keyboard prefs. review url dcbdfc,frustration,4.0
769,6df59a84eccd4cad7fcefda3e0c5e55239a3b2dd,Steffen Klassert <steffen.klassert@secunet.com>,Fri Mar 25 01:28:45 2011 -0700,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,"route take the right src and dst addresses in ip_route_newports when we set up the flow informations in ip_route_newports, we take the address informations from the the rt_key_src and rt_key_dst fields of the rtable. they appear to be empty. so take the address informations from rt_src and rt_dst instead. this issue was introduced by commit ebfbefbfdbdfdfd remove flowi from struct rtable. klassert s. miller",neutral,3.0
770,33619f0d3ff715a2a5499520967d526ad931d70d,Dominik Brodowski <linux@dominikbrodowski.net>,Sat Feb 19 12:35:15 2011 +0100,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,"pcmcia reenable zoomed video support allow drivers to enable zoomed video support. currently, this is only used by outoftree drivers dvb driver in particular. cc brodowski",neutral,3.0
771,84cdf74e8096a10dd6acbb870dd404b92f07a756,Jeff Layton <jlayton@kernel.org>,Thu Jan 20 13:36:51 2011 -0500,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,cifs fix unaligned accesses in cifsconverttoucs move cifsconverttoucs to cifs_unicode.c where all of the other unicode related functions live. have it store mapped characters in 'temp' and then use put_unaligned_le to copy it to the target buffer. also fix the comments to match kernel coding style. layton shilovsky pargaonkar french,caution,2.0
772,280a72750535aaf69833bda13ab8912aa5eb71e3,Kevin Hilman <khilman@ti.com>,Wed Mar 23 11:18:08 2011 -0700,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,"voltage rename mpu voltagedomain to mpu_iva this voltage domain a.k.a. contains both the mpu and the iva, so rename appropriately. also fixup any users of the mpu name to use mpu_iva hilman",neutral,4.0
773,db2e2e6ee9ee9ce93b04c6975fdfef304771d6ad,Tejun Heo <tj@kernel.org>,Mon Jan 24 15:43:03 2011 +0100,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,xenpcifront don't use flush_scheduled_work flush_scheduled_work is scheduled for deprecation. cancel op_work directly instead. heo cc ryan wilson cc jan beulich cc jesse barnes rzeszutek wilk,neutral,2.0
774,58839b0194a44dfb9ab16fc097ef1f1f91f06b32,Aaro Koskinen <aaro.koskinen@iki.fi>,Sun Mar 13 12:26:23 2011 +0200,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,staging xgifb rename xginew_getreg to xgifb_reg_get rename xginew_getreg to xgifb_reg_get. koskinen kroahhartman,satisfaction,3.0
775,25c1e56a04e60af2414f8d81eda0fd10b8e7b961,Stephen M. Cameron <scameron@beardog.cce.hp.com>,Thu Jan 6 14:48:18 2011 -0600,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,hpsa do not reset unknown boards on reset_devices this is to prevent hpsa from resetting older boards which the cciss driver may be controlling. m. cameron bottomley,satisfaction,3.0
776,37c2ac7872a9387542616f658d20ac25f5bdb32e,Andrea Arcangeli <aarcange@redhat.com>,Thu Jan 13 15:47:16 2011 -0800,torvalds/linux,4589,2011Q1,4589 torvalds/linux 2011Q1,thp compound_trans_order read compound_trans_order safe. noop for . arcangeli cc daisuke nishimura cc kamezawa hiroyuki morton torvalds,caution,5.0
777,87e1960e93fe792c4f4344a6f3a970f9573c76aa,Shane Huang <shane.huang@amd.com>,Sat Mar 28 21:34:46 2009 +0100,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,"add support to smbus changes add support for the amd family series of products. major changes include the changes to addressing the smbus registers at different location from the locations in the previous compatible parts from amd such as . for , the main features and register definitions of smbus and other interfaces are still compatible with the previous products with the only change being in how to access the internal registers for these blocks. huang delvare",neutral,4.0
778,74bb1bcc7dbbc9ddef773bf3395d7ff92aaaad2e,Yu Zhao <yu.zhao@intel.com>,Fri Mar 20 11:25:16 2009 +0800,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,pci handle sriov virtual function migration add or remove a virtual function after receiving a migrate in or out request. wilcox zhao barnes,satisfaction,4.0
779,6d5eaafa558783a669bb46c3dba902370e8f0ffc,Ivo van Doorn <ivdoorn@gmail.com>,Tue Mar 17 11:29:19 2009 +0100,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,rtx update maintainers entry new mailinglist the devel mailinglist will be replaced by the new mailinglist rtxusers. van doorn w. linville,neutral,3.0
780,5a5fb7dbe88dd57dc2bef0f3be9da991e789612d,Steven Rostedt <srostedt@redhat.com>,Thu Feb 12 10:53:37 2009 -0500,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,"preemptcount force hardirqcount to max of to add a bit in the preempt_count to be set when in nmi context, we found that some archs did not have enough bits to spare. this is due to the hardirq_count being a mask that can hold nr_irqs. some archs allow for over irqs, and that would require a mask of bits. the sofitrq mask is bits and the preempt disable mask is also bits. the preemp_active bit is bit , and bit would make the preempt_count which is type int a negative number. a negative preempt_count is a sign of failure. add them up you get bits. no room for the nmi bit. but the hardirq_count is to track the number of nested irqs, not the number of total irqs. this originally took the paranoid approach of setting the max nesting to nr_irqs. but when we have archs with over irqs, it is not practical to think they will ever all nest on a single cpu. not to mention that this would most definitely cause a stack overflow. this patch sets a max of bits to be used for irq nesting. i did a 'git grep hardirq' to examine all users of hardirq_bits and hardirq_mask, and found that making it a max of would not hurt anyone. i did find that the expected it to be bits, so i allow for the archs to set the number to be less than . i removed the setting of hardirq_bits from the archs that set it to more than . this includes alpha, and . this will always allow room for the nmi bit, and if we need to allow for nmi nesting, we have bits to play with. rostedt",neutral,2.0
781,b6efa1eabbe8d23fd7dcad1eed8ce945f4adea83,Sonic Zhang <sonic.zhang@analog.com>,Fri Jan 2 13:40:31 2009 +0000,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,blackfin serial driver clean serial console and early prink code. zhang wu cox torvalds,frustration,2.0
782,a1a6ee74f2c68918f2e145dccba3637eea91a52a,Nicola Soranzo <nsoranzo@tiscali.it>,Tue Feb 10 23:28:24 2009 -0300,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,coding style fixes and a typo correction lots of coding style fixes and a typo correction for . soranzo schilling landgraf carvalho chehab,satisfaction,3.0
783,b34196d7d031a966c70ce2ede9087be56c7dd4bc,Danny Kukawka <dkukawka@suse.de>,Sat Jan 31 15:52:20 2009 +0100,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,rtx fix led naming fixed led device naming for the rtx driver. due to the documentation of the led the naming should be function while not applying sections should be left blank. this should lead to e.g. sradio instead of . kukawka w. linville,neutral,5.0
784,0a4de47be0cd74c6665a5519c40f692dbbd54110,Bill Pemberton <wfp5p@virginia.edu>,Wed Mar 25 11:06:45 2009 -0400,torvalds/linux,4589,2009Q1,4589 torvalds/linux 2009Q1,staging comedi remove str_boardinfos typedef in addi pemberton kroahhartman,frustration,3.0
785,37fed3ee259d59858dd4b733659fbcb2e19389cc,Andrew Vasquez <andrew.vasquez@qlogic.com>,Thu Feb 9 11:15:37 2012 -0800,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,use consistent dl mask for passthru requests. the driver is logging a slew of 'good' status requests for passthrough commands. change some log messages from ql_log ql_dbg ql_log_info ql_dbg_user vasquez dupuis bottomley,frustration,3.0
786,a6539c32949063c8147905512a83a98842c2d254,Mark Brown <broonie@opensource.wolfsonmicro.com>,Fri Feb 17 14:20:14 2012 -0800,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,regmap allow users to query the size of register values generic infrastructure based on top of regmap may want to operate on blocks of data and therefore find it useful to find the size of the register values. provide an accessor operation for this. brown,neutral,2.0
787,3ce3230a0cff484e5130153f244d4fb8a56b3a8b,Frederic Weisbecker <fweisbec@gmail.com>,Wed Feb 8 03:37:27 2012 +0100,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,"cgroup walk task list under tasklist_lock in cgroup_enable_task_cg_list walking through the tasklist in cgroup_enable_task_cg_list inside an rcu read side critical section is not enough because rcu is not yet safe against while_each_thread if we use only rcu, a forking task that has passed cgroup_post_fork without seeing use_task_css_set_links is not guaranteed to have its child immediately visible in the tasklist if we walk through it remotely with rcu. in this case it will be missing in its css_set's task list. thus we need to traverse the list unfortunately under the tasklist_lock. it makes us safe against while_each_thread and also make sure we see all forked task that have been added to the tasklist. as a secondary effect, reading and writing use_task_css_set_links are now well ordered against tasklist traversing and modification. the new layout is cpu cpu use_task_css_set_links write_locktasklist_lock read_locktasklist_lock add task to tasklist do_each_thread write_unlocktasklist_lock add thread to css set links if use_task_css_set_links while_each_thread add thread to css set links read_unlocktasklist_lock if cpu traverse the list after the task has been added to the tasklist then it is correctly added to the css set links. otoh if cpu traverse the tasklist before the new task had the opportunity to be added to the tasklist because it was too early in the fork process, then cpu catches up and add the task to the css set links after it added the task to the tasklist. the right value of use_task_css_set_links is guaranteed to be visible from cpu due to the implicit barrier properties the read_unlock on cpu makes the write on use_task_css_set_links happening and the write_lock on cpu make the read of use_task_css_set_links that comes afterward to return the correct value. weisbecker zefan heo cc mandeep singh baines cc oleg nesterov cc andrew morton cc paul e. mckenney",frustration,4.0
788,2ece2e8b7d02040a59bc2f3a7f192c0521e2b867,Alex Deucher <alexander.deucher@amd.com>,Tue Mar 20 17:18:20 2012 -0400,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,kms add ib and fence dispatch functions for si support both ibs de and const ibs ce. deucher airlie,neutral,3.0
789,55a254ac63a3ac1867d1501030e7fba69c7d4aeb,Daniel Vetter <daniel.vetter@ffwll.ch>,Thu Mar 22 00:14:43 2012 +0100,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,"properly restore the ppgtt page directory on resume the ppgtt page directory lives in a snatched part of the gtt pte range. which naturally gets cleared on hibernate when we pull the power. suspend to ram which is what i've tested works because despite the fact that this is a mmio region, it is actually back by system ram. fix this by moving the page directory setup code to the ppgtt init code which gets called on resume. this fixes hibernate on my ivb and snb. widawsky vetter",satisfaction,5.0
790,ff40a675bba27c990c7b32c2fcc50d3db758b226,Danny Kukawka <danny.kukawka@bisect.de>,Fri Feb 24 14:45:52 2012 +0100,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,simeth.c print mac via printk format specifier print via printk extended format specifier pm instead of custom code. kukawka,satisfaction,4.0
791,d17436813a07b217027eccfa9561e59f9d3f479a,Guenter Roeck <linux@roeck-us.net>,Sun Jan 15 10:13:12 2012 -0800,torvalds/linux,4589,2012Q1,4589 torvalds/linux 2012Q1,"hwmon fix checkpatch issues fixed error code indent should use tabs where possible error do not use assignment in if condition error space prohibited after that open parenthesis '' error space required after that ',' error space required after that ',' error spaces required around that '' error spaces required around that '",caution,3.0
792,53830cc75974a199b6b654c062ff8c54c58caa0b,Nicolas Ferre <nicolas.ferre@microchip.com>,Sat Apr 30 16:57:46 2011 +0200,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,dmaengine at_hdmac add cyclic dma operation support ferre koul,caution,4.0
793,2ee2d29289951b4cb7578d75f199e4aa4084fe6f,Peter Foley <pefoley2@verizon.net>,Tue Apr 26 17:19:28 2011 -0400,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,kbuild make versioncheck work in kbuild_outdir this patch fixes the versioncheck target so it works when make is invoked in kbuild_outdir. foley marek,frustration,3.0
794,9a790ba1ec02bbae0933e7ebd576c0bc329e9796,Tristan Ye <tristan.ye@oracle.com>,Thu May 12 20:47:07 2011 +0800,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,"skip existing hole when removing the last extent_rec in punchinghole codes. in the case of removing a partial extent record which covers a hole, current punchinghole logic will try to remove more than the length of whole extent record, which leads to the failure of following assertalloc.c bug_oncpos e_cpos trunc_range rec_range this patch tries to skip existing hole at the last attempt of removing a partial extent record, what's more, it also adds some necessary comments for better understanding of punchinghole codes. ye becker",neutral,3.0
795,d8ecc5cd8e227bc318513b5306ae88a474b8886d,Sam Ravnborg <sam@ravnborg.org>,Wed Apr 27 22:29:49 2011 +0200,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,kbuild asmgeneric support there is an increasing amount of header files shared between individual architectures in asmgeneric. to avoid a lot of dummy wrapper files that just include the corresponding file in asmgeneric provide some basic support in kbuild for this. with the following patch an architecture can maintain a list of files in the file archarchkbuild to use a generic file just add genericy for each file listed kbuild will generate the necessary wrapper in archarchasm. when installing userspace headers a wrapper is likewise created. the original inspiration for this came from the patchset although a different method is used. the patch includes several improvements from arnd bergmann. michael marek contributed makefile.asmgeneric. remis baima did an intial implementation along to achive the same see ravnborg xuetao testedby guan xuetao bergmann cc remis lima baima marek,frustration,2.0
796,e312eb1e66e4357000e4e7438849d5a5fd738219,Paul Parsons <lost.distance@yahoo.com>,Sun May 15 13:24:41 2011 +0000,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,"mmc tmio fix race condition resulting in spurious interrupts there is a race condition in the tmio_mmc_irq interrupt handler, caused by the presence of a while loop, which results in warnings of spurious interrupts. this was found on an hp ipaq whose htc reportedly incorporates the toshiba controller. towards the end of a multiple read operation the handler clears the final rxrdy status bit in the first loop iteration, sees the dataend status bit at the bottom of the loop, and so clears the dataend status bit in the second loop iteration. however the dataend interrupt is still queued in the system somewhere and can't be delivered until the handler has returned. this second interrupt is then reported as spurious in the next call to the handler. likewise for single read operations. and something similar occurs for multiple write and single write operations, where cmdrespend and txrq status bits are cleared in a single call. in these cases the interrupt handler clears two separate interrupts when it should only clear the one interrupt for which it was invoked. the fix is to remove the while loop. parsons ball",frustration,3.0
797,c77b38108d6aaae05823e02d7df28b6e0d5ffdad,Jonathan Cameron <jic23@cam.ac.uk>,Fri Apr 15 18:56:00 2011 +0100,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,documentation make read_size signed to allow for errors. without this all hell breaks loose if you have no data. cameron kroahhartman,frustration,5.0
798,563e4cf25ec804eb02cd30a41baa2fcc6c06679b,Lars Ellenberg <lars.ellenberg@linbit.com>,Wed May 4 10:33:52 2011 +0200,torvalds/linux,4589,2011Q2,4589 torvalds/linux 2011Q2,drbd introduce __s_field in the genetlink macro magic and drop explicit typecasts intmeta_dev_idx ellenberg,neutral,3.0
799,8591a4219725194bedc100c78189696bd0a0263f,timurrrr@chromium.org <timurrrr@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jan 20 11:44:25 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,don't run jinglesessiontest.connect under win bot goes greener review url dcbdfc,neutral,4.0
800,088a29610c15b4a2fcb5f504f36c1f397cd3f42c,dilmah@chromium.org <dilmah@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jan 26 12:58:42 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,do not use local override for language settings always store it into synchronized preference. review url dcbdfc,frustration,4.0
801,42ff12aba0c6bddedb354266b7398aa89dce87c1,jberlin@webkit.org <jberlin@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Feb 23 17:43:26 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,tests failing after update the pixel results for kusamakurabackgroundcanvas.html. the pixel results for nestedruby.html turned out to be identical to those before . unreviewed. kusamakurabackgroundcanvasexpected.checksum kusamakurabackgroundcanvasexpected.png bb,neutral,2.0
802,1958d55c35f9279cc7be354d28f6fd71c6c86875,dbates@webkit.org <dbates@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Feb 1 19:22:06 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,"scott cameron reviewed by daniel bates. use windows format for mingw httpd path. httpd.pm use singlequotes around mysys value for httpdpath in gethttpdpath so that we don't have to escape the space characters in the path. also, changed path to windowsstyle path and removed fixme comment. bb",satisfaction,3.0
803,13dff6241fc74713ca24c79893271ad6755cd11f,loislo@chromium.org <loislo@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sun Jan 23 10:48:14 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,ilya tikhonovsky unreviewed build fix. web inspector looks like efl doesn't regenerate inspectorbackenddispatcher. touch inspector.idl. .idl bb,frustration,4.0
804,4b5f6d0e10e19b2a4913fb68f20b8c988fb46e33,pkasting@chromium.org <pkasting@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Feb 14 22:56:09 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,"unreviewed, chromium test expectations update. try using the right syntax this time. test_expectations.txt bb",frustration,3.0
805,f9c34596961071f01dc969c3841a2f5573a39843,ggaren@apple.com <ggaren@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Mar 10 20:25:42 2011 +0000,chromium/chromium,4568,2011Q1,4568 chromium/chromium 2011Q1,geoffrey garen reviewed by oliver hunt. rolled back in and with event handler layout test failures fixed. the failures were caused by a last minute typo assigning to currentevent instead of m_currentevent. javascriptcore.exp javascriptcore.javascriptcore.def javascriptcorepbxproj .cpp .cpp .cpp .h .cpp .h .h .cpp .h .cpp .cpp .h .h .cpp .h geoffrey garen reviewed by oliver hunt. rolled back in and with event handler layout test failures fixed. the failures were caused by a last minute typo assigning to currentevent instead of m_currentevent. jsrun.cpp jsrun.h geoffrey garen reviewed by oliver hunt. rolled back in and with event handler layout test failures fixed. the failures were caused by a last minute typo assigning to currentevent instead of m_currentevent. webcorepbxproj jsdomglobalobject.cpp jsdomglobalobject.h jsdomwindowbase.cpp jsdomwindowbase.h jsdomwindowcustom.h jsworkercontextbase.cpp bb,frustration,2.0
806,4a949e8d768aaeda684d8c8d34368ccb09a26a7a,dumi@chromium.org <dumi@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Aug 27 04:01:02 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,add support for markertextforlistitem to chromium's layouttestcontroller. reviewed by darin fisher. .h .h .cpp webkitgetelementimpl webkitwebbindingsgetelement .cpp webkitwebframeimplmarkertextforlistitem .h bb,neutral,3.0
807,b1bbd093afb3cf3c47bb5b9d82fac6145317602a,rogerta@google.com <rogerta@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Aug 24 13:57:41 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,"roll the version number of the rlz library to make the new open source rlz implementation used by chrome interoperate correctly with other products that use rlz, chrome and another rlzenabled product and make sure they correctly share the dcc string and their rlz strings. no registry values should have the type reg_binary. review url dcbdfc",frustration,4.0
808,8b9a8f156c4f0038012718378dab89416731f2f5,pkasting@chromium.org <pkasting@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Jul 27 01:39:13 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,"make theme change notifications autopropagate through the view hierarchy, instead of forcing subclasses to manually call their superclass implementation. this fixes some problems where not all views would get notified of a theme change. make naming for theme and locale changes consistent and clear. review url dcbdfc",neutral,2.0
809,8e38f3b749e43228dad7878595eceb259bcc3277,xiyuan@chromium.org <xiyuan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jul 28 19:03:55 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,implement new mock for user options page per chromium the user options page matches mock per chromium. note the underlying libcros is still missing and ui shows up mock data only. review url dcbdfc,neutral,2.0
810,8756e6680ae0d217e99f1f5a92afdd2695d11327,xiyuan@chromium.org <xiyuan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Aug 4 21:06:31 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,allow open local pdf file from filebrowse ui. allow local pdf file to be opened if a pdf plugin is available. local pdf file could be opened and viewed by pdf plugin. review url dcbdfc,caution,5.0
811,471ba4e3ddb30210969e4b78e04ab567ffa6532d,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Aug 27 18:20:27 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,"mihai parparita reviewed by darin fisher. crash in historycontrollerrecursivegotoitem when navigating in a frame while another frame has a custom window name add a test to check that we can handle navigation from a toplevel frame when one of the child frames sets window.name after load. historysubframewithnameexpected.txt added. historysubframewithname.html added. subframewithname.html added. subframewithname.html added. subframewithnamecontainer.html added. mihai parparita reviewed by darin fisher. crash in historycontrollerrecursivegotoitem when navigating in a frame while another frame has a custom window name fix up historycontrollerrecursivegotoitem to better check whether the current document frames, the curent history item frames, and the destination history frames match up. test historysubframewithname.html .cpp webcorehistoryitemchilditemwithdocumentsequencenumber add linear lookup of child by document sequence number webcorehistoryitemhassamedocuments remove assumption that the other item has the children in the same order it doesn't seem to be true webcorehistoryitemhassameframes add recursive comparison of child frames. .h .cpp webcoreframeloaderloaditem compare full set of documents in history items, not just the topmost ones. otherwise when going between framesets where only one of the subframes changed we wouldn't trigger a load. .cpp webcorehistorycontrollerrecursivegotoitem also check that the two history items have the same frames webcorehistorycontrollercurrentframesmatchitem refactor childframesmatchitem to also check the topmost frame, to make recursivegotoitem easier to read. .h bb",caution,3.0
812,b7c3f1375499a7001654906161fe471f473ee54b,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Sep 10 06:56:40 2010 +0000,chromium/chromium,4568,2010Q3,4568 chromium/chromium 2010Q3,adam barth reviewed by dimitri glazkov. spurious null check in mediadocumentparser trivial change. frameloader can never be null. .cpp webcoremediadocumentparsercreatedocumentstructure bb,neutral,6.0
813,7b4f86ac057821740e8499afde6faf9c7b08f69f,Ingo Molnar <mingo@elte.hu>,Thu Oct 6 12:54:36 2011 +0200,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,merge branch 'ras' of into,satisfaction,3.0
814,246ccea184423ccdec3be1ca3d400cc3c547404d,Martin Schwidefsky <schwidefsky@de.ibm.com>,Sun Oct 30 15:17:16 2011 +0100,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,sparse fix sparse null pointer warnings fix two null pointer warnings in the dasd driver . warning using plain integer as null pointer . warning using plain integer as null pointer schwidefsky,satisfaction,4.0
815,87e6f968339bcdda56b39572c7e63331192296a0,Jim Cromie <jim.cromie@gmail.com>,Mon Dec 19 17:11:13 2011 -0500,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,"dynamic_debug drop enabled field from struct _ddebug, use _dprintk_flags_print currently any enabled dynamicdebug flag on a pr_debug callsite will enable printing, even if _dprintk_flags_print is off. checking print flag directly allows p to disable callsites without fussing with other flags, so the following disables everything, without altering flags user may have set echo p control cromie baron kroahhartman",satisfaction,2.0
816,8a44930a11de8d66f92145fd2d2464ab4fba696b,Arnd Bergmann <arnd@arndb.de>,Tue Dec 27 23:56:51 2011 +0000,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,merge branch 'nextsamsungcleanup' of into,frustration,5.0
817,3b64bd3e4d0ae667062893a6ef30326f7103144e,Roland Vossen <rvossen@broadcom.com>,Tue Oct 18 14:03:00 2011 +0200,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,smac removed support for srom rev beukers van spriel vossen van spriel w. linville,caution,4.0
818,a7a280493fb63f8e9fbfc8feec5810bf50e1e54f,Major Lee <major_lee@wistrom.com>,Tue Nov 15 15:31:23 2011 -0800,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,"battery fixes when dcdc input line over current detecting, pmic will change charging current automatically. logging event is enough. lee cox cc mathias nyman cc feng tang cc h. peter anvin morton molnar",neutral,2.0
819,44a94f62f1e3a2024b43de7705cd990359fcbafa,Roland Vossen <rvossen@broadcom.com>,Sun Oct 2 10:14:44 2011 -0700,torvalds/linux,4589,2011Q4,4589 torvalds/linux 2011Q4,staging cleaned up buffer len defines in fullmac code cleanup. replaced identical definition brcmf_c_dcmd_maxlen by brcmf_dcmd_maxlen. renamed related buffer len definitions. lin kroahhartman,satisfaction,5.0
820,a49a50dad48586d42ebac1a6730c3a3cd5603421,Jerome Glisse <jglisse@redhat.com>,Wed Aug 24 20:00:17 2011 +0000,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,kms evergreen ni reset spi block on cp resume for some reason spi block is in broken state after module unloading. this lead to broken rendering after reloading module. fix this by reseting spi block in cp resume function glisse cc airlie,neutral,2.0
821,4b0109830842fa645c7f7460dc713cedfe4473f6,Ruslan Pisarev <ruslan@rpisarev.org.ua>,Tue Jul 26 14:16:38 2011 +0300,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,"xen fix whitespaces,tabs coding style issue in pci.c this is a patch to the pci.c file that fixed up whitespaces, tabs warnings found by the checkpatch.pl tools. pisarev rzeszutek wilk",satisfaction,3.0
822,074fcdfff6c45e7ccb24cbc9fc229805d451e7e6,Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>,Wed Jul 6 01:18:12 2011 +0000,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,sh clock add clkdev_ick_id for cleanup morimoto mundt,satisfaction,2.0
823,84759c6d18c5144432781ddca037d929ee9db8a5,Kent Overstreet <koverstreet@google.com>,Wed Sep 21 21:43:05 2011 -0700,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,"revert rw_semaphore remove this reverts commit bfadafafeaabf. bcache needs rw semaphores for cache coherency in writeback mode writes have to take a read lock on a per cache device rw sem, and release it when the bio completes. but since this is for bios it's naturally not in the context of the process that originally took the lock. overstreet cc christoph hellwig cc david howells",neutral,4.0
824,f30a6484f1bcb410d0af0c24f34b8e3d92682a05,Geert Uytterhoeven <geert@linux-m68k.org>,Sun Sep 11 11:54:50 2011 +0200,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,"remove obsolete support for user vector interrupt fixups it was used on apollo only, before its conversion to genirq. uytterhoeven",neutral,3.0
825,f41caddbe73f52a42f529d668ce47b4d693fd2c0,Tony Lindgren <tony@atomide.com>,Mon Aug 22 23:57:23 2011 -0700,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,"use kconfig symbol in makefile instead of objy as noted by grant likely , makefile unnecessarily repeats entries for common device init code instead of using kconfig symbol. remove references to hsmmc.o and boardflash.o. also omap_phy_internal.o references can be removed once it has some kconfig symbol to use. lindgren",caution,3.0
826,b678bd1ff579f9e6233911fe5ce5fce31c5242e0,Larry Finger <Larry.Finger@lwfinger.net>,Tue Jul 19 18:22:07 2011 -0500,torvalds/linux,4589,2011Q3,4589 torvalds/linux 2011Q3,staging convert typedef ht_extchnl_offset to enum ht_extchnl_offset remove typedef from enum. rename enum. rename uses. finger,satisfaction,3.0
827,b1a914690c581f8f88b897d83a79b1c6eaf494c9,Takashi Iwai <tiwai@suse.de>,Sun Jun 21 10:56:44 2009 +0200,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,alsa hda add option add the new model string corresponding to the previous acer aspire support. iwai,caution,3.0
828,6a3395beb99d7ae882ddf701c6fa6005ad7edebf,Paul Mundt <lethal@linux-sh.org>,Thu Apr 16 15:36:13 2009 +0900,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,sh add cmt clockevents support. this enables support for the cmt clockevents driver on . mundt,neutral,4.0
829,3c20e2f2793380add92dacce63395a8503b6c7c9,Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>,Wed Jun 10 04:38:38 2009 +0000,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,use proc_create_data instead of proc_create use proc_create_data to avoid race conditions. reportedby alexey dobriyan uytterhoeven cc jim paris cc jens axboe herrenschmidt,neutral,2.0
830,faa8fdc85347cc76d87b43ea718785661c54f656,Jouni Malinen <jouni.malinen@atheros.com>,Mon May 11 21:57:58 2009 +0300,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,"add rsc configuration for new keys when setting a key with nl_cmd_new_key, we should allow the key sequence number rsc to be set in order to allow replay protection to work correctly for group keys. this patch documents this use for and adds the couple of missing pieces in and to support this. in addition, wext siocsiwencodeext compat processing in is extended to handle the rsc this was already specified in wext, but just not implemented in . malinen w. linville",satisfaction,2.0
831,9b1beaf2b551a8a1604f104025b24e9c535c8963,Andi Kleen <andi@firstfloor.org>,Wed May 27 21:56:59 2009 +0200,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,", mce support actionoptional machine checks newer intel cpus support a new class of machine checks called recoverable action optional. action optional means that the cpu detected some form of corruption in the background and tells the os about using a machine check exception. the os can then take appropiate action, like killing the process with the corrupted data or logging the event properly to disk. this is done by the new generic high level memory failure handler added in a earlier patch. the high level handler takes the address with the failed memory and does the appropiate action, like killing the process. in this version of the patch the high level handler is stubbed out with a weak function to not create a direct dependency on the hwpoison branch. the high level handler cannot be directly called from the machine check exception though, because it has to run in a defined process context to be able to sleep when taking vm locks it is not expected to sleep for a long time, just do so in some exceptional cases like lock contention thus the mce handler has to queue a work item for process context, trigger process context and then call the high level handler from there. this patch adds two path to process context through a per thread kernel exit notify_user callback or through a high priority work item. the first runs when the process exits back to user space, the other when it goes to sleep and there is no higher priority process. the machine check handler will schedule both, and whoever runs first will grab the event. this is done because quick reaction to this event is critical to avoid a potential more fatal machine check when the corruption is consumed. there is a simple lock less ring buffer to queue the corrupted addresses between the exception handler and the process context handler. then in process context it just calls the high level vm code with the corrupted pfns. the code adds the required code to extract the failed address from the cpu's machine check registers. it doesn't try to handle all possible cases the specification has different ways to specify memory address but only the linear address. most of the required checking has been already done earlier in the mce_severity rule checking engine. following the intel recommendations action optional errors are only enabled for known situations encoded in mcacods. the errors are ignored otherwise, because they are action optional. improve comment, disable preemption while processing ring buffer reported by ying huang kleen seto peter anvin",frustration,2.0
832,3175da83a0a85fa03c9c34061906a9ca0725af0d,Hans Verkuil <hverkuil@xs4all.nl>,Fri Jun 26 15:35:04 2009 -0300,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,"ttpci config ttpci_eeprom depends on if is not enabled, then we shouldn't build ttpci_eeprom.c. verkuil carvalho chehab",neutral,3.0
833,4d4e2bc268e188a8793ce96af20576374098c17b,Marek Szyprowski <m.szyprowski@samsung.com>,Wed Jun 24 08:05:43 2009 +0200,torvalds/linux,4589,2009Q2,4589 torvalds/linux 2009Q2,arm ncp make ncp_iodesc static and move it to initdata section make ncp_iodesc struct static to clean a public namespace a bit and move it to __initdata section to save memory a bit. park szyprowski dooks,frustration,5.0
834,c16714704bb35165e5b85d927873dcc643772648,Stefan Richter <stefanr@s5r6.in-berlin.de>,Fri Dec 17 22:22:33 2010 +0100,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,"firewire net set carrier state at ifup at ifup, carrier status would be shown on even if it actually was off. also add an include for ethtool_ops rather than to rely on the one from netdevice.h. note, we can alas not use fwnet_device_mutex to serialize access to devpeer_count as i originally wanted. this would cause a lock inversion fwnet_probe takes fwnet_device_mutex register_netdev takes rtnl_mutex devinet_ioctl takes rtnl_mutex fwnet_open must not take fwnet_device_mutex hence use the devlock spinlock for serialization. richter",satisfaction,4.0
835,7f8f2729ce6380a2735ddf45c04d5bb09eaca8a5,Karl Beldan <karl.beldan@gmail.com>,Thu Oct 7 21:57:10 2010 +0200,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,bluetooth hci_uart fix typo in stats for sco tx .cmd_txstat.sco_tx for hci_scodata_pkt beldan holtmann f. padovan,caution,3.0
836,9792eb1d7296ad4e19c3219dabf65efd01562a73,Krzysztof Hałasa <khc@pm.waw.pl>,Tue Dec 28 13:08:18 2010 +0100,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,crypto mod_aes already include key size. hałasa,satisfaction,3.0
837,56946331b28d53232115a155ba662ab3dc598952,Matt Fleming <matt@console-pimps.org>,Fri Oct 8 21:42:17 2010 +0100,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,oprofile make op_name_from_perf_id global make op_name_from_perf_id global so that we have a way for each architecture to construct an oprofile name for opcpu_type. we need to remove the argument from the function prototype so that we can hide all implementation details inside the function. fleming richter,neutral,4.0
838,d6ce2a0b33eb71f6862dfb6cbddd0e842f8132de,Steven Rostedt <srostedt@redhat.com>,Tue Nov 2 14:58:05 2010 -0400,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,"ktest add reverse bisect, better logging, copyright added the ability to do a reverse bisect. better logging of running commands. added the copyright statement. rostedt",caution,3.0
839,0d040df9984c8fcb6a777a8f6d5dc513eaefd2de,Arnaud Lacombe <lacombar@gmail.com>,Tue Oct 26 16:04:36 2010 -0400,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,asoc add missing __devexit marker this fixes the following warning . warning 'wm_ic_remove' defined but not used lacombe iwai,frustration,3.0
840,eb40a87500ac2f6be7eaf8ebb35610e6d0e60e9a,Dave Chinner <dchinner@redhat.com>,Tue Dec 21 12:09:01 2010 +1100,torvalds/linux,4589,2010Q4,4589 torvalds/linux 2010Q4,"xfs use wait queues directly for the log wait queues the log grant queues are one of the few places left using sv_t constructs for waiting. given we are touching this code, we should convert them to plain wait queues. while there, convert all the other sv_t users in the log code as well. seeing as this removes the last users of the sv_t type, remove the header file defining the wrapper and the fragments that still reference it. chinner hellwig",frustration,3.0
841,c05e85a06e376f6b6d59e71e5333d707e956d78b,David S. Miller <davem@davemloft.net>,Mon Oct 12 23:18:35 2009 -0700,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,cnic need to include .h cnic.c in function 'cnic_init_storm_conn_bufs' cnic. error implicit declaration of function 'csum_ipv_magic' reportedby stephen rothwell s. miller,caution,4.0
842,bf699c9bac124f0a095d8ef06f2d6b219300a822,Linus Torvalds <torvalds@linux-foundation.org>,Sat Oct 31 12:12:19 2009 -0700,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,merge branch 'forlinus' of 'forlinus' of async_tx fix asynchronous recovery for ddf layouts async_pq rename scribble page async_pq kill a stray dma_map call and other cleanups kill a gcc 'uninitialized variable' warning handle holes in block list in async_syndrome_val don't pass a memory pointer as a page pointer. md fix handling of array which is being reshaped to fewer devices. md fix problems with calculations for ddf. downlevel multicore operations to raid_run_ops md unroll.pl replaced with awk analog md remove clumsy usage of do_sync_mapping_range from bitmap code md handle allocation errors during array setup. initialize confdevice_lock earlier add a cond_resched revert md do not progress the resync process if the stripe was blocked,frustration,3.0
843,d6797322231af98b9bb4afb175dd614cf511e5f7,Takashi Iwai <tiwai@suse.de>,Thu Nov 26 15:08:54 2009 +0100,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,alsa remove old dmammap code from .c the call of dma_mmap_coherent is done in the pcm core now. iwai,frustration,3.0
844,75e3a6aed99babdfa95f80d07421065ed004d186,Breno Leitao <leitao@linux.vnet.ibm.com>,Thu Oct 1 15:44:23 2009 -0700,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,icom convert space to tabs convert spaces to tabs and remove wrong spaces leitao cc scott kilau cc jiri slaby morton torvalds,satisfaction,2.0
845,5f6384c5fb6bfc9aac506e058974d3ba293951b3,Thomas Gleixner <tglx@linutronix.de>,Tue Dec 8 16:16:41 2009 +0100,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,"alpha fix fallout from locking changes spin_ functions are mostly static inline now. that causes the alpha compile to fail cc .o warnings being treated as errors in file included from . core_t.h in function 't_readb' core_t. error 'spinlock_check' is static but used in inline function 't_readb' which is not static core_t. error 'spin_unlock_irqrestore' is static but used in inline function 't_readb' which is not static that's caused by the extern inline magic which is used for the subarch specific functions. i tried to distangle the uncountable macro onion layers, but failed miserably. last resort solution switch the t_hae_lock to raw_spinlock_t so the lock functions are pure macros and function calls again. gleixner zijlstra molnar cc richard henderson cc",neutral,2.0
846,9905d1b411946fb3fb228e8c6529fd94afda8a92,Rafael J. Wysocki <rjw@rjwysocki.net>,Tue Nov 3 10:54:58 2009 +0100,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,"pm yenta split resume into early and late parts rev. commit ccdebfdfcbaecdbfcacdec pm yenta fix cardbus regression caused resume to fail on systems with two cardbus bridges. while the exact nature of the failure is not known at the moment, it can be worked around by splitting the yenta resume into an early part, executed during the early phase of resume, that will only resume the socket and power it up if there was a card in it during suspend, and a late part, executed during regular resume, that will carry out all of the remaining yenta resume operations. fixes which is a listed regression from j. wysocki brodowski reportedby stephen j. gowdy testedby jose marino",frustration,4.0
847,d61c42690c6e2ff093a3d01338dad49f35b1e27b,Stephen M. Cameron <scameron@beardog.cce.hp.com>,Mon Nov 23 09:31:48 2009 +0100,torvalds/linux,4589,2009Q4,4589 torvalds/linux 2009Q4,"cciss fix scatter gather cleanup problems on driver unload, only free up the extra scatter gather data if they were allocated in the first place the controller supports it and don't forget to free up the sg_cmd_list array of pointers. brace m. cameron axboe",neutral,4.0
848,10b14cb7eb7dd5bff8023f76a55c8ac20e586128,Alexander van Heukelum <heukelum@fastmail.fm>,Wed Oct 22 12:00:11 2008 +0200,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,", dumpstack always call oops_exit from oops_end always call oops_exit from oops_end, even if signr. also, move add_tainttaint_die from __die to oops_end on x_ and interchange two lines to make oops_end more similar to the version. van heukelum horman molnar",neutral,3.0
849,414ff491b2ab68359c7a2037b30ccfea20d829d4,Mark Brown <broonie@opensource.wolfsonmicro.com>,Wed Nov 26 10:32:26 2008 +0000,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,asoc fix word wrapping in omap kconfig brown,frustration,4.0
850,7bb82d924536cfa62db73dd381b07d9e9b084ffa,Herbert Xu <herbert@gondor.apana.org.au>,Sat Oct 11 12:20:15 2008 -0700,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,gre initialise rtnl_link tunnel parameters properly brown paper bag error of calling memset with sizeofp instead of sizeofp. xu s. miller,satisfaction,5.0
851,7d1e6a9b95e3edeac91888bc683ae62f18519432,Rusty Russell <rusty@rustcorp.com.au>,Tue Nov 25 02:35:09 2008 +1030,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,sched convert nohz struct to cpumask_var_t. impact future size reduction for large nr_cpus. dynamically allocating cpumasks when config_cpumask_offstack saves space for small nr_cpu_ids but big config_nr_cpus. cpumask_var_t is just a struct cpumask for !config_cpumask_offstack. russell molnar,neutral,2.0
852,d588be6bae40f7965f1b681a4dbc3254411787b9,Tomas Winkler <tomas.winkler@intel.com>,Mon Oct 6 16:05:29 2008 +0800,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,iwlwifi scan correct setting of valid rx_chains this patch sets rx_chain bitmap correctly according hw configuration. winkler w. linville,caution,4.0
853,3145e941fcfe2548fa2270afb1a05bab3a6bc418,Yinghai Lu <yinghai@kernel.org>,Fri Dec 5 18:58:34 2008 -0800,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,", msi pass irq_cfg and irq_desc impact simplify code pass irq_desc and cfg around, instead of raw irq numbers this way we dont have to look it up again and again. lu molnar",neutral,3.0
854,545727f32049f6e7269f73a49904e3229192988e,Nobuhiro Iwamatsu <iwamatsu@nigauri.org>,Mon Oct 27 11:32:27 2008 +0900,torvalds/linux,4589,2008Q4,4589 torvalds/linux 2008Q4,gdrom fix compile error return value and argument of block_device_operations.release of gdrom was changed. this patch fix this problem. iwamatsu viro mundt,neutral,3.0
855,a532f97c71c7a952531e02b0994104c532fbef0f,Mark Brown <broonie@opensource.wolfsonmicro.com>,Fri Aug 13 14:18:29 2010 +0100,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,maintainers add ian lartey as comaintaner for wolfson devices brown girdwood,frustration,5.0
856,676cecaaddd09bbe41a38b1d15f190da10087294,Javier Martinez Canillas <martinez.javier@gmail.com>,Sat Jul 17 16:42:19 2010 -0400,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,staging spectra removes unused variable fix a compile warning by removing an unused variable int i. martinez canillas kroahhartman,frustration,3.0
857,dd0cdd888251d0d62df417d6859e74e57146c13f,Tony Lindgren <tony@atomide.com>,Mon Jul 5 16:31:30 2010 +0300,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,omap move usb platform init code into mach.c move fs usb platform init code into mach.c lindgren,neutral,4.0
858,f3c58aceaa3f237ba43735805f4677950327b8ee,Amerigo Wang <amwang@redhat.com>,Tue Aug 17 21:51:18 2010 +0000,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,"remove num_lro parameter as suggested by david, this parameter can die, we can use ethtool to turn lro . compile tests only. cong s. miller",neutral,2.0
859,d2f718398a21cdb925f12c2b332d206eacd967a6,Grant Likely <grant.likely@secretlab.ca>,Fri Jul 23 16:56:19 2010 -0600,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,fix endian issues in parsing interrupt specifiers this patch fixes some instances where interrupt specifiers are dereferenced directly instead of doing a be_to_cpu conversion first. likely,neutral,3.0
860,0a54cec0c25cc49e3b68b14c205f1f6cff13f5e1,Ingo Molnar <mingo@elte.hu>,Thu Jul 1 08:49:28 2010 +0200,torvalds/linux,4589,2010Q3,4589 torvalds/linux 2010Q3,"merge branch 'linus' into conflicts writeback.c merge reason resolve the conflict note, i picked the version from linus's tree, which effectively reverts the fswriteback.c bits of fs remove all rcu head initializations, except on_stack initializations as the upstream changes to this file changed this code heavily and the first attempt to resolve the conflict resulted in a nonbooting kernel. it's safer to retry this portion of the commit cleanly. molnar",frustration,4.0
861,5225640bbe397fea3f38031c53641aaaf11115a8,Zhu Yi <yi.zhu@intel.com>,Mon Jun 30 17:23:31 2008 +0800,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,"iwlwifi fix temperature callback calibration issue the patch fixes the temperature calibration issue introduced by the patch iwlwifi move rx stats to core, and move temperature to handler. it also remove the second parameter stats since it is already copied to privstatistics. yi w. linville",satisfaction,3.0
862,c3823c479e1f86a0adc7bb76fcfded67b042afc3,Linus Torvalds <torvalds@linux-foundation.org>,Mon Apr 21 15:44:57 2008 -0700,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,"merge branch 'forlinus' of 'forlinus' of commits add hardware powerdown function call add .h don't offer parport_pc don't offer config_gen_rtc don't offer config_rtc add .h remove two unused defines from .c implement set_rate, set_parent and mode for generic clockevents support move sleep code into mach use constants from sysreg.h in asm.h delete mostly unused header .h start clocksource cleanup pass board info through at_add_device_twi cleanup use _ac macro to define page_size generate raw keyboard codes for architecture atmel_usba_udc add support for atcap udphs atmel_usba_udc add missing kfree in usba_udc_remove atmel_usba_udc move endpoint declarations into platform data. atmel_usba_udc kill gpio_pin_none",neutral,4.0
863,78ab88f04f44bed566d51dce0c7cbfeff6449a06,Tejun Heo <htejun@gmail.com>,Thu May 1 23:41:41 2008 +0900,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,"libata improve postreset device ready test some controllers jmb and use x and xf to indicate that the device isn't ready yet. it looks like they use if device presence is detected but connection isn't established. x or xf after connection is established and use the value from signature fis after receiving it. this patch implements ata_check_ready, which takes tf status value and determines whether the port is ready or not considering the above and other conditions, and use it in check_ready functions. this is safe as both x and xf aren't valid ready status value even though they have bsy bit cleared. this fixes hot plug detection failures which can be triggered with certain drives if they aren't already spun up when the data connector is hot plugged. tested on sil, , ahci , piix and combined with eight drives from all major vendors. heo garzik",satisfaction,2.0
864,9a727a250c676334efdcb71a5b2ad4603addda06,John W. Linville <linville@tuxdriver.com>,Tue Jun 10 13:31:23 2008 -0400,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,.h fixup merge damage these definitions were originally removed in remove channel use statistics. w. linville,frustration,2.0
865,ae8547b0a9e5d718ce272ddc48f91703a0f52a0b,Hans Reiser <reiser@namesys.com>,Wed May 7 15:48:57 2008 +0300,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,"vfs move inode_lock into sync_sb_inodes this patch makes 'sync_sb_inodes' lock 'inode_lock', rather than expect that the caller will do this. this change was previously done by hans reiser and sat in the mm tree. bityutskiy",satisfaction,1.0
866,b6b337ad1c1d6fe11b09b35d75464b84b3e11f07,Nadia Derbey <Nadia.Derbey@bull.net>,Tue Apr 29 01:00:42 2008 -0700,torvalds/linux,4589,2008Q2,4589 torvalds/linux 2008Q2,"ipc recompute msgmni on memory add remove introduce the registration of a callback routine that recomputes msg_ctlmni upon memory add remove. a single notifier block is registered in the hotplug memory chain for all the ipc namespaces. since the ipc namespaces are not linked together, they have their own notification chain one notifier_block is defined per ipc namespace. each time an ipc namespace is created removed it registers unregisters its notifier block in from the ipcns chain. the callback routine registered in the memory chain invokes the ipcns notifier chain with the ipcns_lowmem event. each callback routine registered in the ipcns namespace, in turn, recomputes msgmni for the owning namespace. derbey cc yasunori goto cc matt helsley cc mingming cao cc pierre peiffer morton torvalds",neutral,4.0
867,d75a40e90e9eb08c2159e719a90a7922dab231d3,Atsushi Nemoto <anemo@mba.ocn.ne.jp>,Tue Aug 19 22:55:14 2008 +0900,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,mips make spi_eeprom.c more generic helper routines in spi_eeprom.c is not specific. move it to directory and make it works with spi bus number other than . nemoto baechle create mode spi_eeprom.c delete mode spi_eeprom.c,frustration,3.0
868,95089910933e10768cfef1ab0bab0c55b962aacb,Jeff Layton <jlayton@kernel.org>,Wed Aug 6 04:39:02 2008 +0000,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,"cifs_mkdir and cifs_create should respect the setgid bit on parent dir if a server supports unix extensions but does not support posix create routines, then the client will create a new inode with a standard smb mkdir or call and then will set the mode. when it does this, it does not take the setgid bit on the parent directory into account. this patch has cifs flip on the setgid bit when the parent directory has it. if the share is mounted with setuids then also change the group owner to the gid of the parent. this patch should apply cleanly on top of the setattr cleanup patches that i sent a few weeks ago. layton french",frustration,4.0
869,e272ae088fccf0e98ee0042392bd52a3455f28bd,David Howells <dhowells@redhat.com>,Tue Jul 8 12:56:04 2008 -0300,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,fix a const pointer assignment error in the demodulator driver fix an assignment of a const pointer to a nonconst pointer in the demodulator driver. this was introduced in patch . howells carvalho chehab,neutral,4.0
870,91de65ac00f976c972940bedd9dbfe38bb8bfec3,Jean-Francois Moine <moinejf@free.fr>,Wed Sep 3 17:12:18 2008 -0300,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,gspca set the clock at the end of initialization in sonixj. moine carvalho chehab,frustration,2.0
871,32cb5b4e035e3d7b52f1e9de87920645a00e5234,Denis V. Lunev <den@openvz.org>,Sat Jul 5 19:06:12 2008 -0700,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,netns selective flush of rt_cache dst cache is marked as expired on the basis by previous path. right now we have to implement selective cache shrinking. this procedure has been ported from older openvz codebase. v. lunev s. miller,caution,4.0
872,36ac26171afa8dbf29226199699fe955d4a0b6f6,Ingo Molnar <mingo@elte.hu>,Sat Jul 26 11:22:33 2008 +0200,torvalds/linux,4589,2008Q3,4589 torvalds/linux 2008Q3,crashdump fix undefined reference to elfcorehdr_addr' fix build bug introduced by bdecd calgary iommu use the first kernels tce tables in kdump in.o in function calgary_iommu_init' .init.textx undefined reference to elfcorehdr_addr' in.o in function calgary_iommu_init' .init.textxc undefined reference to elfcorehdr_addr' in.o in function detect_calgary' .init.textxc undefined reference to elfcorehdr_addr' in.o in function detect_calgary' .init.textxdc undefined reference to elfcorehdr_addr' make elfcorehdr_addr a generally available symbol. molnar,caution,2.0
873,c8bc6f3c806f1fcbfdbf0b1ff6c52dba59192d3b,Suresh Siddha <suresh.b.siddha@intel.com>,Tue Aug 4 12:07:09 2009 -0700,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,arch specific support for remapping hpet msis arch support for remapping hpet msi's by associating the hpet timer block with the interruptremapping hw unit and setting up appropriate irq_chip siddha cc venkatesh pallipadi cc david woodhouse cc jesse barnes cc jay fenlason lkmlreference gleixner,satisfaction,3.0
874,0924d942256ac470c5f7b4ebaf7fe0415fc6fa59,Dave Airlie <airlied@redhat.com>,Mon Aug 3 12:03:03 2009 +1000,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,kms fix vram initialisation. this got missed in the vram init reworkings. signedofby dave airlie,satisfaction,1.0
875,c0826574ddc0df486ecfc2d655e08904c6513209,Stephen Rothwell <sfr@canb.auug.org.au>,Thu Sep 17 17:03:06 2009 +1000,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,"nfsd return success for non nfs_state_start today's linuxnext build sparc_defconfig failed like this in file included from . .h in function 'nfs_state_start' . error no return statement in function returning nonvoid caused by commit abccddadeafdf allow state startup to fail. please, if you add code that depends on a config option, build with that option enabled and disabled. rothwell bruce fields",frustration,1.0
876,95cdfb72b9bc568803f395c266152c71b034b461,Nicolas Pitre <nico@fluxnic.net>,Tue Sep 22 16:45:29 2009 -0700,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,"mmc propagate error codes back from bus drivers' methods especially for sdio drivers which may have special to report, it is a good thing to relay the returned error code back to upper layers. this also allows for the rationalization of the resume path where code to remove a nolongerexisting or replaced card was duplicated into the mmc, sd and sdio bus drivers. in the sdio case, if a function suspend method returns an error, then all previously suspended functions are resumed and the error returned. an exception is made for enosys which the core interprets as we don't support suspend so just kick the card out for suspend and return success. when resuming sdio cards, the core code only validates the manufacturer and product ids to make sure the same kind of card is still present before invoking functions resume methods. it's the function driver's responsibility to perform further tests to confirm that the actual same card is present same mac address, etc. and return an error otherwise. pitre cc morton torvalds",neutral,3.0
877,3a43ce68ae1758fa6a839386025ef45acb6baa22,Frederic Weisbecker <fweisbec@gmail.com>,Sat Aug 8 04:26:37 2009 +0200,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,"perf_counter fix tracepoint sampling to be part of generic sampling based on peter's comments, make tracepoint sampling generic just like all the other sampling bits are. this is a rename with no code changes perf_sample_tp_record to perf_sample_raw struct perf_tracepoint_record to perf_raw_record we want the system in place that transport tracepoints raw samples events into the perf ring buffer to be generalized and usable by any type of counter. reportedby peter zijlstra weisbecker cc peter zijlstra cc arnaldo carvalho de melo cc mike galbraith cc paul mackerras lkmlreference molnar",frustration,2.0
878,580171f7cd08687cdf1b263aabb35608b3c37433,Luis R. Rodriguez <lrodriguez@atheros.com>,Wed Sep 2 17:02:18 2009 -0700,torvalds/linux,4589,2009Q3,4589 torvalds/linux 2009Q3,propagate errors on ath_init_device and request_irq we've cleaned up ath_init_device and its children enough to pass meaninful errors back from probe. when this fails it means our device could not be initialized and a meaninful error will have been passed. do the same for request_irq and also synchronize the error messages while at it. r. rodriguez w. linville,frustration,2.0
879,cbf6968098f89d3216d074f06544b5032b344da4,Arnaldo Carvalho de Melo <acme@redhat.com>,Tue Apr 27 21:22:44 2010 -0300,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,"perf machines make the machines class adopt the dsos__fprintf methods now those methods don't operate on a global list of dsos, but on lists of machines, so make this clear by renaming the functions. cc avi kivity cc frédéric weisbecker cc mike galbraith cc paul mackerras cc peter zijlstra cc zhang, yanmin lkmlreference carvalho de melo",neutral,3.0
880,7c1f6afcf98fe95fb3f2b70ce01cf66f6db53b5e,David S. Miller <davem@davemloft.net>,Tue May 25 23:51:17 2010 -0700,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,sunserial don't call add_preferred_console when console is specified. reportedby frans pop s. miller,frustration,3.0
881,05d0b0889ca9d033a960542af7f8a13b3ad4f630,H. Peter Anvin <hpa@linux.intel.com>,Fri Jun 18 14:36:26 2010 -0700,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,", vdso error out if the vdso contains external references the vdso is a piece of userspace code which is supposed to be fully selfcontained. any external undefined reference is an error, and should be caught at compile time. this was giving us trouble when compiling with os on gcc for example failed inline. the need to do a buildtime check was pointed out by andi kleen. reportedby andi kleen lkmlreference peter anvin",frustration,2.0
882,516c9a777819150bf3a9b709cd93325cf29a93bf,Joe Perches <joe@perches.com>,Tue Jun 22 01:25:46 2010 +0200,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,staging batmanadv convert mac_fmt to pm remove the last uses of mac_fmt perches eckelmann kroahhartman,caution,4.0
883,f41275e893191eeb7a88e431d594e167adbd5234,Li Zefan <lizf@cn.fujitsu.com>,Mon May 24 16:25:44 2010 +0800,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,"convert more trace events to define_event convert i_gem_object_clflush to define_event, and save . text data bss dec hex filename ec i_trace_points.o.orig c i_trace_points.o no change in functionality. zefan rostedt anholt",frustration,2.0
884,e7dc951eecb708d4aef18db4dbf489ba282d16ff,Paul Mundt <lethal@linux-sh.org>,Mon Apr 26 19:09:57 2010 +0900,torvalds/linux,4589,2010Q2,4589 torvalds/linux 2010Q2,sh cpu hotplug support for sh smp. this wires up cpu hotplug for sh smp cpus. presently only secondary cores can be hotplugged given that the boot cpu has to contend with the broadcast timer. when real local timers are implemented this restriction can be lifted. mundt,frustration,4.0
885,7f742c06960f9c9eec17834b96fd84e0e98fbd65,abecsi@webkit.org <abecsi@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Fri Oct 8 14:31:04 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,jocelyn turcotte reviewed by andreas kling. fix wkstringqt.h and wkurlqt.h api problems. wkstringqt.h remove the extern c wkurlqt.h remove the extern c .h fix the forwarded declaration bb,caution,4.0
886,9686b86629bd4931ff367a6ae4aa1461ec362874,cbentzel@chromium.org <cbentzel@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Oct 14 18:56:43 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,"revert make run methods nonvirtual on . i don't think this needs to be reverted, but git cl dcommit went a bit wacky and i'm being conservative. the goal is to turn on wnonvirtualdtor warning for gcc. in this case, the virtual run's do not appear necessary, especially since they are private. if intended to be derived from, there is a delete this in the base class which would point to requiring a virtual destructor. builds, validated that there are no derived classes of . review url chromium.org review url dcbdfc",neutral,2.0
887,22d2240e40cb7138bb1c31def31195af899c726b,piman@chromium.org <piman@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Oct 5 00:07:53 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,don't try to releasetransportdib the dibs that come from pepper this fixes that was introduced by bug. go to with pepper flash and observe no crash review url dcbdfc,neutral,3.0
888,285e0f8633ef0cb4dd9fc48933da4bfc226e613f,jam@chromium.org <jam@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Oct 20 19:08:28 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,update expectations bb,frustration,2.0
889,15909dde57485ab3923d618a8a21a4ccf0291224,jamesr@google.com <jamesr@google.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Oct 11 22:10:01 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,james robinson reviewed by kenneth russell. drt crash in tests canvas due to null drawingbuffer avoid initializing accelerated graphics objects on if there is no drawingcontext associated with the canvas. test accesszerosizedcanvas.html canvasskiaexcessivesize.html todataurlnodata.html with acceleratedcompositing and acceleratedcanvas .cpp webcore webcorereset bb,neutral,3.0
890,7eaa9884f27a200911560f5b81ee77192fb075c7,commit-queue@webkit.org <commit-queue@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Nov 9 04:47:55 2010 +0000,chromium/chromium,4568,2010Q4,4568 chromium/chromium 2010Q4,jenn braithwaite reviewed by pavel feldman. _bindresourceurl in resourcemanager.js may not add resource to map no new tests. pfeldman working on better test harness and tests. .js webinspector.resourcemanager.prototype._bindresourceurl bb,caution,4.0
891,819d67621edba0822352f7ae2a7ccb0387223675,Denys Vlasenko <vda.linux@googlemail.com>,Sat Feb 20 01:03:49 2010 +0100,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,rename .text.page_aligned to .textpage_aligned. vlasenko marek,neutral,5.0
892,b8e80cf386419453678b01bef830f53445ebb15d,Daniel T Chen <crimsun@ubuntu.com>,Tue Mar 30 13:29:28 2010 -0400,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,alsa hda fix db offset for lenovo thinkpad models using buglink the or's hardware distorts at pcm because it does not correspond to db. fix this in patch_ad for all models using the thinkpad quirk. reportedby jane silber cc t chen iwai,satisfaction,2.0
893,727e625cc2c114e449a78f851b0c12edac897a83,Mauro Carvalho Chehab <mchehab@kernel.org>,Fri Mar 12 21:18:14 2010 -0300,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,"ircore export driver name used by ir via uevent now, both driver and keytable names are exported to userspace. this will help userspace to decide when a table need to be replaced by another one. carvalho chehab",neutral,2.0
894,8b6d043b7ee2d1b819dc833d677ea2aead71a0c0,Alan Cox <alan@linux.intel.com>,Mon Mar 29 19:38:00 2010 +0200,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,"resource shared region support superio devices share regions and use operations to chip select. we therefore need to be able to request a resource and wait for it to be freed by whichever other superio device currently hogs it. right now you have to poll which is horrible. add a muxed field to io port resources. if the muxed field is set on the resource and on the request via request_muxed_region then we block until the previous owner of the muxed resource releases their region. this allows us to implement proper resource sharing and locking for superio chips using code of the form enable_my_superio_dev request_muxed_regionx, x, outb sequence to enable chip disable_my_superio_dev outb sequence of disable chip release_regionx, x van schijndel cox barnes",satisfaction,3.0
895,a4c1a148a0c4c690b95938e9577be9e461bc5e5a,Ville Syrjälä <ville.syrjala@nokia.com>,Tue Feb 23 23:36:26 2010 +0100,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,omap omapfb constify some function parameters syrjälä valkeinen,frustration,3.0
896,ccdb357ccb77cc4cbe4f7abee9efd19957f0753a,J. Bruce Fields <bfields@citi.umich.edu>,Tue Mar 2 15:49:21 2010 -0500,torvalds/linux,4589,2010Q1,4589 torvalds/linux 2010Q1,svcrpc treat uid's as unsigned we should consistently treat uid's as unsignedit's confusing when the display of uid's in the cache contents isn't consistent with their representation in upcalls. bruce fields,frustration,2.0
897,f29e37c076cd08004e31297d205d54ac38cf7a20,Alan Cox <alan@lxorguk.ukuu.org.uk>,Thu Feb 7 00:16:41 2008 -0800,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,first pass over termios reporting for the mxser cards cox cc jiri slaby morton torvalds,neutral,4.0
898,1379a5ce3ffc549a7ff3daffc49c5e1c372717a3,Harvey Harrison <harvey.harrison@gmail.com>,Wed Jan 30 13:33:00 2008 +0100,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,"move get_segment_eip to step.c get_segment_eip has similarities to convert_rip_to_linear, and is used in a similar context. move get_segment_eip to step.c to allow easier consolidation. harrison molnar gleixner",frustration,3.0
899,03d72aa18f15df9987fe5837284e15b9ccf6e3f8,venkatesh.pallipadi@intel.com <venkatesh.pallipadi@intel.com>,Tue Mar 18 17:00:19 2008 -0700,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,"pat use reserve free memtype in pci_mmap_page_range add reserve_memtype and free_memtype wrapper for pci_mmap_page_range. free is called on unmap, but identity map continues to be mapped as per pci_mmap_page_range request, until next request for the same region calls ioremap_change_attr, which will go through without conflict. this way of mapping is identical to one used in . pallipadi siddha molnar",neutral,3.0
900,85c42d0dbb129b6bff560dacabec753677d64081,Cyrill Gorcunov <gorcunov@gmail.com>,Sun Feb 17 18:17:18 2008 +0300,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,lds use thread_size instead of numeric constant though we use pda for regular task stack but that is not acceptable for init_task wich is special one. we still have to allocate init_task's stack in that manner. gorcunov ravnborg molnar gleixner,satisfaction,3.0
901,c91f91e5fb04fc8fd8fa4b5e9d949031e631c107,Valentine Barshak <vbarshak@ru.mvista.com>,Wed Feb 27 01:58:53 2008 +1100,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,add missing define target_xx and target_gx to cuboottaishan in order to get the proper boad info bd_info structure defined in ppcboot.h both target_xx and target_x should be defined for all powerpc boards. the boards also need target_gx defined since they have emacs and there are mac addesses in bd_info passed by uboot. barshak boyer,neutral,3.0
902,61191fb272dfa413763416ee828aae28bfd9746e,Luis Correia <luis.f.correia@gmail.com>,Sun Mar 9 22:43:58 2008 +0100,torvalds/linux,4589,2008Q1,4589 torvalds/linux 2008Q1,rtx fix trivial log message fix trivial log message. correia van doorn w. linville,satisfaction,4.0
903,b6ecd5d4f6941628d0140735d3f05eb61907141e,Dmitry Osipenko <digetx@gmail.com>,Mon Jan 18 03:55:24 2021 +0300,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,opp print opp level in debug message of _opp_add_static_v print opp level in debug message of _opp_add_static_v. this helps to chase genpd bugs. testedby peter geis testedby nicolas chauvet testedby matt merhar osipenko kumar,frustration,3.0
904,859da21112520829638a82f458ac2c8c2637e17d,Yong Wu <yong.wu@mediatek.com>,Mon Jan 11 19:18:50 2021 +0800,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,pgtablearm use ias to check the valid iova in unmap use the ias for the valid iova checking in arm_vs_unmap. this is a preparing patch for supporting iova for mediatek. wu murphy figa link deacon,caution,5.0
905,1d7bab6a94458e959f3f55788fd50ddc7d97403b,Alexander Lobakin <alobakin@pm.me>,Tue Feb 2 13:30:54 2021 +0000,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,"mm constify page_is_pfmemalloc argument the function only tests for pageindex, so its argument should be const. lobakin brandeburg rientjes kicinski",neutral,3.0
906,bf45947864764548697e7515fe693e10f173f312,David S. Miller <davem@davemloft.net>,Wed Mar 24 16:42:54 2021 -0700,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,math export mul_u_u_div_u fixes fdbfdbe ptp_qoriq fix overflow in ptp_qoriq_adjfine calcalation s. miller,caution,4.0
907,1c4995b0a576d24bb7ead991fb037c8b47ab6e32,Ville Syrjälä <ville.syrjala@linux.intel.com>,Mon Jan 18 17:43:55 2021 +0200,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,"only enable dfp conversion when outputting ycbcr let's not enable the conversion bit in the dfp unless we're actually outputting ycbcr . it would appear some protocol converters blindy consult this bit even when the source is outputting rgb, resulting in a visual mess. cc closes syrjälä link fixes aafd do ycbcr conversion via dp protocol converters nikula cherry picked from commit afccfbffadaf nikula link",frustration,4.0
908,0d05d7d913892cd093acc5a0ac884ebab9fda67c,Johan Hovold <johan@kernel.org>,Thu Jan 21 11:29:21 2021 +0100,torvalds/linux,4589,2021Q1,4589 torvalds/linux 2021Q1,"usb serial xr fix pin configuration make sure that the modem pins are set up correctly when opening the port to avoid leaving, for example, dtr and rts configured as inputs, which is the device default. this is specifically needed to be able to control dtr and rts when hardware flow control is disabled. fixes cdaab usb serial add usb to serial driver hovold",satisfaction,5.0
909,d1d413e2a985fe03a680387aced6cfb4a2aaba92,zmo@google.com <zmo@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jun 30 01:05:23 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,implement getattachedshaders for webgl. review url dcbdfc,neutral,3.0
910,95b514599720cb8f92ea5579c305d89c8d213a6d,mrowe@apple.com <mrowe@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Jun 9 20:03:37 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,regression webbackforwardlist created via init crashes when additem is called. reviewed by adele peterson. a webbackforwardlist created via init results in a backforwardlist being created with a null m_page. backforwardlist needs to be careful not to dereference m_page without first ensuring it's not null. .cpp webcorebackforwardlistadditem nullcheck m_page. webcorebackforwardlistgoback ditto. webcorebackforwardlistgoforward ditto. webcorebackforwardlistgotoitem ditto. webcorebackforwardlistsetcapacity ditto. bb,frustration,1.0
911,7af4375855d263d75e3b6206888fea9f13456b37,robert@webkit.org <robert@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sat Jun 26 10:10:59 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,"robert hogan unreviewed, qt build fix following remove qwebscriptworld.h from layouttestcontrollerqt.cpp it is no longer exported. layouttestcontrollerqt.cpp bb",neutral,5.0
912,4200a20809504434ab46abf92cd23568b9e2e72f,jcivelli@google.com <jcivelli@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Apr 27 23:19:47 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,adding a way to retrieve firefox proxy settings. review url dcbdfc,satisfaction,3.0
913,abaf773a258a67bb7564119fb6278821323dcb20,simon.fraser@apple.com <simon.fraser@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue May 11 05:47:04 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,"simon fraser reviewed by anders carlsson. allow compositing layers to be connected across iframe boundaries on mac when painting an iframe into a compositing layer, the paintbehaviorflattencompositinglayers flag was mistakenly set, because we'd detect that we were drawing into a bitmap. this caused content to show up in both compositing layers, and the painted background inside the iframe. fix by taking the flattening state from the parent frame, if there is one. for the root frame, we continue to look to see if we're painting into a bitmap. .mm bb",caution,4.0
914,e4f565bec6ebdba25011bf778b49fd618e6a5d1e,evan@chromium.org <evan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Apr 6 16:36:46 2010 +0000,chromium/chromium,4568,2010Q2,4568 chromium/chromium 2010Q2,gtk implement status icons on linux. retry with less build breakage this time. . patch from thiago farina review url dcbdfc,neutral,5.0
915,2e824ad59f678a1ff920144fda9b7dd0815fc010,Linus Torvalds <torvalds@woody.linux-foundation.org>,Thu Nov 29 10:32:19 2007 -0800,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,merge branch 'forlinus' of 'forlinus' of sdio_uart fix sign of paramter status in sdio_uart_receive_chars,frustration,3.0
916,8d089085a4e6d8a91c954130cb4caebd50788a08,Benjamin Herrenschmidt <benh@kernel.crashing.org>,Thu Oct 25 15:27:44 2007 +1000,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,"cleanup smt thread handling this cleans up the smt thread handling, removing some hard coded assumptions and providing a set of helpers to convert between linux cpu numbers, thread numbers and cores. this implementation requires the number of threads per core to be a power of and identical on all cores in the system, but it's an implementation detail, not an api requirement and so this limitation can be lifted in the future if anybody ever needs it. herrenschmidt mackerras",satisfaction,4.0
917,1e3d8abe6d70ccd345bf0210d1184b813403fa94,Arvo Jarve <arvo@softshark.ee>,Tue Oct 30 10:21:33 2007 -0300,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,"limit bandwidth with a response fall in this case, we will be sure that there exists a carrier and the center frequency would be simply . in such a circumstance, the tr loop is simplified to doing a simple check for timing, rather than searching for the same. jarve abraham carvalho chehab",satisfaction,2.0
918,f02bcec5986870b3ddae26f6be1cde0703abfd8a,Mike Frysinger <michael.frysinger@analog.com>,Thu Nov 15 21:29:15 2007 +0800,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,blackfin arch relocate .h to .h like in newer linux trees frysinger wu,neutral,2.0
919,fb93134dfc2a6e6fbedc7c270a31da03fce88db9,Herbert Xu <herbert@gondor.apana.org.au>,Wed Nov 14 15:45:21 2007 -0800,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,"fix size calculation in sk_stream_alloc_pskb we round up the header size in sk_stream_alloc_pskb so that tso packets get zero tail room. unfortunately this rounding up is not coordinated with the select_size function used by tcp to calculate the second parameter of sk_stream_alloc_pskb. as a result, we may allocate more than a page of data in the nontso case when exactly one page is desired. in fact, rounding up the head room is detrimental in the nontso case because it makes memory that would otherwise be available to the payload head room. tso doesn't need this either, all it wants is the guarantee that there is no tail room. so this patch fixes this by adjusting the skb_reserve call so that exactly the requested amount which all callers have calculated in a precise way is made available as tail room. xu s. miller",frustration,5.0
920,d7b174500e5750099537c7f0bc4873f06b6c1b9a,Alan Cox <alan@lxorguk.ukuu.org.uk>,Mon Nov 19 14:43:07 2007 +0000,torvalds/linux,4589,2007Q4,4589 torvalds/linux 2007Q4,pata_pcmcia minor cleanups and support for dual channel cards cox garzik,frustration,4.0
921,1b1bd34834aac5c6480b688445698cfa71b6858c,kov@webkit.org <kov@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Jul 30 17:38:22 2009 +0000,chromium/chromium,4568,2009Q3,4568 chromium/chromium 2009Q3,antonio gomes reviewed by gustavo noronha. code cleanup in mediaplayerprivategstreamer.cpph and videosinkgstreamer.cpph part fixed many code style issues pointed by .py no functionality change at all. .cpp .h .cpp .h bb,neutral,4.0
922,0cfb453028779455e9137e07613ff14c94e2516d,gman@google.com <gman@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Jul 30 00:11:42 2009 +0000,chromium/chromium,4568,2009Q3,4568 chromium/chromium 2009Q3,remove source assets from gclient sync deps dcbdfc,satisfaction,2.0
923,6bdd422f28d527e588793d1215daeec42e139349,eric@webkit.org <eric@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Sep 9 23:41:43 2009 +0000,chromium/chromium,4568,2009Q3,4568 chromium/chromium 2009Q3,cameron mccormack reviewed by eric seidel. svnapply doesn't handle changes to files copied to new directories properly apply don't treat revision patches as being additions if we know that we've just copied a file to this name. bb,neutral,6.0
924,ba2fc69fefc92c872a8c651ea4528450a9f5b31a,tyoshino@google.com <tyoshino@google.com@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Sep 16 07:34:08 2009 +0000,chromium/chromium,4568,2009Q3,4568 chromium/chromium 2009Q3,"add space between type and colon in entries in known_crashes.txt file. looks like without this, pattern match doesn't work on reliability test. review url dcbdfc",frustration,2.0
925,8686d55defaefba169df8eb8c3cb264fae7baeca,estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jul 31 19:46:31 2009 +0000,chromium/chromium,4568,2009Q3,4568 chromium/chromium 2009Q3,gtk show shortcuts in title bar context menu and tab context menu. review url dcbdfc,frustration,4.0
926,97a18dc70430a2dbd03ef794ca072c0e39033ff6,Guillaume Chatelet <gchatelet@google.com>,Wed Sep 18 16:19:40 2019 +0000,llvm/llvm-project,1805,2019Q3,1805 llvm/llvm-project 2019Q3,"align to alignnone conversions summary this is patch is part of a series to introduce an alignment type. see this thread for context see this patch for the introduction of the type reviewers courbet subscribers hiraditya, llvmcommits tags llvm differential revision llvmsvn",frustration,3.0
927,7ed816badeba39ce4e1c025482969876880f3dfc,Nico Weber <nicolasweber@gmx.de>,Tue Aug 13 11:32:54 2019 +0000,llvm/llvm-project,1805,2019Q3,1805 llvm/llvm-project 2019Q3,gn build merge llvmsvn,caution,4.0
928,2ca7370183a104b7769202032e9d5a41c04ed070,Richard Smith <richard-llvm@metafoo.co.uk>,Mon Sep 9 22:26:04 2019 +0000,llvm/llvm-project,1805,2019Q3,1805 llvm/llvm-project 2019Q3,simplify demangler rule for lambdaexpressions to match discussion on cxxabi list. llvmsvn,neutral,2.0
929,5dcec7ce7ae6cd8f6b5aed646c60241a97e86214,Sanjay Patel <spatel@rotateright.com>,Fri Aug 16 13:31:23 2019 +0000,llvm/llvm-project,1805,2019Q3,1805 llvm/llvm-project 2019Q3,"fix fdiv test nfc the test was just added with , but forgot to update the instruction along with the test name. llvmsvn",neutral,4.0
930,3be7081aa122d27779c923cf92b1e7cd254fe302,Simon Pilgrim <llvm-dev@redking.me.uk>,Fri Aug 30 18:19:02 2019 +0000,llvm/llvm-project,1805,2019Q3,1805 llvm/llvm-project 2019Q3,reduceloadwidth remove duplicate sdloc. nfci. sdloc and sdloccast should be equivalent. llvmsvn,caution,4.0
931,2973ab5ea1ba6ef99c90bd2afe792b0e844406dd,brettw@chromium.org <brettw@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Oct 2 23:29:19 2009 +0000,chromium/chromium,4568,2009Q4,4568 chromium/chromium 2009Q4,move the icu string conversions into its own file. this new file is included from the old string_util to avoid changing any callers at this time. review url dcbdfc,neutral,6.0
932,94bda404115532ed6917609ae251975b13d71ce7,weinig@apple.com <weinig@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sat Dec 12 01:09:46 2009 +0000,chromium/chromium,4568,2009Q4,4568 chromium/chromium 2009Q4,make platformwheelevent.h private instead of project. reviewed by dan bernstein. webcorepbxproj bb,frustration,3.0
933,8dca08e1dff0f8cf67555986a0561b5b81860ef0,levin@chromium.org <levin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Tue Nov 10 08:16:58 2009 +0000,chromium/chromium,4568,2009Q4,4568 chromium/chromium 2009Q4,roll webkit deps . chromium.org review url dcbdfc,satisfaction,3.0
934,37014c26593a1706f63d9a91de60357a20c72c3c,ggaren@apple.com <ggaren@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Oct 27 23:29:40 2009 +0000,chromium/chromium,4568,2009Q4,4568 chromium/chromium 2009Q4,"javascriptcore a little bit of refactoring in the date code. patch by geoffrey garen on reviewed by sam weinig. javascriptcore.exp don't export this unused symbol. .cpp jscconstructdate .cpp jscdateinstancedateinstance .h removed some unused functions. changed the default constructor to ensure that a dateinstance is always initialized. .cpp jscdateprototypedateprototype pass an initializer to our constructor, since it now requires one. .cpp wtfmstogregoriandatetime only compute our offset from utc if our output will require it. otherwise, our offset is . updated for refactoring in the date code. patch by geoffrey garen on reviewed by sam weinig. .mm aedescfromjsvalue since we just want a number of milliseconds, do that instead of something more complicated. bb",caution,2.0
935,55284cc95c97e20ccd1364afb37c9fefc64b760b,yaar@chromium.org <yaar@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Thu Oct 29 00:35:35 2009 +0000,chromium/chromium,4568,2009Q4,4568 chromium/chromium 2009Q4,rollback of dcbdfc,satisfaction,4.0
936,fa1c7c24df842849eb1fb713892754537ea462b1,ossy@webkit.org <ossy@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Mon Jan 4 10:05:07 2010 +0000,chromium/chromium,4568,2010Q1,4568 chromium/chromium 2010Q1,"unreviewed trivial fix. moved a test, but it isn't renamed in the skiplist. skipped originvsfunctions.html renamed. bb",neutral,4.0
937,9b3f2ae738035d0fdd285edabbe57e3103dfedc3,nick@chromium.org <nick@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jan 29 01:56:00 2010 +0000,chromium/chromium,4568,2010Q1,4568 chromium/chromium 2010Q1,"fixed bug where shutdown while starting sync leaves things weird. specifically, it leaves the sync data folder around, which causes problems later where it thinks we're already logged into sync. patch contributed by dan tasse new sync data files with nonsense data, enable sync for a user, make sure those files were replaced with real sync data files. review url dcbdfc",neutral,6.0
938,424b94c5846daf2bfd39a27b1d22d9b03e63f11f,rohitrao@chromium.org <rohitrao@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Mon Mar 8 22:06:04 2010 +0000,chromium/chromium,4568,2010Q1,4568 chromium/chromium 2010Q1,"when scrolling a webpage, invalidate the web content area instead of painting immediately. this should prevent us from painting twice per scroll event. scrolling test case in bug , comment . should match safari, not be jerky. review url dcbdfc",neutral,5.0
939,fb4c6a88fe584d0bc11507023b208a210b80a71f,akalin@chromium.org <akalin@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jan 13 03:23:12 2010 +0000,chromium/chromium,4568,2010Q1,4568 chromium/chromium 2010Q1,"use ndebug instead of _debug for libjingle. this makes it so that debug code is used on nonwindows platforms, too. review url dcbdfc",caution,3.0
940,95a90da670674468a47f1322a0c543f773024486,abarth@webkit.org <abarth@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Mar 17 20:52:22 2010 +0000,chromium/chromium,4568,2010Q1,4568 chromium/chromium 2010Q1,adam barth reviewed by eric seidel. add a way for the bots to send messages to irc we'll use these classes to notify webkit about bad svn revisions. this patch just has some skeleton code for us to play with. .py added. .py added. a bot that knows how to talk to irc. .py added. we need to run the bot on its own thread because the irclib needs its own mainloop. this class provides an abstraction of the threading. .py added. .py added. .py added. a threadsafe message queue for sending messages from the main thread to the irc thread. .py added. .py added. __init__.py autoinstall irclib unittests.py bb,neutral,3.0
941,bd3bfeb58aeddb660dc600ded2fa9243e0c2d12b,Felix Oxley <lkml@oxley.org>,Fri Feb 3 03:04:15 2006 -0800,torvalds/linux,4589,2006Q1,4589 torvalds/linux 2006Q1,intrep.c is unsigned char oxley dobriyan morton torvalds,neutral,3.0
942,d1d051b28e9d3c3bed0bd15a2b49df3d04f7768f,Adam Belay <ambx1@neo.rr.com>,Fri Jan 20 09:29:27 2006 +0100,torvalds/linux,4589,2006Q1,4589 torvalds/linux 2006Q1,check return code in pnp_register_card_driver belay iwai,frustration,2.0
943,bb0030797f55c9996ea1cebd16b65750ceb7e4fd,Ingo Molnar <mingo@elte.hu>,Wed Mar 22 00:09:14 2006 -0800,torvalds/linux,4589,2006Q1,4589 torvalds/linux 2006Q1,"security semaphore to mutex conversion. the conversion was generated via scripts, and the result was validated automatically via a script as well. molnar cc stephen smalley cc james morris cc david howells morton torvalds",satisfaction,4.0
944,3d4492f81dd7b486f1be0616a1ce7f73760f406e,Chris Mason <mason@suse.com>,Wed Feb 1 03:06:49 2006 -0800,torvalds/linux,4589,2006Q1,4589 torvalds/linux 2006Q1,reiserfs reiserfs write_ordered_buffers should not oops on dirty nonuptodate bh write_ordered_buffers should handle dirty nonuptodate buffers without a bug mason morton torvalds,satisfaction,5.0
945,349aef0bc4c7f07d685c977e12d0e2d0b5d0e6db,Andrew Morton <akpm@osdl.org>,Sun Jan 8 01:04:36 2006 -0800,torvalds/linux,4589,2006Q1,4589 torvalds/linux 2006Q1,"shrink struct page reduce the size of the pageframe for nr_cpus, config_preempt back to the minimal size by unionising both private and mapping with the pagetable lock. it uses an anonymous struct and hence requires gcc.x. cc hugh dickins morton torvalds",neutral,4.0
946,0752d98ccf8771b41718170d46d11f4020b62818,River Riddle <riddleriver@gmail.com>,Wed Apr 29 16:09:43 2020 -0700,llvm/llvm-project,1805,2020Q2,1805 llvm/llvm-project 2020Q2,"simplify branchopinterface by using mutableoperandrange this range allows for performing many different operations on successor operands, including setting. this removes the need for the explicit canerasesuccessoroperand and erasesuccessoroperand methods. differential revision",caution,3.0
947,1e820e82b1438a52124512175a0e7c6f8d23e158,Georgii Rymar <grimar@accesssoftek.com>,Wed Jun 17 17:42:55 2020 +0300,llvm/llvm-project,1805,2020Q2,1805 llvm/llvm-project 2020Q2,"do not hang when cfi are truncated. currently when the .eh_frame section is truncated so that cfi instructions can't be read, it is possible to enter an infinite loop. it happens because cfiprogramparse does not handle errors properly. this patch fixes the issue. differential revision",satisfaction,1.0
948,95e0d28b71e42c9b7cd77c96f728311981a021f6,Johannes Doerfert <johannes@jdoerfert.de>,Thu Apr 30 12:12:22 2020 -0500,llvm/llvm-project,1805,2020Q2,1805 llvm/llvm-project 2020Q2,"remember only necessary dependences before we eagerly put dependences into the querymap as soon as we encountered them via attributorgetaafor or attributorrecorddependence. now we will wait to see if the dependence is useful, that is if the target is not already in a fixpoint state at the end of the update. if so, there is no need to record the dependence at all. due to the abstraction via attributorupdateaa we will now also treat the very first update during attribute creation as we do subsequent updates. finally this resolves the problematic usage of queriednonfixaa. single run of the attributor module and then cgscc pass oldpm for .c llvmir loc before calls to allocation functions temporary memory allocations peak heap memory consumption . peak rss including heaptrack overhead . total memory leaked . after calls to allocation functions temporary memory allocations peak heap memory consumption . peak rss including heaptrack overhead . total memory leaked . difference calls to allocation functions temporary memory allocations peak heap memory consumption . peak rss including heaptrack overhead total memory leaked",satisfaction,2.0
949,e79d002309cb52b12f9bf4e205ffc9805e2223d7,Tim Renouf <tpr.ll@botech.co.uk>,Thu May 21 20:31:24 2020 +0100,llvm/llvm-project,1805,2020Q2,1805 llvm/llvm-project 2020Q2,"msgpackdocumentreadfromblob now merges the readfromblob method can now be used to read msgpack into a document that already contains something, merging the two. there is a new merger argument to readfromblob, a callback function to resolve conflicts. differential revision",frustration,2.0
950,c7be6a86f44a0df4f47c183c828ea3e29840ade2,Craig Topper <craig.topper@gmail.com>,Sat May 9 11:25:36 2020 -0700,llvm/llvm-project,1805,2020Q2,1805 llvm/llvm-project 2020Q2,"teach getundefregclearance that we use undef for inputs to punpck in some cases. this enables the register to be changed from to instead match the other source. this prevents a false dependency. i added all the integer unpck instructions, but the tests only show changes for bw and wd. unfortunately, we can have undef on operand or of the avx instructions. this breaks the interface with hasundefregupdate which used to tell which operand to check. now we scan the input operands looking for an undef register and then ask hasundefregupdate if its an instruction we care about and which operands of that instruction we care about. i also had to make some changes to the load folding code to always pass operand to hasundefregupdate. i've updated hasundefregupdate to return false when forloadfold is set for instructions that are not explicitly blocked for load folding in isel patterns. differential revision",neutral,4.0
951,45bb5c69a0fe1294de6349cba49cb9a3e7641977,Rafael Espindola <rafael.espindola@gmail.com>,Wed Jun 22 21:56:34 2016 +0000,llvm/llvm-project,1805,2016Q2,1805 llvm/llvm-project 2016Q2,extract a few variables to make 'if' smaller. nfc. llvmsvn,neutral,2.0
952,379609329d7e7db5ae3c95c2aef3726668364a87,Nico Weber <nicolasweber@gmx.de>,Fri Apr 22 00:38:09 2016 +0000,llvm/llvm-project,1805,2016Q2,1805 llvm/llvm-project 2016Q2,try to get test passing on os x see comment at top of file. llvmsvn,frustration,5.0
953,b114fd65fcf43206652c0eacd0fcecce9ab5f17a,Sanjay Patel <spatel@rotateright.com>,Fri Jun 10 20:33:50 2016 +0000,llvm/llvm-project,1805,2016Q2,1805 llvm/llvm-project 2016Q2,enable bitcasted transforms the vector cases don't change because we already have folds in to look through and remove bitcasts. llvmsvn,frustration,3.0
954,44de0ad6a89690072ef20c431aa6a4665859034c,Miklos Vajna <vmiklos@vmiklos.hu>,Mon Jun 27 21:04:53 2016 +0000,llvm/llvm-project,1805,2016Q2,1805 llvm/llvm-project 2016Q2,"clangrename try to make classtestreplacements more reliable as it failed on e.g. with trouble iterating over directory 'clang' no such file or directory a reliable way to trigger the problem locally is to run all clangrename tests in parallel in a loop for i in seq do llvmlit v . break done change the test script to be more similar to clangcheck.cpp, that way the above command doesn't fail for me anymore. llvmsvn",satisfaction,4.0
955,819e9cdfb44174f6b7c5dd520b72616c91e445a6,Mehdi Amini <mehdi.amini@apple.com>,Mon May 16 19:33:07 2016 +0000,llvm/llvm-project,1805,2016Q2,1805 llvm/llvm-project 2016Q2,"thinlto sort inputs and schedule by decreasing size this is a compile time optimization keeping a large file to process at the end hurts parallelism. the heurisitic used right now is the input buffer size, however we may want to consider the number of functions to import or the different number of files to load for importing as well. from mehdi amini llvmsvn",neutral,3.0
956,f0990e104b0858fbdc4c726cd8da1ff166fe2dca,Justin Hibbits <jrh29@alumni.cwru.edu>,Mon Mar 23 09:44:39 2020 -0500,llvm/llvm-project,1805,2020Q1,1805 llvm/llvm-project 2020Q1,"target can't use lwsync, use msync instead the core has a silicon bug that triggers an illegal instruction program trap on any sync other than msync. other cores will typically ignore illegal sync types, and the documentation even implies that the 'illegal' bits are ignored. address this hardware deficiency by only using msync, like the . differential revision",satisfaction,3.0
957,928e9e172305752583a75a8174ab5a87b4e09d80,Sam Clegg <sbc@chromium.org>,Wed Mar 4 11:29:45 2020 -0800,llvm/llvm-project,1805,2020Q1,1805 llvm/llvm-project 2020Q1,add support for rspquoting this also changes to default style to match the host. reviewed by ruiu differential revision,frustration,3.0
958,ca9ba76481f1d2bf1bcf488e235f89847f39c6a4,Thomas Lively <tlively@google.com>,Thu Feb 6 16:29:59 2020 -0800,llvm/llvm-project,1805,2020Q1,1805 llvm/llvm-project 2020Q1,"replace all calls with generalized multivalue calls summary extends the multivalue call infrastructure to tail calls, removes all legacy calls specialized for particular result types, and removes the callindirectfixup pass, since all indirect call arguments are now fixed up directly in the postinsertion hook. in order to keep supporting prettyprinted defs and uses in test expectations, mcinstlower now inserts an immediate containing the number of defs for each call and call_indirect. the instprinter is updated to query this immediate if it is present and determine which mcoperands are defs and uses accordingly. depends on . reviewers aheejin subscribers dschuff, mgorny, , jgravellegoogle, hiraditya, sunfish, llvmcommits tags llvm differential revision",frustration,3.0
959,aefec9ed77f63db832b1235d427b439c04759873,Georgii Rymar <grimar@accesssoftek.com>,Tue Mar 24 14:07:15 2020 +0300,llvm/llvm-project,1805,2020Q1,1805 llvm/llvm-project 2020Q1,"refactor how we dump sections. nfci. this is a nfc splitted from . previously never dumped a normal sht_null section i.e. when it is just zeroed or nonallocatable sht_dynsym sections. this patch does not change the output, but it changes the logic so that we now dump these sections, and them remove them later. it allows us to create and work with our internal representation of sections, i.e. to work with the vector of chunks, what looks cleaner. it is used by and also should help us to support dumping a content that does not belong to a section i.e. to dump some data as fill chunks. differential revision",frustration,4.0
960,d36b2649e5e4d90a3f439e2a16057cd75566c669,Andrew Ng <andrew.ng@sony.com>,Wed Jan 15 11:48:37 2020 +0000,llvm/llvm-project,1805,2020Q1,1805 llvm/llvm-project 2020Q1,"optimization to linkerscriptcomputeinputsections nfc moved the section name check ahead of any filename matching or exclusion. firstly, this reduces the need to retrieve the filename and secondly, reduces the amount of potentially expensive filename pattern matching if such rules are present in the linker script. the impact of this change is particularly significant when linking objects built with ffunctionsections and fstacksizesection, using a linker script that includes nontrivial filename patterns. in a number of such cases, the link time is halved. differential revision",frustration,3.0
961,887f9f0253ba4a52f38810f3056cdf040a6157b3,Takashi Iwai <tiwai@suse.de>,Wed Aug 8 15:20:48 2007 +0200,torvalds/linux,4589,2007Q3,4589 torvalds/linux 2007Q3,"remove ifdefs from oss pcm emulation codes fix makefile to compile files conditionally to config_snd_pcm_oss_plugins, and remove unneeded ifdefs in these files. iwai kysela",neutral,2.0
962,2c392a4f47f41b24432e6aa77bb5167d0bbb10c5,Nicolas George <nicolas.george@ens.fr>,Tue Sep 18 22:46:21 2007 -0700,torvalds/linux,4589,2007Q3,4589 torvalds/linux 2007Q3,"uml use correct type in blkgetsize ioctl i found a type mismatch in uml that makes host block devices unusable as ubd devices on x_ and other bits systems segfault of the mm subsystem in .c, the following lines show that the blkgetsize ioctl expects a pointer to a long case blkgetsize if bdevbd_inodei_size return efbig return put_ulongarg, bdevbd_inodei_size in os.c, os_file_size calls it with an int. the ioctl_list man page should be fixed as well. cc jeff dike morton torvalds",neutral,6.0
963,e5a94af84715d142b1050c927a83dd8b1076774b,Li Yang <leoyang.li@nxp.com>,Tue Jul 3 17:43:16 2007 +0800,torvalds/linux,4589,2007Q3,4589 torvalds/linux 2007Q3,usb platform code rework add usb platform setup code and rework usb platform setup code. move usb platform code to usb.c for different boards with cpu of the same series to share the usb initialization code. yang phillips gala,caution,2.0
964,3fc3e8269fa5c1f35b518dbe18dc48acef3c7684,Greg Kroah-Hartman <gregkh@suse.de>,Wed Jul 18 10:58:02 2007 -0700,torvalds/linux,4589,2007Q3,4589 torvalds/linux 2007Q3,"usb core message clean up urbstatus usage this done in anticipation of removal of urbstatus, which will make that patch easier to review and apply in the future. kroahhartman",neutral,3.0
965,3520c92283bb7ddd59daf90cfc1eb107dc9ab76c,Cornelia Huck <cornelia.huck@de.ibm.com>,Wed Aug 22 13:51:36 2007 +0200,torvalds/linux,4589,2007Q3,4589 torvalds/linux 2007Q3,cio dont forget to set last slot to null in ccw_uevent. huck schwidefsky carstens,satisfaction,2.0
966,a807495fd1907a6ec424e797621c00e4cbeb522e,Craig Topper <craig.topper@intel.com>,Thu May 30 06:48:13 2019 +0000,llvm/llvm-project,1805,2019Q2,1805 llvm/llvm-project 2019Q2,precommit tests for . nfc llvmsvn,frustration,3.0
967,82df97ca8e699bb984046e2dce2d9023189cfcb8,Richard Trieu <rtrieu@google.com>,Sat Jun 22 00:32:19 2019 +0000,llvm/llvm-project,1805,2019Q2,1805 llvm/llvm-project 2019Q2,"skip some typedef types. in some cases, a typedef only strips aways a keyword for a type, keeping the same name as the root record type. this causes some confusion when the type is defined in one modules but only forward declared in another. skipping the typedef and going straight to the record will avoid this issue. typedef struct s s s s s is typedeftype here struct s s s s is recordtype here llvmsvn",frustration,4.0
968,9a0acdf65e7fc390c7a9b085f7aa89bd8baaf0ee,Raphael Isemann <teemperor@gmail.com>,Thu May 2 11:25:50 2019 +0000,llvm/llvm-project,1805,2019Q2,1805 llvm/llvm-project 2019Q2,"add stdstack and stdqueue support to cxxmodulehandler reviewers aprantl, shafik reviewed by aprantl, shafik subscribers lldbcommits tags c_modules_in_lldb, lldb differential revision llvmsvn",frustration,4.0
969,e278ed5a0a209292c2cd56f85547335c3e117f15,jeanPerier <jeanPerier@users.noreply.github.com>,Mon Apr 1 01:44:51 2019 -0700,llvm/llvm-project,1805,2019Q2,1805 llvm/llvm-project 2019Q2,update documentation to reflect current intrinsic procedure support in merge pull request flang from flang originalcommit flangfcacfeaffaebcfebeed,neutral,3.0
970,f9c6e565de2a9e8d596c6ea16c4a7b11c870b720,Aaron Puchert <aaron.puchert@sap.com>,Tue Jun 18 22:52:39 2019 +0000,llvm/llvm-project,1805,2019Q2,1805 llvm/llvm-project 2019Q2,"show note for wmissingprototypes for functions with parameters summary there was a search for nonprototype declarations for the function, but we only showed the results for zeroparameter functions. now we show the note for functions with parameters as well, but we omit the fixit hint suggesting to add void. reviewed by aaron.ballman differential revision llvmsvn",caution,5.0
971,d8b1a271a69dcbf5b58023d7c228e9dbaa25d325,estade@chromium.org <estade@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri May 29 20:24:23 2009 +0000,chromium/chromium,4568,2009Q2,4568 chromium/chromium 2009Q2,put findbar close button back where it belongs. review url dcbdfc,satisfaction,5.0
972,661452b3f486a43f9b102f46aa6d0a097361718b,jcampan@chromium.org <jcampan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Jun 24 16:39:13 2009 +0000,chromium/chromium,4568,2009Q2,4568 chromium/chromium 2009Q2,"the browser test runner was returning the wrong value on . .exe should return on success, on failure. review url dcbdfc",frustration,2.0
973,13f02f8815deb3ca49d394bc5e05ec68a1fb2f78,pkasting@chromium.org <pkasting@chromium.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Apr 21 18:34:35 2009 +0000,chromium/chromium,4568,2009Q2,4568 chromium/chromium 2009Q2,peter kasting reviewed by david hyatt. allow platforms to snap the scroll thumb back to the drag origin during a drag. implement functions for and to do this snapping at distances approximating the native ones. .cpp webcorescrollbarscrollbar webcorescrollbarsetvalue webcorescrollbarscroll webcorescrollbarmovethumb webcorescrollbarsetcurrentpos webcorescrollbarmousemoved webcorescrollbarmousedown .h .h webcorescrollbarthemeshouldsnapbacktodragorigin scrollbarthemechromium.h scrollbarthemechromiumlinux.cpp webcorescrollbarthemechromiumshouldsnapbacktodragorigin scrollbarthemechromiumwin.cpp webcorescrollbarthemechromiumshouldsnapbacktodragorigin scrollbarthemewin.cpp webcorescrollbarthemewinshouldcenteronthumb webcorescrollbarthemewinshouldsnapbacktodragorigin scrollbarthemewin.h bb,satisfaction,3.0
974,29a674b8ad53f0f3b8172dd24d94635034b56b55,agl@chromium.org <agl@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Wed Apr 1 00:47:20 2009 +0000,chromium/chromium,4568,2009Q2,4568 chromium/chromium 2009Q2,"disable deleteurlandfavicon this test started failing. however, reverting doesn't change anything! disabling for now, hclam is looking into it. dcbdfc",neutral,4.0
975,69edc1717f2212329555f3a72207cc4efc37897a,stuartmorgan@chromium.org <stuartmorgan@chromium.org@0039d316-1c4b-4281-b951-d872f2087c98>,Fri Jun 19 17:33:28 2009 +0000,chromium/chromium,4568,2009Q2,4568 chromium/chromium 2009Q2,"add merging algorithm for keychain and metadata db passwordforms, and unit tests for it. not used quite yet, since the metadata database still needs to be integrated into passwordstoremac. review url dcbdfc",frustration,4.0
976,ed09d41c8aa11fd8412211c38bc13220ffaf3070,Simon Pilgrim <llvm-dev@redking.me.uk>,Wed Dec 2 16:57:35 2020 +0000,llvm/llvm-project,1805,2020Q4,1805 llvm/llvm-project 2020Q4,replace march with mtriples fixes build on hosts,neutral,3.0
977,e763e032f8bbf5a4da60d099b1df4cd16e44e139,Duncan P. N. Exon Smith <dexonsmith@apple.com>,Thu Nov 5 18:23:19 2020 -0500,llvm/llvm-project,1805,2020Q4,1805 llvm/llvm-project 2020Q4,"support change inmemoryfilesystemaddfilenoown to take a memorybufferref, nfc found this by chance when looking at the inmemoryfilesystem api, seems like an easy cleanup. differential revision",satisfaction,3.0
978,82f2c61ca084fec5bda631ac6638b50298ddd0f8,cchen <chichunchen844@gmail.com>,Tue Dec 15 13:49:52 2020 -0600,llvm/llvm-project,1805,2020Q4,1805 llvm/llvm-project 2020Q4,"add present modifier in defaultmap clause support present modifier in defaultmap by adding an extra dimension for implicitmap. therefore, we now create ompmapclause in actonopenmpexecutabledirective based on both maptype and maptypemodifier. reviewed by abataev differential revision",frustration,3.0
979,1a51bde1b62511b0a3ecf0f62807acb4bb860965,Fangrui Song <i@maskray.me>,Sat Oct 31 20:33:46 2020 -0800,llvm/llvm-project,1805,2020Q4,1805 llvm/llvm-project 2020Q4,clean up gnumcount.c and fix unused check prefixes,neutral,3.0
980,1f72a0006ca727eab0d279fa9e08855706e4efc3,Filipe Cabecinhas <me@filcab.net>,Mon Mar 2 19:11:53 2015 +0000,llvm/llvm-project,1805,2015Q1,1805 llvm/llvm-project 2015Q1,add fexceptions for targets where it isn't the default. it still tests that objccppoutput turns on fcxxexceptions and fobjcexceptions by being a c and objc file. llvmsvn,frustration,4.0
981,5d1a84b7b857c69c23086d8a1d4e9f75cd25e64a,Chandler Carruth <chandlerc@gmail.com>,Thu Feb 19 15:21:57 2015 +0000,llvm/llvm-project,1805,2015Q1,1805 llvm/llvm-project 2015Q1,"delete still more piles of complex code now that we have a good systematic lowering of vi. this required a slight strategy shift to prefer unpack lowerings in more places. while this isn't a cutanddry win in every case, it is in the overwhelming majority. there are only a few places where the old lowering would probably be a touch faster, and then only by a small margin. in some cases, this is yet another significant improvement. llvmsvn",neutral,2.0
982,7773a72c0f8b746717781898388088eae3b07275,Yaron Keren <yaron.keren@gmail.com>,Mon Mar 23 18:35:01 2015 +0000,llvm/llvm-project,1805,2015Q1,1805 llvm/llvm-project 2015Q1,"add missing elfobjectwriterreset override, like other mc classes. see detailed discussion at and , llvmsvn",neutral,2.0
983,ab2b25bc97a3918e9dfa21a23ece09efcc84972d,David Majnemer <david.majnemer@gmail.com>,Wed Feb 11 22:51:55 2015 +0000,llvm/llvm-project,1805,2015Q1,1805 llvm/llvm-project 2015Q1,unbreak buildbots the next offset should be updated as well. llvmsvn,frustration,4.0
984,3930c4e7d1aa486ccb4245214c0b383f40574a52,Zequan Wu <zequanwu@google.com>,Tue Jul 21 19:15:58 2020 -0700,llvm/llvm-project,1805,2020Q3,1805 llvm/llvm-project 2020Q3,fix failed test case.,satisfaction,6.0
985,db37937a4738f3a697804d8b2244baec076867a2,Meera Nakrani <meera.nakrani@arm.com>,Fri Jul 24 17:46:25 2020 +0000,llvm/llvm-project,1805,2020Q3,1805 llvm/llvm-project 2020Q3,added additional patterns to vabd instruction added extra patterns to vabd instruction so it is selected in place of vsub and vabs. added corresponding regression test too. differential revision,neutral,5.0
986,852447650c75de5f3e9c53a2659589cd2fd36b4d,Simon Pilgrim <llvm-dev@redking.me.uk>,Fri Sep 25 12:32:08 2020 +0100,llvm/llvm-project,1805,2020Q3,1805 llvm/llvm-project 2020Q3,add bswap tests from funnel shift intrinsics based on wip patch in i'm intending to add the intrinsics handling to collectbitparts as a separate patch to make the changes clearer.,frustration,4.0
987,b08abf4c808e98718b8806dafcae1626328676d4,Johannes Doerfert <johannes@jdoerfert.de>,Wed Jul 29 15:46:43 2020 -0500,llvm/llvm-project,1805,2020Q3,1805 llvm/llvm-project 2020Q3,fix issue on windows by allowing dso_local in check the problem with bbeedabaae was that the dso_local is before the void not after. hope this works.,neutral,3.0
988,2cf4845a5f2a5d3c141e5471a28cd899c8aef197,Kelvin Li <kkwli0@gmail.com>,Mon Jul 18 16:09:53 2016 +0000,llvm/llvm-project,1805,2016Q3,1805 llvm/llvm-project 2016Q3,update test cases for compile target_parallel_for_simd_collapse_messages.cpp and target_parallel_for_simd_ordered_messages.cpp give different diagnostic messages in compiling with . the test cases are updated to make it compatible. differential revision llvmsvn,caution,2.0
989,398a8eaf333e40f8264077b7c3d0f0ce89ae7f2f,Haojian Wu <hokein@google.com>,Tue Sep 27 07:53:20 2016 +0000,llvm/llvm-project,1805,2016Q3,1805 llvm/llvm-project 2016Q3,"clarify isstaticstorageclass and hasstaticstorageduration documents. reviewers aaron.ballman subscribers klimek, cfecommits differential revision llvmsvn",satisfaction,5.0
990,20d031948e1c0302a947a89ce0b3235a447bdc02,Eugene Leviant <evgeny.leviant@gmail.com>,Fri Sep 16 15:30:47 2016 +0000,llvm/llvm-project,1805,2016Q3,1805 llvm/llvm-project 2016Q3,improve handling assert outside sections block differential revision llvmsvn,neutral,3.0
991,f114820912b8484a9b40429dd58dd829a87d8c58,Simon Dardis <simon.dardis@imgtec.com>,Wed Aug 24 13:00:47 2016 +0000,llvm/llvm-project,1805,2016Q3,1805 llvm/llvm-project 2016Q3,"preparatory work for a generic scheduler extend instruction definitions from nearly all isas to include appropriate instruction itineraries. change gp prologue generation to use real instructions instead of using a pseudo instruction. reviewers dsanders, vkalintiris differential review llvmsvn",frustration,4.0
992,42d16501e68a3c5465c842434aafbb8658979697,Jessica Paquette <jpaquette@apple.com>,Mon Mar 11 20:51:17 2019 +0000,llvm/llvm-project,1805,2019Q1,1805 llvm/llvm-project 2019Q1,always fall back on .neon.addp. overloaded intrinsics aren't necessarily safe for instruction selection. one such intrinsic is .neon.addp.. this is a temporary workaround to ensure that we always fall back on that intrinsic. eventually this will be replaced with a proper solution. differential revision llvmsvn,frustration,4.0
993,6795eb388442469af74245545b445d9505fdc9d8,Greg Clayton <gclayton@apple.com>,Wed Mar 6 18:04:10 2019 +0000,llvm/llvm-project,1805,2019Q1,1805 llvm/llvm-project 2019Q1,"fix core files for bit architectures that are supported in processelfcore.cpp core files need to know the size of the prstatus header so that we can grab the register values that follow it. the code that figure out this size was using a hard coded list of architecture cores instead of relying on or bit for most cores. the fix here fixes core files for bit arm. prior to this the prstatus header size was being returned as zero and the register values were being taken from the first bytes of the prstatus struct signo, etc. differential revision llvmsvn",caution,5.0
994,ba92e9bb1187a2c43ab727fb9685b65898a87a9d,Sylvestre Ledru <sylvestre@debian.org>,Wed Mar 20 10:02:18 2019 +0000,llvm/llvm-project,1805,2019Q1,1805 llvm/llvm-project 2019Q1,"follow up for add sectionedaddress to debuginfo interfaces summary fix the build failure when perf jit is enabled reviewers avl, dblaikie reviewed by avl subscribers modocache, llvmcommits tags llvm differential revision llvmsvn",caution,2.0
995,9ae71a0357b9ccdb49e709cd513aeaa190bce027,Tim Keith <tkeith@nvidia.com>,Mon Jan 7 11:28:20 2019 -0800,llvm/llvm-project,1805,2019Q1,1805 llvm/llvm-project 2019Q1,"fix crash evaluating kind expression if we fail to evaluate the kind expression we were getting an invalid optional reference. instead, fail with an assert. this can happen if an intrinsic function is not folded, but that will be implemented eventually. originalcommit flang",neutral,6.0
996,b0a8e41cfff717ff067bf63412d6edb0280608cd,Florian Hahn <flo@fhahn.com>,Wed Feb 3 22:45:31 2021 +0000,llvm/llvm-project,1805,2021Q1,1805 llvm/llvm-project 2021Q1,revert use ltoconfig for options nfc. this reverts commit dcfaabbdbdefeadecf because it is causing failures on green dragon.,neutral,3.0
997,0658fc654c758d0bfab7d119ecf94caf5e5276d5,Nico Weber <thakis@chromium.org>,Sun Feb 28 13:42:14 2021 -0500,llvm/llvm-project,1805,2021Q1,1805 llvm/llvm-project 2021Q1,"implement the missing bits of undefined this adds support for undefined dynamic_lookup, and for undefined warning and undefined suppress with flat_namespace. we just replace undefined symbols with a dynamiclookup when we hit them. with this, checkllvm passes when using .lld.darwinnew as host linker. differential revision",neutral,4.0
998,dd879f7dc9f5df614431358e11f21c948429eda6,Simon Pilgrim <llvm-dev@redking.me.uk>,Tue Feb 16 12:02:41 2021 +0000,llvm/llvm-project,1805,2021Q1,1805 llvm/llvm-project 2021Q1,use apintextractbits instead of lshr.trunc. nfci. avoids so many apint instances by directly using the apint reference from getapintvalue.,satisfaction,3.0
999,922a5b894114defb5302e514973de8c9cd23af6a,Yitzhak Mandelbaum <yitzhakm@google.com>,Mon Jan 11 22:28:17 2021 +0000,llvm/llvm-project,1805,2021Q1,1805 llvm/llvm-project 2021Q1,add test for transformerbased checks with diagnostics. adds a test that checks the diagnostic output of the tidy. differential revision,frustration,5.0
1500,f5c4d53efc98baa07554c96fed6a0ebab566c762,Warner Losh <imp@FreeBSD.org>,Wed Aug 30 06:56:03 2000 +0000,freebsd/freebsd-src,1207,2000Q3,1207 freebsd/freebsd-src 2000Q3,add comment about why the deletion of children is necessary in detach.,frustration,7.0
1501,e7edfbf501a1677733fdb114d53f03d18f104a32,David Malone <dwmalone@FreeBSD.org>,Wed Sep 13 09:02:07 2000 +0000,freebsd/freebsd-src,1207,2000Q3,1207 freebsd/freebsd-src 2000Q3,man page for the file format accepted by kbdcontrol l. pr reviewed by sheldonh,neutral,4.0
1502,5f11ec06d6eb1aabeee7076135909773f776775f,isidor <inikolic@microsoft.com>,Mon Dec 4 12:20:40 2017 +0100,microsoft/vscode,303,2017Q4,303 microsoft/vscode 2017Q4,open editors view fix initial open editors size,neutral,3.0
1503,71d332b4645da2c7cf91ea54eaebc4f792ac556d,Johannes Rieken <johannes.rieken@gmail.com>,Wed Oct 18 10:36:47 2017 +0200,microsoft/vscode,303,2017Q4,303 microsoft/vscode 2017Q4,"deco remove opacity, use colors only, remove provider label from proposed api",frustration,5.0
1504,31379d2a13c4b569ebc7ecc47ccc6768d3eb3cde,rees <rees@openbsd.org>,Thu Jun 7 15:31:09 2001 +0000,openbsd/src,932,2001Q2,932 openbsd/src 2001Q2,i hate cvs,frustration,3.0
1505,79d176ec972ef53441eb251f874ec7f071e0c5ba,millert <millert@openbsd.org>,Tue Apr 10 02:32:33 2001 +0000,openbsd/src,932,2001Q2,932 openbsd/src 2001Q2,"space police pet peeves use memcpy not memmove when we don't care about overlapping segments use putsfoo instead of printsn, foo",caution,3.0
1506,abe7ff88e18e8879cda304ce4112ca4517c9f554,Alexander Motin <mav@FreeBSD.org>,Mon Jan 22 04:23:48 2018 +0000,freebsd/freebsd-src,1207,2018Q1,1207 freebsd/freebsd-src 2018Q1,"mfv arc_cksum_is_equal doesn't take into account abdlogic gate arc_cksum_is_equal calls zio_push_transform that requires abd_t second arg, but a void is passed. reviewed by matthew ahrens reviewed by george wilson approved by gordon ross author roman strashkin",frustration,3.0
1507,d66c741396fa81168fc70bb0e81689fc2ab2581f,Kyle Evans <kevans@FreeBSD.org>,Wed Feb 21 01:52:42 2018 +0000,freebsd/freebsd-src,1207,2018Q1,1207 freebsd/freebsd-src 2018Q1,"lualoader output failed to parse messages i can't find any good reason these aren't enabled, so enable them. the silent runs will only return false on actual parse errors, so it's ok to be loud about those failures.",satisfaction,3.0
1508,f9f1c24eb8f0d9bf4607562576a2095909c3fa06,Kazu Hirata <kazu@cs.umass.edu>,Tue Sep 28 11:55:45 2004 +0000,gcc-mirror/gcc,848,2004Q3,848 gcc-mirror/gcc 2004Q3,tree.c fix a comment typo. Fromsvn,frustration,1.0
1509,b6ad178e2ee4c3fdcf7e231f51f83aebc107554f,Andreas Tobler <a.tobler@schweiz.ch>,Tue Sep 21 11:22:00 2004 +0200,gcc-mirror/gcc,848,2004Q3,848 gcc-mirror/gcc 2004Q3,decl.c reshape_init_array initialize max_index_cst to fix bootstrap failure. andreas tobler decl.c reshape_init_array initialize max_index_cst to fix bootstrap failure. fromsvn,satisfaction,3.0
1510,9dbab393d9e895650acfa75d63ac944e498ca370,Dimitry Andric <dim@FreeBSD.org>,Sat Sep 10 16:51:39 2016 +0000,freebsd/freebsd-src,1207,2016Q3,1207 freebsd/freebsd-src 2016Q3,"pull in from upstream llvm trunk by krzysztof parzyszek claim stack frame before storing into it, if no red zone is present unlike , does not have red zone. in the absence of it there is no guarantee that this part of the stack will not be modified by any interrupt. to avoid this, make sure to claim the stack frame first before storing into it. this fixes differential revision",neutral,3.0
1511,9e6efea6988ed72f25c4c423f5bbfb8b2154f711,Sepherosa Ziehau <sephe@FreeBSD.org>,Tue Jul 12 05:31:33 2016 +0000,freebsd/freebsd-src,1207,2016Q3,1207 freebsd/freebsd-src 2016Q3,"don't be oversmart in default cpu selection. pin the channel to by default. drivers having special channelcpu mapping requirement should call vmbus_channel_cpu_set,rr themselves. mfc after week sponsored by microsoft ostc differential revision",neutral,3.0
1512,dfe29ae7f84dccb3a989ed1f5d73bde3f58d4ed8,rkilingr <ravikirankilingar@gmail.com>,Sun Jan 31 20:56:11 2021 +0530,kubernetes/kubernetes,464,2021Q1,464 kubernetes/kubernetes 2021Q1,provides capacity for make slice providing capacity for slice decreases memory allocations performed,neutral,4.0
1513,c14ff1a674ed0c6e6677aad444e2f0ee1cff0618,David Eads <deads@redhat.com>,Thu Mar 4 13:55:31 2021 -0500,kubernetes/kubernetes,464,2021Q1,464 kubernetes/kubernetes 2021Q1,remove more crd vbeta client dependencies,neutral,5.0
1514,a962d80b9999b7ad8e1720bbcd5197c15b231eac,Caleb Woodbine <caleb@ii.coop>,Thu Apr 2 10:53:22 2020 +1300,kubernetes/kubernetes,464,2020Q2,464 kubernetes/kubernetes 2020Q2,update and improve replicationcontroller resource lifecycle test,frustration,1.0
1515,698eda3079bb5af3c5b617bbd230a27f8a690e63,Aldo Culquicondor <acondor@google.com>,Wed Jun 17 17:49:30 2020 -0400,kubernetes/kubernetes,464,2020Q2,464 kubernetes/kubernetes 2020Q2,add profile label to scheduler extension point metrics culquicondor,frustration,3.0
1516,596828bab24192b893c6c0e27f81656458753db9,Andrew Thompson <thompsa@FreeBSD.org>,Thu Dec 31 00:19:16 2009 +0000,freebsd/freebsd-src,1207,2009Q4,1207 freebsd/freebsd-src 2009Q4,mfc move all mass storage quirks over to the usb quirk module. submitted by hans petter selasky,caution,4.0
1517,6ab1fc9fb10d9622a054972ef642738760b4c385,Ulf Lilleengen <lulf@FreeBSD.org>,Sun Nov 8 17:59:55 2009 +0000,freebsd/freebsd-src,1207,2009Q4,1207 freebsd/freebsd-src 2009Q4,mfc add support for marvell yukon e device. submitted by mario lobo,caution,3.0
1518,781eb7444e5b58344a233e1ed3f96ed145e4a493,Baptiste Daroussin <bapt@FreeBSD.org>,Mon May 25 20:29:35 2015 +0000,freebsd/freebsd-src,1207,2015Q2,1207 freebsd/freebsd-src 2015Q2,"ntp is now again libreadline free, so only build libreadline for gdb",satisfaction,3.0
1519,49672bcc54d103349b8bc0f3d99ce7734b694319,John-Mark Gurney <jmg@FreeBSD.org>,Thu Jun 11 13:05:37 2015 +0000,freebsd/freebsd-src,1207,2015Q2,1207 freebsd/freebsd-src 2015Q2,"drop key_sa_stir_iv as it isn't used reviewed by eri, ae",satisfaction,4.0
1520,98a755bc8f318702d7e5b64ddd7d0fa96b95096c,Xiang Gao <qasdfgtyuiop@gmail.com>,Thu May 28 18:46:15 2020 -0700,pytorch/pytorch,165,2020Q2,165 pytorch/pytorch 2020Q2,"migrate at_dispatch_floating_and_complex_types_and to complex summary no special changes are needed for cpu kernels, some cuda kernels are still doing complex thrustcomplex casting, this will be cleaned up later. but for now, it will be good to just keep it as is, and change the dispatch macro first. pull request resolved differential revision pulled by fbshipitsourceid",frustration,1.0
1521,ee5ad6ce25f465544e12adafaf59dffac4373889,Jerry Zhang <jerryzh@fb.com>,Tue Jun 16 08:12:51 2020 -0700,pytorch/pytorch,165,2020Q2,165 pytorch/pytorch 2020Q2,"pass debug option into insert_quant_dequant pass summary pull request resolved some of the usage, e.g. add_scalar will not be supporting the debug option, that is, we will not have a numerically exact representation of the final quantized model before finalize if people use add scalar. warning will be added in a later pr. test plan imported from oss differential revision fbshipitsourceid bfcfaddfcfbefb",satisfaction,5.0
1522,42b62d843fe07c7e4ccd558b3ad57e5fae0a0c67,kettenis <kettenis@openbsd.org>,Sat Dec 30 20:37:46 2006 +0000,openbsd/src,932,2006Q4,932 openbsd/src 2006Q4,"rewrite eephy to take advantage of generic phy code. enable auto on phy's that support it. disable energy detect on phy's that need it. tested on gem, msk, nfe, sk, stge",neutral,4.0
1523,3258cee5a78dbaf2e83f1311d84bfaae1a3785f8,mglocker <mglocker@openbsd.org>,Tue Nov 7 21:39:32 2006 +0000,openbsd/src,932,2006Q4,932 openbsd/src 2006Q4,add tx done cleanup.,satisfaction,4.0
1524,b5a00bdb607c05b3699e549dea4a850607208086,Poul-Henning Kamp <phk@FreeBSD.org>,Thu Nov 4 09:37:50 2004 +0000,freebsd/freebsd-src,1207,2004Q4,1207 freebsd/freebsd-src 2004Q4,eliminate the embedded struct bio in struct buf. saves approx bytes per buf depending on architecture.,frustration,5.0
1525,1ac62e0b31e6111f62dce30cef6548d9ab3ba25f,David E. O'Brien <obrien@FreeBSD.org>,Tue Oct 19 17:44:31 2004 +0000,freebsd/freebsd-src,1207,2004Q4,1207 freebsd/freebsd-src 2004Q4,get prototypes for libc functions. use the correct printf format for size_t.,satisfaction,3.0
1526,d0e8e6b78fdc6d7ed81ad3c6a5cda62244c76546,k8s-ci-robot <k8s-ci-robot@users.noreply.github.com>,Thu Nov 29 02:01:13 2018 -0800,kubernetes/kubernetes,464,2018Q4,464 kubernetes/kubernetes 2018Q4,merge pull request from fix golint problem of volume nfs,satisfaction,4.0
1527,e40209a433cf19c5a2d4dd03d3e123e94690ff30,k8s-ci-robot <k8s-ci-robot@users.noreply.github.com>,Mon Nov 5 19:04:54 2018 -0800,kubernetes/kubernetes,464,2018Q4,464 kubernetes/kubernetes 2018Q4,merge pull request from fix local volume getvolumesourcefstype func by golint,neutral,4.0
1528,6c1d9637b73b7ef3c781561a06c28612ab8aa425,Ian Lepore <ian@FreeBSD.org>,Sun Dec 28 18:38:25 2014 +0000,freebsd/freebsd-src,1207,2014Q4,1207 freebsd/freebsd-src 2014Q4,"add cache maintenance functions which will be used by startup code to initially set up the mmu. some day they may also be useful as part of handling, when we get better at power management. submitted by svatopluk kraus , michal meloun",neutral,4.0
1529,62722f7d5b333a239a83f42106a830c9481faa02,Xin LI <delphij@FreeBSD.org>,Fri Dec 19 00:20:29 2014 +0000,freebsd/freebsd-src,1207,2014Q4,1207 freebsd/freebsd-src 2014Q4,add missing continue we can't proceed further if the kernel does not panic with zfs_panic_recover. illumos issue zfs_blkptr_verify should continue after zfs_panic_recover reported by coverity cid,neutral,6.0
1530,d95b9fad69e3ccb55ac21e0eaaa83cc242937d4d,Doug Gregor <dgregor@apple.com>,Tue Jul 1 17:11:32 2014 +0000,apple/swift,556,2014Q3,556 apple/swift 2014Q3,"cmake skeletal infrastructure for building multiple variants of swift libraries for ios, ios simulator, etc.. this is behind a flag because it doesnt work yet. however, were starting to see semisensible command lines coming out of it. swift svn",neutral,4.0
1531,7676259ecc0a71a81ef08ae6d7a2df8905da9605,Chris Lattner <clattner@nondot.org>,Tue Jul 29 00:27:43 2014 +0000,apple/swift,556,2014Q3,556 apple/swift 2014Q3,"fix to compile into the behaviorly correct code by cse'sing subscripts that are identical. also, add a dump method to pathcomponent to help visualize debug lvalue structures. swift svn",neutral,3.0
1532,9d8d0841292544241827a51d44aa88fbbde85cf2,Andre Weinand <aweinand@microsoft.com>,Thu Jul 25 19:05:39 2019 +0200,microsoft/vscode,303,2019Q3,303 microsoft/vscode 2019Q3,properly use default terminal for debug fixes,neutral,5.0
1533,3fa5e013d12bdc4baf4e61880081985e2b4ef0b0,Alex Ross <alros@microsoft.com>,Thu Sep 5 11:18:08 2019 +0200,microsoft/vscode,303,2019Q3,303 microsoft/vscode 2019Q3,show create tasks.json file from template in workspaces fixes,satisfaction,3.0
1534,fa61a6ff52b68535f2046370c84a06f3848aabf2,Tom Rhodes <trhodes@FreeBSD.org>,Tue Nov 11 19:20:13 2003 +0000,freebsd/freebsd-src,1207,2003Q4,1207 freebsd/freebsd-src 2003Q4,help bmah out and add the ips entity.,satisfaction,4.0
1535,0f7d82315ac4640dd1c2adb049ffc756ffea5493,Hidetoshi Shimokawa <simokawa@FreeBSD.org>,Fri Nov 7 12:49:55 2003 +0000,freebsd/freebsd-src,1207,2003Q4,1207 freebsd/freebsd-src 2003Q4,remove obsolete disklabel and newfs options.,satisfaction,4.0
1536,3c44edc9cbbba9423f0c2a63aa7129111aba9a54,miod <miod@openbsd.org>,Mon May 16 14:02:47 2005 +0000,openbsd/src,932,2005Q2,932 openbsd/src 2005Q2,mention no more pt_etfpregs on .,neutral,3.0
1537,88cc454fff9beeb696fa4807826144751348f6e4,miod <miod@openbsd.org>,Thu May 26 16:35:56 2005 +0000,openbsd/src,932,2005Q2,932 openbsd/src 2005Q2,sync with uvm_mmap api change.,caution,4.0
1538,98c12ca6b6048849b82eccea68a2cf70aa3c2e53,David E. O'Brien <obrien@FreeBSD.org>,Wed Nov 15 20:52:56 2000 +0000,freebsd/freebsd-src,1207,2000Q4,1207 freebsd/freebsd-src 2000Q4,"import of gnu binutils version believe it or not, this is heavily stripped down.",frustration,3.0
1539,34944d48854653ec004c122f010f2ed232a85751,Josef Karthauser <joe@FreeBSD.org>,Fri Nov 10 15:21:37 2000 +0000,freebsd/freebsd-src,1207,2000Q4,1207 freebsd/freebsd-src 2000Q4,"define a new special type buildopts. this allows build flags to be specified for a particular program from within the crunch.conf file, eg prog special buildopts dnokldload dnonat dnoatm this adds 'dnokldload dnonat dnoatm' to make targets related to when determining which object files to build and when calculating dependencies and building the targets.",satisfaction,4.0
1540,3358b269680fc7b72bdab6ec2c8259f4d5969360,Martin Aeschlimann <martinae@microsoft.com>,Thu Jan 19 16:41:35 2017 +0100,microsoft/vscode,303,2017Q1,303 microsoft/vscode 2017Q1,improve color decorator updating,satisfaction,2.0
1541,a2a077b088a55c2430519127c120a5ebcaa9a5ce,Johannes Rieken <johannes.rieken@gmail.com>,Wed Jan 25 15:56:02 2017 +0100,microsoft/vscode,303,2017Q1,303 microsoft/vscode 2017Q1,"optionally allow to specify selection at which to insert a snippet,",satisfaction,4.0
1542,4e27a7b1e4d23bfe5fed9de538fa0c1e7ce066c9,kettenis <kettenis@openbsd.org>,Mon Feb 10 20:30:05 2014 +0000,openbsd/src,932,2014Q1,932 openbsd/src 2014Q1,"to prevent lock ordering problems with the kernel lock, we need to make sure we block all interrupts that can grab the kernel lock. the simplest way to achieve this is to make sure mutexes always raise the ipl to the highest level that has interrupts that grab the kernel lock. this will allow us to have mpsafe interrupt handlers at lower priority levels. no change for nonmultiprocessor kernels. ok miod",neutral,5.0
1543,9e8b7e050f056305de7dcbdc963defd5659d7cf9,mpi <mpi@openbsd.org>,Thu Mar 27 10:44:23 2014 +0000,openbsd/src,932,2014Q1,932 openbsd/src 2014Q1,"stop dereferencing the ifp pointer present in the packet header all over the input path since it is going to die. should be no functional change. ok mikeb, lteo, benno",satisfaction,4.0
1544,d78c81b6de8d53c5399109be8dfa0a15400acc14,Steve Naroff <snaroff@apple.com>,Thu Dec 13 18:18:56 2007 +0000,llvm/llvm-project,1805,2007Q4,1805 llvm/llvm-project 2007Q4,"semaactonfinishfunctionbody since we no longer synthesize a functiondecl for each method, remove the unconditional initialization to and corresponding comment. llvmsvn",neutral,5.0
1545,3c9c7b84fe1f8fd5e1e551c5e91eec7b2f4bf5a1,Ted Kremenek <kremenek@apple.com>,Wed Nov 14 08:06:37 2007 +0000,llvm/llvm-project,1805,2007Q4,1805 llvm/llvm-project 2007Q4,"implemented serialization of recorddecls. changed serialization of tagtype to have an owning pointer to the referred tagdecl. this should hopefully fix a bug where tagdecls including decls from structs, etc. were not serialized. llvmsvn",neutral,5.0
1546,77f2227a764dacd3e77b39d4684398c1e9af2f09,nicm <nicm@openbsd.org>,Fri Mar 24 07:14:27 2017 +0000,openbsd/src,932,2017Q1,932 openbsd/src 2017Q1,show count of search results in copy mode.,neutral,3.0
1547,01c28de3e3e12f23327093fd914363fc1d611f51,ajacoutot <ajacoutot@openbsd.org>,Wed Jan 11 10:57:12 2017 +0000,openbsd/src,932,2017Q1,932 openbsd/src 2017Q1,typo verfied verified ok jmc,frustration,4.0
1548,ffddcf1023c5669012a2ef22510e2953461fd8e0,Chris Lattner <clattner@nondot.org>,Sat May 23 16:15:57 2015 +0000,apple/swift,556,2015Q2,556 apple/swift 2015Q2,update validation test for diagnostic change. swift svn,neutral,3.0
1549,4e9b6b803dc6a1bc265248a5197dcda6a8caaf32,Dmitri Gribenko <gribozavr@gmail.com>,Wed Jun 24 20:42:08 2015 +0000,apple/swift,556,2015Q2,556 apple/swift 2015Q2,stdlib rename generic parameters from t to bound on intervals changes halfopeninterval and closedinterval. part of rdar swift svn,neutral,7.0
1550,af6b2e43262e252888dc8b7b069afe9e4c64368b,claudio <claudio@openbsd.org>,Fri Aug 6 12:04:08 2004 +0000,openbsd/src,932,2004Q3,932 openbsd/src 2004Q3,"monster diff to get one step closer to support. cleanup path attribute handling. first of all kill struct attr_flags, all those infos are now in struct rde_aspath. second move attribute parser functions into rde.c, rde_attr.c is shared between bgpd and bgpctl. third reimplementation of the nexthop handling. make it ready and fix some major bug relating to set nexthop. henning ok if it breaks nothing",neutral,4.0
1551,b28794f646558330dfd2d9f7da1e77b4279ca754,otto <otto@openbsd.org>,Mon Aug 23 18:31:25 2004 +0000,openbsd/src,932,2004Q3,932 openbsd/src 2004Q3,"fix fgetln handling and always increment the size if we need to realloc, based on a diff by kjell latter hunk from a diff by sergey s. kostyliov. ok kjell canacar",satisfaction,3.0
1552,b3905c70c4d034aa7cdd7d20dbe58cfd725c80bd,Chris Lattner <sabre@nondot.org>,Fri Feb 9 07:53:20 2007 +0000,llvm/llvm-project,1805,2007Q1,1805 llvm/llvm-project 2007Q1,"remove dead code, the outputconstants function is now only called at module scope. llvmsvn",satisfaction,4.0
1553,c473d8e431a219a3c46cf5b469506b5f6d3d4e79,Chris Lattner <sabre@nondot.org>,Sat Feb 10 19:55:17 2007 +0000,llvm/llvm-project,1805,2007Q1,1805 llvm/llvm-project 2007Q1,"privatize structlayoutmemberoffsets, adding an accessor llvmsvn",neutral,3.0
1554,5b18539f18696151199bcbdde29b056ad610b7e0,Dimitry Andric <dim@FreeBSD.org>,Sat Dec 10 13:25:42 2016 +0000,freebsd/freebsd-src,1207,2016Q4,1207 freebsd/freebsd-src 2016Q4,merge head through .,neutral,4.0
1555,85365dfcbf2855042732a7bdd51a2bf4422dfb07,Andrew Rybchenko <arybchik@FreeBSD.org>,Wed Dec 28 10:40:21 2016 +0000,freebsd/freebsd-src,1207,2016Q4,1207 freebsd/freebsd-src 2016Q4,"sfxge cleanup remove trailing whitespace sponsored by solarflare communications, inc. mfc after days",satisfaction,3.0
1556,74fd40c90c08ac84f073e6017b4eace4abb683e2,Randall Stewart <rrs@FreeBSD.org>,Sat Jun 9 13:44:09 2007 +0000,freebsd/freebsd-src,1207,2007Q2,1207 freebsd/freebsd-src 2007Q2,adds support for sctp.,satisfaction,4.0
1557,fab38de2d3d5c6f63f92797c00987ea93dee0579,Warner Losh <imp@FreeBSD.org>,Sat Jun 16 23:33:57 2007 +0000,freebsd/freebsd-src,1207,2007Q2,1207 freebsd/freebsd-src 2007Q2,only register a ithread handler if the card requests an ithread handler.,neutral,3.0
1558,3c9443b6e58c2c1a7bd9e6e2a74e183c33c98ebc,Patrick Walton <pcwalton@mimiga.net>,Fri Jul 4 17:59:55 2014 -0700,rust-lang/rust,635,2014Q3,635 rust-lang/rust 2014Q3,librustc disallow modules and types from having the same name. this will break code that looks like struct foo mod foo change this code to struct foo impl foo or rename the module. closes .,neutral,3.0
1559,b90e2d4bc7af718729270ab81bd44c9f851154f4,Luqman Aden <me@luqman.ca>,Mon Aug 18 14:12:46 2014 -0400,rust-lang/rust,635,2014Q3,635 rust-lang/rust 2014Q3,add test for packed structs with ffi.,neutral,3.0
1560,02017b30ebebfaeb64a5a86a885773f38057beba,Niko Matsakis <niko@alum.mit.edu>,Wed Oct 21 17:42:25 2015 -0400,rust-lang/rust,635,2015Q4,635 rust-lang/rust 2015Q4,new trans codepath that builds fn body from mir instead.,neutral,4.0
1561,31578f5bbf3d2590629367c77e6e8f0f37155613,Scott Olson <scott@solson.me>,Tue Dec 29 20:32:26 2015 -0600,rust-lang/rust,635,2015Q4,635 rust-lang/rust 2015Q4,fix mir var names and keep them in sync.,neutral,4.0
1562,b7392506fd325139bb42e2593e1bcd2515072d3a,Kelley Cook <kcook@gcc.gnu.org>,Wed Nov 24 22:13:19 2004 +0000,gcc-mirror/gcc,848,2004Q4,848 gcc-mirror/gcc 2004Q4,"makefile.am define aclocal_amflags. kelley cook makefile.am define aclocal_amflags. acinclude. remove. aclocal configure, makefile.in regenerate. .in likewise. fromsvn",neutral,5.0
1563,90d8362105e5fcdbb0e8da463f3315c344e8d2b3,Tom Tromey <tromey@redhat.com>,Tue Dec 21 00:49:45 2004 +0000,gcc-mirror/gcc,848,2004Q4,848 gcc-mirror/gcc 2004Q4,re pr using jni with interpreter and interface methods yields sigsegv pr c new file. out new file. java new file. fromsvn,neutral,2.0
1564,05919c5b73ece38272da8b880dac92e05a7df2d5,Bill Paul <wpaul@FreeBSD.org>,Fri Jul 9 17:36:23 1999 +0000,freebsd/freebsd-src,1207,1999Q3,1207 freebsd/freebsd-src 1999Q3,if_sk.c use pci_port_t instead of u_short if_skreg.h use instead of pmap_kextract hackery on alpha platform,neutral,4.0
1565,c979246fd13c369b90b09ec6fc54efdcf2c8a6bb,Tatsumi Hosokawa <hosokawa@FreeBSD.org>,Sun Jul 25 01:21:44 1999 +0000,freebsd/freebsd-src,1207,1999Q3,1207 freebsd/freebsd-src 1999Q3,ctx fast etherlink pccard support.,satisfaction,6.0
1566,06e34a9476f7b0cd14b1dcc023892d7193230703,Antoine Pitrou <solipsis@pitrou.net>,Tue Apr 27 19:14:15 2010 +0000,python/cpython,462,2010Q2,462 python/cpython 2010Q2,merged revisions via svnmerge from svnssh.trunk antoine.pitrou mar avril lines issue fix compiling the _ssl extension under aix. patch by sridhar ratnakumar.,satisfaction,6.0
1567,80971d4d1c63cd17fd24f01acd19f1f1ee3bf18a,Victor Stinner <victor.stinner@haypocalc.com>,Fri Jun 11 23:57:10 2010 +0000,python/cpython,462,2010Q2,462 python/cpython 2010Q2,"blocked revisions via svnmerge victor.stinner sam juin lines issue on windows, use mbcs codec in strict mode to encode and decode filenames and enable os.fsencode.",satisfaction,3.0
1568,449a99e58f32ec55e582c9c29e94b1edb5feddd6,bors <bors@rust-lang.org>,Sun Feb 2 15:56:27 2014 -0800,rust-lang/rust,635,2014Q1,635 rust-lang/rust 2014Q1,"auto merge of libextra, cc",satisfaction,3.0
1569,65b3036230926a8dac29b5752af78cb9bcc735a9,Flaper Fesp <flaper87@gmail.com>,Tue Feb 18 21:55:18 2014 +0100,rust-lang/rust,635,2014Q1,635 rust-lang/rust 2014Q1,regression test closes,neutral,4.0
1570,a7872b3c1e0ae669991ba54886717d46b1ffd4be,Alex Crichton <alex@alexcrichton.com>,Mon Jun 9 12:44:45 2014 -0700,rust-lang/rust,635,2014Q2,635 rust-lang/rust 2014Q2,"std read home instead of user apparently one of the linux bots doesn't have the user variable defined, and this fix will likely land more quickly than a fix to the bots.",frustration,4.0
1571,02f51211eddbbaf6c6e02cecc78957ce1d5b4600,bors <bors@rust-lang.org>,Tue Apr 8 08:16:52 2014 -0700,rust-lang/rust,635,2014Q2,635 rust-lang/rust 2014Q2,"auto merge of rollup,",frustration,2.0
1572,0558d0b0dcc12fb0d1baf23c8608a6936688ae5c,rpe <rpe@openbsd.org>,Wed Jan 7 19:31:51 2015 +0000,openbsd/src,932,2015Q1,932 openbsd/src 2015Q1,cleanup network config after fetching the responsefile. this enables automatic upgrades on systems with trunk interfaces. ok krw,caution,3.0
1573,87f1f7c6814501e918bab8cc206934edf287af9d,tedu <tedu@openbsd.org>,Thu Jan 15 23:20:33 2015 +0000,openbsd/src,932,2015Q1,932 openbsd/src 2015Q1,simplify des headers by stripping out all the unnecessary userland bits ok deraadt,satisfaction,5.0
1574,8cc1f6cc64e76b11cee23af79828b63cd7be4c09,Ed Maste <emaste@FreeBSD.org>,Mon Apr 17 23:14:26 2017 +0000,freebsd/freebsd-src,1207,2017Q2,1207 freebsd/freebsd-src 2017Q2,import elf tool chain snapshot at from,frustration,5.0
1575,bee2765cc156767a3d034aa9f644007ff8e159f0,Ed Maste <emaste@FreeBSD.org>,Mon Apr 17 23:56:48 2017 +0000,freebsd/freebsd-src,1207,2017Q2,1207 freebsd/freebsd-src 2017Q2,"update elf tool chain to upstream highlights of changes between and improve c demangling improve compatibility with binutils tools wrt. error messages handle additional etc. in readelf and elfdump , cxxfilt use setvbuf to set line buffering for filter use pr mfc after weeks relnotes yes sponsored by the freebsd foundation",neutral,4.0
1576,e1c330759c4b6fda73b8454458d555f09db24090,Craig Rodrigues <rodrigc@FreeBSD.org>,Sun Dec 22 10:58:40 2013 +0000,freebsd/freebsd-src,1207,2013Q4,1207 freebsd/freebsd-src 2013Q4,mention zfs zio nopwrite improvement.,neutral,3.0
1577,202038ae05f0633b8529f1d69afb6abef7d14634,Xin LI <delphij@FreeBSD.org>,Tue Oct 15 21:04:46 2013 +0000,freebsd/freebsd-src,1207,2013Q4,1207 freebsd/freebsd-src 2013Q4,"prevent an unlikely, but real double free issue in gvinum. coverity id",frustration,6.0
1578,249d5c7acc24cfb69d887afbb3237d8e5902c16d,Andrew Turner <andrew@FreeBSD.org>,Fri Jul 10 08:36:22 2015 +0000,freebsd/freebsd-src,1207,2015Q3,1207 freebsd/freebsd-src 2015Q3,"add support for makecontext. this supports up to arguments as this simplifies the code, these can be passed in registers. obtained from abt systems ltd sponsored by the freebsd foundation",neutral,5.0
1579,4ed2d460bd9976f6ff0250d3003ec840da54dd92,Craig Rodrigues <rodrigc@FreeBSD.org>,Thu Jul 30 19:44:46 2015 +0000,freebsd/freebsd-src,1207,2015Q3,1207 freebsd/freebsd-src 2015Q3,use correct number of arguments to semctl for ipc_rmid. pr submitted by araujo differential revision,neutral,3.0
1580,3bf720d9936ef9210ce650edfcf2cb5915ed1620,Joao Moreno <jomo@microsoft.com>,Mon Jan 25 17:02:13 2016 +0100,microsoft/vscode,303,2016Q1,303 microsoft/vscode 2016Q1,suggest limit the lcsdiff algorithm,neutral,4.0
1581,8888fdd3e9a1168e410bc85fa69476d27bbd8492,isidor <inikolic@microsoft.com>,Thu Jan 21 10:13:19 2016 +0100,microsoft/vscode,303,2016Q1,303 microsoft/vscode 2016Q1,output reveal last line on output recieved,neutral,3.0
1582,e8b95f26b58df82b59aae076b62317961f42d188,miod <miod@openbsd.org>,Sat Feb 7 21:14:35 2004 +0000,openbsd/src,932,2004Q1,932 openbsd/src 2004Q1,very timid start at an section. intro is pathetic because it matches generic at the moment.,frustration,3.0
1583,c4feef79b778be565b9d07508a2c7fd83c29befd,mcbride <mcbride@openbsd.org>,Fri Mar 5 12:25:56 2004 +0000,openbsd/src,932,2004Q1,932 openbsd/src 2004Q1,"only send route add or delete messages if it's the first identical address being added or the last identical address being removed, respectively. part of a larger diff approved by markus and dhartmei, api changes held back for now.",frustration,3.0
1584,5bcde31162bba1091435c5ad6c59c5f0c4de039e,Joao Moreno <jomo@microsoft.com>,Mon Jul 25 13:57:31 2016 +0200,microsoft/vscode,303,2016Q3,303 microsoft/vscode 2016Q3,wip nps related to,caution,3.0
1585,2822c06454d606c3cd20d442bbee52527e6adf38,isidor <inikolic@microsoft.com>,Tue Aug 2 20:29:22 2016 +0200,microsoft/vscode,303,2016Q3,303 microsoft/vscode 2016Q3,debt remove composite events from event service fixes,frustration,4.0
1586,a1c697f4d9e180502af35ab75375d6ae8de0ce15,millert <millert@openbsd.org>,Thu Jun 26 17:22:26 2003 +0000,openbsd/src,932,2003Q2,932 openbsd/src 2003Q2,use libc getopt_long missed when i changed diff's main makefile a while ago.,satisfaction,4.0
1587,9c4c17c5a6890e258bdcc148527271cd66631071,jason <jason@openbsd.org>,Mon May 12 08:46:05 2003 +0000,openbsd/src,932,2003Q2,932 openbsd/src 2003Q2,kill another common drahn ok,satisfaction,2.0
1588,2cf96f4558b085ff2d90ed4d1387b082eabb854c,guenther <guenther@openbsd.org>,Mon Aug 15 03:09:02 2016 +0000,openbsd/src,932,2016Q3,932 openbsd/src 2016Q3,"drop z nocombreloc. it was a rev . commit like on arm, so not clear why it was needed then perhaps fixed by the bump in binutils? removing it enables the full relro layout for ld.so.",frustration,3.0
1589,9d9861e50506e812805967f67e774a444cae6fb0,fcambus <fcambus@openbsd.org>,Fri Sep 16 09:25:23 2016 +0000,openbsd/src,932,2016Q3,932 openbsd/src 2016Q3,"removed unnecessary string.h include changed 'format_and_print' argument type to int_t and casting inside the function declaring 'print_counts', 'format_and_print', and 'cnt' as static remove unnecessary cast for null, and void casts from printfs, 'mbtowc' and 'format_and_print' calls in 'cnt', change bufsz type from ssize_t to size_t to avoid converting between pointers to integer types with different sign when calling getline catched when compiling with clang use return instead of exit in main ok jung",frustration,4.0
1590,2dfb054355e0bf769cc6a716e112aa615ad869ff,Benjamin Pasero <benjpas@microsoft.com>,Thu Jun 16 08:52:55 2016 +0200,microsoft/vscode,303,2016Q2,303 microsoft/vscode 2016Q2,drop feedback in editor area,satisfaction,3.0
1591,11e844347f0f73bdfe8e9e8697e4e640e4b425d2,Benjamin Pasero <benjpas@microsoft.com>,Sun Jun 12 11:37:02 2016 +0200,microsoft/vscode,303,2016Q2,303 microsoft/vscode 2016Q2,move more css around,satisfaction,2.0
1592,c43a89b200ce6234a10ac94fd25592950043483f,krw <krw@openbsd.org>,Sun May 18 15:17:50 2014 +0000,openbsd/src,932,2014Q2,932 openbsd/src 2014Q2,don't add a lease to the leases tailq more than once. it tends to make writing out the leases file go into an infinite loop until var is full. reported by roman gorelov via bugs fix tested ok stsp uwe,frustration,2.0
1593,bdab83f375179096549352328105aa0809be4bf2,mpi <mpi@openbsd.org>,Sun May 11 16:33:21 2014 +0000,openbsd/src,932,2014Q2,932 openbsd/src 2014Q2,"the relation between uhci, ohci and their root hub device is delicate. hc drivers do not always accept to be left alone. i don't know if it is a love crisis, but apparently receiving a root hub status change interrupt before having an uhub attached breaks resume. so make sure the root hub is reattached before interrupt get enabled. it is safe to do it during dvact_resume since attaching root hubs do not require any usb transfer. based on a diff from yasuoka, fix a regression introduced in last commit an reported by abel abraham camarillo ojeda on tech and nils r on bugs.",frustration,3.0
1594,ce330a73295544077614086b8f707a00644dd8f7,Maciek Chociej <maciekc@google.com>,Mon Jun 20 20:55:42 2016 -0400,tensorflow/tensorflow,496,2016Q2,496 tensorflow/tensorflow 2016Q2,merge pull request from mnist tutorial incorrectly described a file,frustration,5.0
1595,e458d1923e7054ac843dd0c5e7969e14df42d830,Illia Polosukhin <ilblackdragon@gmail.com>,Fri Jun 3 11:46:27 2016 -0800,tensorflow/tensorflow,496,2016Q2,496 tensorflow/tensorflow 2016Q2,changing api for monitors step_begin to only take step and return list of tensors to run. support distributed training in everyn monitor. change,caution,5.0
1596,81f824cad18e4dc873a8838943217eb9c9f0c1f0,jochen <jochen@chromium.org>,Fri Aug 26 10:39:24 2016 -0700,v8/v8,323,2016Q3,323 v8/v8 2016Q3,"always deserialize scope infos for parsing when looking up variables in the scopeinfo, we did a linear scan of the scopeinfo. since that's unacceptably slow, a context slot cache was added that would speed up repeated lookups of the same variable. instead, just always fully convert the scopeinfo into scopes, so they can lookup variables without scanning the scopeinfo. this also allows for removing the now unused contextslotcache. chromium.org bug cr",frustration,3.0
1597,ff010282b755e878e898061eb5f79d4f19938a37,hpayer <hpayer@chromium.org>,Fri Aug 19 01:12:28 2016 -0700,v8/v8,323,2016Q3,323 v8/v8 2016Q3,"don't clear black areas when deserializing, they will be marked black later anyway. bug cr",neutral,3.0
1598,243d6a501a275a3206cbd30816f36089e931b898,Sean Bruno <sbruno@FreeBSD.org>,Mon Sep 22 19:07:27 2014 +0000,freebsd/freebsd-src,1207,2014Q3,1207 freebsd/freebsd-src 2014Q3,"updating linux support notes, and how to fall back to linux. pr mfc after days relnotes yes",neutral,4.0
1599,4f9c9765a0342388c5264b3ad6e5e474c05cd557,Xin LI <delphij@FreeBSD.org>,Tue Jul 15 20:35:56 2014 +0000,freebsd/freebsd-src,1207,2014Q3,1207 freebsd/freebsd-src 2014Q3,"need controls on issued by zpool import xf zpool import t should accept hex values zpool import t implies extreme rewind, and thus a scrub spa_load_retry retries the same txg spa_load_verify reads all data twice reviewed by christopher siden reviewed by dan mcdonald reviewed by george wilson approved by robert mustacchi gateeddbfdcfccbeeab",neutral,4.0
1600,280d15cd0af7a89bbb9703ead1a83a3258fa3495,Mark Johnston <markj@FreeBSD.org>,Sun Dec 24 19:45:16 2017 +0000,freebsd/freebsd-src,1207,2017Q4,1207 freebsd/freebsd-src 2017Q4,"fix two problems with the page daemon control loop. both issues caused the page daemon to erroneously go to sleep when applications are consuming free pages at a high rate, leaving the application threads blocked in vm_wait. after completing an inactive queue scan, concurrent allocations may have prevented the page daemon from meeting the v_free_min threshold. in this case, the page daemon was going to sleep even when the inactive queue contained plenty of clean pages. pagedaemon_wakeup may be called without the free queues lock held. this can lead to a lost wakeup if a call occurs after the page daemon clears vm_pageout_wanted but before going to sleep. fix by ensuring that we start a new inactive queue scan immediately if v_free_count v_free_min after a prior scan. fix by adding a new subroutine, pagedaemon_wait, called from vm_wait and vm_waitpfault. it wakes up the page daemon if either vm_pages_needed or vm_pageout_wanted is false, and atomically sleeps on v_free_count. reported by jeff reviewed by alc mfc after weeks differential revision",neutral,5.0
1601,bf3341233e14616b4f7d3c9ecca0d80a1c131724,Mateusz Guzik <mjg@FreeBSD.org>,Sat Oct 14 04:27:58 2017 +0000,freebsd/freebsd-src,1207,2017Q4,1207 freebsd/freebsd-src 2017Q4,fix wrong v_free_count annotation f instead of a reported by alc,neutral,4.0
1602,e08eee270e6236b5a9e1e4da6702934d54c4467b,Dmitri Gribenko <gribozavr@gmail.com>,Thu Sep 12 00:32:18 2013 +0000,apple/swift,556,2013Q3,556 apple/swift 2013Q3,"move some of silgen for functions to use funcdecl instead of funcexpr this changes most sillocations to point to funcdecls instead of funcexprs, thus sil diagnostics had to be fixed up for this change. swift svn",satisfaction,3.0
1603,903a4d2ea1081600127444543494249c371cf3c1,Doug Gregor <dgregor@apple.com>,Fri Sep 20 22:15:03 2013 +0000,apple/swift,556,2013Q3,556 apple/swift 2013Q3,implement support for dynamic lookup that resolves to properties. swift svn,neutral,3.0
1604,8a317ce4b3f0a38f7eda84dc3b62b997d7d8baa7,Warner Losh <imp@FreeBSD.org>,Thu Aug 23 05:06:27 2018 +0000,freebsd/freebsd-src,1207,2018Q3,1207 freebsd/freebsd-src 2018Q3,implement blacklisting for devmatch devmatch_blacklist is a space separated list of modules the .ko or full path to exclude from devmatch's processing. differential revision,neutral,3.0
1605,bde62812ae827a962fd30f891c6ce3da90aebfcd,Jung-uk Kim <jkim@FreeBSD.org>,Sat Sep 22 02:23:03 2018 +0000,freebsd/freebsd-src,1207,2018Q3,1207 freebsd/freebsd-src 2018Q3,regen assemply files for .,caution,4.0
1606,d48f9ea7821cbdf5c69c37070cc0af7301f85bc0,Ramya Achutha Rao <ramyar@microsoft.com>,Tue Jul 25 20:15:27 2017 -0700,microsoft/vscode,303,2017Q3,303 microsoft/vscode 2017Q3,tests for wrap with abbreviation,satisfaction,3.0
1607,1aff34003a7276e58f1fcb6e503cccd27484c6d2,Ramya Achutha Rao <ramyar@microsoft.com>,Sun Aug 20 18:05:31 2017 -0700,microsoft/vscode,303,2017Q3,303 microsoft/vscode 2017Q3,inlcude checks atrule for emmet css suggestions fixes,satisfaction,3.0
1608,1bc619ef941fca4db7469d425bb09b4abcf1f3b4,Bob Duff <duff@adacore.com>,Fri Oct 16 10:50:42 2015 +0000,gcc-mirror/gcc,848,2015Q4,848 gcc-mirror/gcc 2015Q4,"sem_util.ads, minor comment fixes. bob duff sem_util.ads, sinput.ads, bcheck.adb minor comment fixes. fromsvn",satisfaction,7.0
1609,1bf2ca0b75a3b6ce72ab4065dbc10b7f80413d4b,Jason Merrill <jason@redhat.com>,Sun Dec 6 23:35:14 2015 -0500,gcc-mirror/gcc,848,2015Q4,848 gcc-mirror/gcc 2015Q4,"fix type.c with . parser.c struct tentative_firewall new. cp_parser_template_id, cp_parser_decltype_expr use it. fromsvn",satisfaction,4.0
1610,8c75ac747fc99d324a854241749b776740630458,mrowe@apple.com <mrowe@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Thu Nov 22 03:08:41 2007 +0000,chromium/chromium,4568,2007Q4,4568 chromium/chromium 2007Q4,fix need to resolve new gcc . warnings. reviewed by tim hatcher. fix all warnings emitted by gcc . when building javascriptcore. this allows builds with werror to succeed. at present they will crash when executed due to code that is not safe under strict aliasing . this required some format strings to be modified in webcore and webkit as their format specifiers did not match the argument type. bb,caution,2.0
1611,9c5a392b44ab70234013c8957cdde92747d7417f,hausmann <hausmann@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Nov 7 14:31:32 2007 +0000,chromium/chromium,4568,2007Q4,4568 chromium/chromium 2007Q4,renamed qwebpagewebaction to qwebpageaction bb,neutral,4.0
1612,2408e359cc9e51bedf561fc62c0a40e337fa63b9,Josh Levenberg <josh11b@tensorflow.org>,Tue Feb 23 13:53:22 2016 -0800,tensorflow/tensorflow,496,2016Q1,496 tensorflow/tensorflow 2016Q1,give kernels its own build file. change,satisfaction,4.0
1613,ec3b8d3fe684e5c4f522fa017e5eeb352913f444,Martin Wicke <wicke@google.com>,Sat Feb 20 21:37:04 2016 -0800,tensorflow/tensorflow,496,2016Q1,496 tensorflow/tensorflow 2016Q1,merge pull request from .,neutral,4.0
1614,3a61f787fbef3a9d79c236c3ef304872c4c752c8,Marius Strobl <marius@FreeBSD.org>,Sat Jun 4 21:54:31 2005 +0000,freebsd/freebsd-src,1207,2005Q2,1207 freebsd/freebsd-src 2005Q2,replace the bandaid for allowing to call sunkbd_configure multiple times which was added in the last revision with what should be a proper solution as long as keyboards that were in after the kernel has fully booted aren't supported. i.e. when sunkbd_configure is called for the highlevel console probe make sure that the keyboard is both successfully configured i.e. also probed and attached. the band aid left the possibility to attach the keyboard device to the highlevel console without attaching the keyboard device itself when the keyboard is plugged in after uart attached but before syscons does.,neutral,4.0
1615,2d0d7ca29f72a3a19c5e1c0db1ce89d480cc5ad2,Xin LI <delphij@FreeBSD.org>,Tue Jun 14 14:50:40 2005 +0000,freebsd/freebsd-src,1207,2005Q2,1207 freebsd/freebsd-src 2005Q2,initialize scan_ifp when doing if_alloc. this prevents an from being panic when attaching. approved by re scottl,neutral,4.0
1616,f4a044ca1d0195b0e7263f70724538bc726d0501,Wanchao Liang <wanchaol@users.noreply.github.com>,Wed Mar 17 18:38:15 2021 -0700,pytorch/pytorch,165,2021Q1,165 pytorch/pytorch 2021Q1,"add options field in summary pull request resolved this pr adds an options field to both so that we have a constant options field even after the initialization of processgroup, which gives us the ability to inspect the options during construction of specific processgroup. also use options inside different methods instead of separate fields. test plan imported from oss reviewed by rohanvarma differential revision pulled by wanchaol fbshipitsourceid bdebebbddbddebae",frustration,2.0
1617,839c2f235f4ca4a2245d4a890c242fa7714c4a7c,Taylor Robie <taylorrobie@fb.com>,Sun Jan 10 19:16:04 2021 -0800,pytorch/pytorch,165,2021Q1,165 pytorch/pytorch 2021Q1,"treat parameter the same way as tensor summary pull request resolved this pr makes the binding code treat parameter the same way as tensor, unlike all other tensor subclasses. this does change the semantics of thpvariable_checkexact, but it isn't used much and it seemed to make sense for the half dozen or so places that it is used. test plan existing unit tests. benchmarks are in reviewed by ezyang differential revision pulled by robieta fbshipitsourceid ecadedbebeabbafc",neutral,3.0
1618,7a53b3f0fc71a5eb289282a996e975c486371647,mickey <mickey@openbsd.org>,Fri Jan 26 20:08:51 2001 +0000,openbsd/src,932,2001Q1,932 openbsd/src 2001Q1,"match on zoom air, as it has been reported by ian cass",frustration,4.0
1619,5ebdc533b53661be6acf2285ecd04e5c94e474c5,deraadt <deraadt@openbsd.org>,Mon Feb 19 10:36:25 2001 +0000,openbsd/src,932,2001Q1,932 openbsd/src 2001Q1,np is changed by recursion,satisfaction,3.0
1620,605edee550d3b9eefe490aff3f956f972ae5c025,mickey <mickey@openbsd.org>,Tue Jan 14 11:00:32 2003 +0000,openbsd/src,932,2003Q1,932 openbsd/src 2003Q1,proped type for bootdev,neutral,6.0
1621,371fd3cd182cbf37fb401e4fe4a2b4638dbafcb9,david <david@openbsd.org>,Tue Mar 11 04:24:04 2003 +0000,openbsd/src,932,2003Q1,932 openbsd/src 2003Q1,"new sentence, new line ok mickey",frustration,5.0
1622,da8e5c40ba71f95c4c3a49046d2e41456a5510ab,chl <chl@openbsd.org>,Tue Oct 30 18:13:45 2007 +0000,openbsd/src,932,2007Q4,932 openbsd/src 2007Q4,these are the latest ones needed to build a kernel on without the definitions in .h ok krw,satisfaction,5.0
1623,6031c50b199d8c8986ba5f1cb959e239d353e7fe,deraadt <deraadt@openbsd.org>,Mon Nov 26 15:36:38 2007 +0000,openbsd/src,932,2007Q4,932 openbsd/src 2007Q4,build our own newfs binary for the media without mfs support to save space.,neutral,4.0
1624,58ae70168f2db0e4761c33cfa08aac170459fac5,Sam Leffler <sam@FreeBSD.org>,Sat Feb 7 01:53:44 2009 +0000,freebsd/freebsd-src,1207,2009Q1,1207 freebsd/freebsd-src 2009Q1,add macro for future regulatory mods,neutral,5.0
1625,2c93c8f2514834d150cd71dc7c26aee5f7af158b,Stefan Farfeleder <stefanf@FreeBSD.org>,Sun Mar 22 17:22:14 2009 +0000,freebsd/freebsd-src,1207,2009Q1,1207 freebsd/freebsd-src 2009Q1,update and extend the tests for alias.,neutral,6.0
1626,2e2de7f23f09ed445e6d2503174e890cc64b9a7c,Archie Cobbs <archie@FreeBSD.org>,Sun May 14 02:18:43 2000 +0000,freebsd/freebsd-src,1207,2000Q2,1207 freebsd/freebsd-src 2000Q2,"move code to handle bpf and bridging for incoming ethernet packets out of the individual drivers and into the common routine ether_input. also, remove the incomplete hack for matching ethernet headers in the ip_fw code. the good news net result of lines removed, and this should make bridging now work with all ethernet drivers. the bad news it's nearly impossible to test every driver, especially for bridging, and i was unable to get much testing help on the mailing lists. reviewed by freebsdnet",frustration,1.0
1627,5c0bff264f85f1f1f07e93340ee15f82308a5b4e,Duncan Barclay <dmlb@FreeBSD.org>,Sun Jun 4 21:14:57 2000 +0000,freebsd/freebsd-src,1207,2000Q2,1207 freebsd/freebsd-src 2000Q2,cosmetic and capture a register dump _before_ i've downloaded values to the card.,neutral,3.0
1628,6fa37bd64a55b4493b4aa8769325f3a0fa9e6706,Weongyo Jeong <weongyo@FreeBSD.org>,Sat Apr 17 23:14:06 2010 +0000,freebsd/freebsd-src,1207,2010Q2,1207 freebsd/freebsd-src 2010Q2,"mfc adds a hardware specific configuration file for uath. pointed by sam reviewed by imp, thompsa",neutral,5.0
1629,0d83258df3bcb8047e13ce813c0bf878a1af387f,Christian Brueffer <brueffer@FreeBSD.org>,Fri May 14 01:25:30 2010 +0000,freebsd/freebsd-src,1207,2010Q2,1207 freebsd/freebsd-src 2010Q2,list tabs in files and add descriptions for the other entries. pr submitted by julian h. stacey obtained from openbsd mfc after week,neutral,3.0
1630,8908953f2be0a64ebb5e949da06f31771044b25e,timothy@apple.com <timothy@apple.com@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Apr 29 17:36:06 2008 +0000,chromium/chromium,4568,2008Q2,4568 chromium/chromium 2008Q2,"make the exceptions that the inspectorcontroller catches log the original file and line number, if present on the exception object. reviewed by adam roben. .cpp webcoreinspectorcontrollercallfunction pass the context to handle_exception. webcoreinspectorcontrollerinspectorcontroller ditto. webcoreinspectorcontrollerscriptobjectready ditto. webcoreinspectorcontrolleraddscriptresource ditto. webcoreinspectorcontrollerupdatescriptresourcerequest ditto. webcoreinspectorcontrollerupdatescriptresourceresponse ditto. webcoreinspectorcontrollerupdatescriptresource ditto. webcoreinspectorcontroller ditto. webcoreinspectorcontrolleraddscriptconsolemessage ditto. webcoreinspectorcontrollerhandleexception take a context. pull the line and sourceurl properties off the exception if it is an object. .h change handleexception to take a context. bb",caution,3.0
1631,5c8b2ef095945a1adb7711fc42ce9bf7536a6ef2,jmalonzo@webkit.org <jmalonzo@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Sat Jun 28 00:24:09 2008 +0000,chromium/chromium,4568,2008Q2,4568 chromium/chromium 2008Q2,jan michael alonzo gtk and qt build fix remove registerfilestack from the build scripts. gnumakefile.am javascriptcore.pri bb,satisfaction,5.0
1632,874aeeede55641e963f98fa663653aafa2a16d87,Jason Merrill <jason@redhat.com>,Mon May 23 23:49:03 2011 -0400,gcc-mirror/gcc,848,2011Q2,848 gcc-mirror/gcc 2011Q2,re pr c use of deleted copy constructor not diagnosed pr c call.c convert_arg_to_ellipsis call force_rvalue. fromsvn,frustration,6.0
1633,73039f89508e969ed62afc147dbf43634b8530ed,Tobias Burnus <burnus@gcc.gnu.org>,Sun Jun 12 00:08:46 2011 +0200,gcc-mirror/gcc,848,2011Q2,848 gcc-mirror/gcc 2011Q2,tobias burnus pr transexpr.c gfc_trans_assignment_ tell gfc_trans_scalar_assign to also deepcopy rhs nonvariables with allocatable components. transarray.c gfc_conv_expr_descriptor ditto. tobias burnus pr gfortran new. fromsvn,frustration,3.0
1634,53fb12dbef9ba18df62ee71757c14836b44b6f01,Andrey V. Elsukov <ae@FreeBSD.org>,Tue May 24 17:03:46 2011 +0000,freebsd/freebsd-src,1207,2011Q2,1207 freebsd/freebsd-src 2011Q2,simplify aligndown macro.,neutral,3.0
1635,9420dc62cd8a74ed372e9a11de80253ce4a88a4f,Kirk McKusick <mckusick@FreeBSD.org>,Sun Jun 12 18:46:48 2011 +0000,freebsd/freebsd-src,1207,2011Q2,1207 freebsd/freebsd-src 2011Q2,disable the soft updates journaling after a filesystem is successfully downgraded to readonly. it will be restarted if the filesystem is upgraded back to readwrite.,frustration,2.0
1636,725bb178d36cb8432845f10a9ad7edd6e63a6383,Andrew Rybchenko <arybchik@FreeBSD.org>,Tue Nov 27 13:00:28 2018 +0000,freebsd/freebsd-src,1207,2018Q4,1207 freebsd/freebsd-src 2018Q4,"sfxge add new loopback modes report supported loopback modes for new link speeds. submitted by andy moreton sponsored by solarflare communications, inc. differential revision",caution,5.0
1637,4926792bc90c2694c74699f6845bb66613ee3a91,Pawel Jakub Dawidek <pjd@FreeBSD.org>,Fri Dec 7 03:13:36 2018 +0000,freebsd/freebsd-src,1207,2018Q4,1207 freebsd/freebsd-src 2018Q4,consider the following situation the sender has .not_terminated file. it gets disconnected. the last trail file is then terminated without adding new data this can happen for example when auditd is being stopped on the sender. after reconnect the .not_terminated was not renamed on the receiver as it should. we were already handling similar situation where the sender crashed and the .not_terminated trail file was renamed to .crash_recovery. extend this case to handle the situation above.,satisfaction,3.0
1638,8cb6926e1668de71706d2e3d7839a3036179f387,Craig Rodrigues <rodrigc@FreeBSD.org>,Mon Nov 14 13:35:08 2005 +0000,freebsd/freebsd-src,1207,2005Q4,1207 freebsd/freebsd-src 2005Q4,eliminate coredump problem introduced by last commit. noticed by guido van rooij,frustration,4.0
1639,1ffe41c1eceba31b36dbe3e8244a503c3cfd51e8,Christian S.J. Peron <csjp@FreeBSD.org>,Mon Oct 31 00:12:19 2005 +0000,freebsd/freebsd-src,1207,2005Q4,1207 freebsd/freebsd-src 2005Q4,"pickup lock in aac_get_bus_info, as this code will call aac_alloc_sync_fib. aac_alloc_sync_fib will assert that the locks are held. this fixes a panic on system boot up when the aac device's bus_generic_attach routine is called. reviewed by scottl",neutral,3.0
1640,28e58934afcc208774f0dc35e881cc1869781f3f,dlg <dlg@openbsd.org>,Wed Jun 2 01:45:14 2010 +0000,openbsd/src,932,2010Q2,932 openbsd/src 2010Q2,push the locking in ciss_scsi_cmd down. we dont need splbio to call scsi_done or to get or put ccbs anymore.,neutral,3.0
1641,d04c0e5ab4961af36b02c9a3093776413b4d8c2d,thib <thib@openbsd.org>,Wed Jun 23 09:36:03 2010 +0000,openbsd/src,932,2010Q2,932 openbsd/src 2010Q2,"fix a bug in uvm_pmr_getpage which could cause us to bounce between an allocating process failing and waking up the pagedaemon and the pagedaemon since everything was dandy. rework the do while logic searching for pages of a certain memtype in a pmr into a while loop where we check if we've found enough pages and break out of the pmr and check the memtype inside the loop. this prevents us from doing an early return without enough pages for the caller even though more pages exist. comments and help from oga, style nit from miod. ok miod, oga",neutral,5.0
1642,33e932190743036b33cf8206a7586735d39711f1,Michael Lippautz <mlippautz@chromium.org>,Mon Jul 30 15:44:58 2018 +0200,v8/v8,323,2018Q3,323 v8/v8 2018Q3,more cleanup the following are ready for iwyu markcompact.h objectsvisiting.h bug,neutral,4.0
1643,196874aa08e092c035697a2972acfac34977bbd0,Leszek Swirski <leszeks@chromium.org>,Wed Sep 19 13:06:32 2018 +0000,v8/v8,323,2018Q3,323 v8/v8 2018Q3,"revert introduce a soft limit on reserved memory this reverts commit bbcbdaffdeacffdf. reason for revert breaks bot original change's description introduce a soft limit on reserved memory currently, wasm memory and wasm code use a shared limit for the total size of reservations. this can cause wasm code reservations to fail because wasm memories used all available reservation space. this cl introduces a soft limit which is used when allocating wasm memory with full guards. if this limit is reached and the respective flag is set, we fall back to allocation without full guards and check against the hard limit. code reservations always check against the hard limit. r bug",frustration,4.0
1644,4f62e49c97c56fb8ccf2de533e83931a814da45b,Robert Dewar <dewar@adacore.com>,Tue Mar 29 18:18:13 2005 +0200,gcc-mirror/gcc,848,2005Q1,848 gcc-mirror/gcc 2005Q1,"par.adb p_name when a bad attribute is returned robert dewar par.adb p_name when a bad attribute is returned, return error, rather than proceed ahead using a junk attribute name. fromsvn",satisfaction,7.0
1645,111e0c9f4b0027d393f46fb8a5805fa2ac68283a,Daniel Berlin <dberlin@dberlin.org>,Sat Jan 22 16:48:23 2005 +0000,gcc-mirror/gcc,848,2005Q1,848 gcc-mirror/gcc 2005Q1,re pr tree treessa causing loops to have more than one bb daniel berlin fix pr tree treessadom.c cprop_operand don't replace loop invaeriant copies with loop variant ones. fromsvn,caution,2.0
1646,91622d03104c4d77c1c8bbb15e0600362f247db3,Eric Holk <eric.holk@gmail.com>,Thu Aug 16 16:26:08 2012 -0700,rust-lang/rust,635,2012Q3,635 rust-lang/rust 2012Q3,make test suite terminate.,neutral,3.0
1647,fe9f0556d28e99417cef022c7486fe01440906f0,Niko Matsakis <niko@alum.mit.edu>,Thu Sep 6 12:30:15 2012 -0700,rust-lang/rust,635,2012Q3,635 rust-lang/rust 2012Q3,refactor ty_var and ty_var_integral into one ty_infer variant,neutral,4.0
1648,3d8993c197af57d7d736f040453fe29d1a4f5d09,Guy Helmer <ghelmer@FreeBSD.org>,Fri Jun 4 03:18:28 1999 +0000,freebsd/freebsd-src,1207,1999Q2,1207 freebsd/freebsd-src 1999Q2,"modify the boot loader to recognize the c flag and pass the rb_cdrom flag to the kernel to mount a cdrom as the root filesystem. alternatively, the boot_cdrom env var can be set. as mike smith noted, c is the wrong way to do this, but this is an acceptable stopgap in lieu of a better way. pr reviewed by",neutral,4.0
1649,6531f8e695ef776aab30ed34f299ce7bec768876,Bruce Evans <bde@FreeBSD.org>,Sat May 22 07:54:38 1999 +0000,freebsd/freebsd-src,1207,1999Q2,1207 freebsd/freebsd-src 1999Q2,fixed disordering in previous commit.,neutral,3.0
1650,011fe33bcbb0763e0532dc855538beddb9c53677,schwarze <schwarze@openbsd.org>,Mon Oct 19 16:27:52 2009 +0000,openbsd/src,932,2009Q4,932 openbsd/src 2009Q4,"sync to multiple improvements to references .rs validate and order .rs child nodes underline book title .b and issuer .i enclose title of article .t in quotes avoid calling mdoc_verr directly, use a proper error code instead",neutral,4.0
1651,b9c9ba68130ab462b3dff3b5b7a9849a245de99c,sobrado <sobrado@openbsd.org>,Wed Oct 28 09:24:45 2009 +0000,openbsd/src,932,2009Q4,932 openbsd/src 2009Q4,wrap at eighty columns.,neutral,5.0
1652,cdd6f38220ae4b6d6b84524fa4b8f684898bad55,Patrick Walton <pcwalton@mimiga.net>,Thu Feb 21 11:08:50 2013 -0800,rust-lang/rust,635,2013Q1,635 rust-lang/rust 2013Q1,librustc demut resolve.,frustration,2.0
1653,405b868ae708949fba91c74746f3a5dd8cbe84a9,Daniel Micay <danielmicay@gmail.com>,Fri Feb 1 13:21:31 2013 -0500,rust-lang/rust,635,2013Q1,635 rust-lang/rust 2013Q1,vim add self type,neutral,4.0
1654,dfa51991efb62e04c7b41d9825d0cff12061e2e4,Richard Sandiford <rdsandiford@googlemail.com>,Mon Dec 5 19:32:16 2011 +0000,gcc-mirror/gcc,848,2011Q4,848 gcc-mirror/gcc 2011Q4,resource.c init_resource_info only consider exit_ignore_stack if there is in epilogue. gcc resource.c init_resource_info only consider exit_ignore_stack if there is in epilogue. fromsvn,frustration,4.0
1655,c623f8372c205a28a1f0aa35932690449a032eb6,Ian Lance Taylor <ian@gcc.gnu.org>,Wed Dec 14 14:48:01 2011 +0000,gcc-mirror/gcc,848,2011Q4,848 gcc-mirror/gcc 2011Q4,compiler permit omitting t in composite literal. fromsvn,neutral,3.0
1656,6a59927d0cd67e9868ae3fd982d84ea77d84202d,Jan Hubicka <jh@suse.cz>,Tue Jan 20 21:36:18 2004 +0100,gcc-mirror/gcc,848,2004Q1,848 gcc-mirror/gcc 2004Q1,"cselib.c include allocpool.h cselib.c include allocpool.h empty_vals, empty_elt_lists, empty_elt_loc_lists kill. elt_loc_list_pool, elt_list_pool, cselib_val_pool declare. new_elt_list, new_elt_loc_list, unchain_one_elt_list, unchain_one_elt_loc_list_pool, unchain_one_value, new_cselib_val simplify using allocpool. cselib_init initialize allocpools. cselib_finish finish allocpools. makefile.in cselib.o depend on allocpool.h fromsvn",satisfaction,4.0
1657,b1dccb2878d087171ec51072708f6dfe656d1d78,Herman A.J. ten Brugge <hermantenbrugge@home.nl>,Sun Jan 25 03:20:16 2004 +0100,gcc-mirror/gcc,848,2004Q1,848 gcc-mirror/gcc 2004Q1,re pr problem with fweb and target herman a.j. ten brugge pr .md movstrqi use match_scratch instead of match_dup. remove movstrqi_small because it conflicts with movstrqi_large. fromsvn,satisfaction,3.0
1658,1407c89427174222847e9d666fb9785cf8967030,mstarzinger <mstarzinger@chromium.org>,Fri Apr 8 05:31:38 2016 -0700,v8/v8,323,2016Q2,323 v8/v8 2016Q2,"remove parseinfoclosure field. the parser should never need to look at the underlying closure object, hence the field can be moved from parseinfo into compilationinfo. chromium.org review url cr",satisfaction,6.0
1659,8b3337278f4202b058b37dcae35f66a7eef8f5c5,machenbach <machenbach@chromium.org>,Tue Apr 19 05:51:36 2016 -0700,v8/v8,323,2016Q2,323 v8/v8 2016Q2,"revert of add page evacuation mode for newold patchset of reason for revert breaks original issue's description add page evacuation mode for newold in a full markcompact gc, instead of copying memory to old space for pages that have more than x live bytes, we just move the whole page over to old space. default value bug committed cr",neutral,4.0
1660,fd820f53e6458223c578b86b217989371f76f300,Joe Groff <jgroff@apple.com>,Fri Sep 11 16:47:07 2015 +0000,apple/swift,556,2015Q3,556 apple/swift 2015Q3,runtime factor out _dynamiccasttofunction. nfc swift svn,caution,4.0
1661,6d3a1cc6fc4a2a2fbab68fcc985cfd8aa0b8747c,Chris Lattner <clattner@nondot.org>,Mon Aug 3 18:37:03 2015 +0000,apple/swift,556,2015Q3,556 apple/swift 2015Q3,"improve a diagnostic, resolving a fixme. swift svn",satisfaction,3.0
1662,262596e76a1b727f8014db3ffcfeae66100a1a71,Evan Cheng <evan.cheng@apple.com>,Fri Aug 31 08:04:17 2007 +0000,llvm/llvm-project,1805,2007Q3,1805 llvm/llvm-project 2007Q3,use stdmap instead of a potentially very sparse array to track val defined by copy from the other live range. minor compile time win when number of val is large. llvmsvn,caution,5.0
1663,f818ccd4635d38195b332c935cf124b88db96f6e,Dan Gohman <gohman@apple.com>,Mon Sep 24 15:50:11 2007 +0000,llvm/llvm-project,1805,2007Q3,1805 llvm/llvm-project 2007Q3,fix a typo in a comment. llvmsvn,neutral,3.0
1664,ad14dc5c45ce3752ec2a7deb19f57fb2ed14c609,Roger Sayle <roger@eyesopen.com>,Fri May 16 02:15:00 2003 +0000,gcc-mirror/gcc,848,2003Q2,848 gcc-mirror/gcc 2003Q2,alpha.h asm_output_skip fix typo. fromsvn,neutral,5.0
1665,a37db56bde9874b6f2113164e2a31c5bc12616c8,Geoffrey Keating <geoffk@apple.com>,Sat Apr 12 02:16:46 2003 +0000,gcc-mirror/gcc,848,2003Q2,848 gcc-mirror/gcc 2003Q2,re pr c anonymous namespaces and compiling the same file twice pr c .texi debugging options document frandomseed. configure.in check for gettimeofday. tree.c flag_random_seed define. default_flag_random_seed new. append_random_chars use flag_random_seed rather than trying to acquire randomness here. tree.h default_flag_random_seed declare. toplev.c display_help add frandomseed and fstacklimit descriptions. decode_f_option handle frandomseed. print_switch_values call default_flag_random_seed. flags.h flag_random_seed declare. configure regenerate. config.in regenerate. tcrtfm use frandomseed. fromsvn,frustration,3.0
1666,1aa4afde80058baf2064c458640e3c4b4bfabc7b,Hong Xu <hong@topbug.net>,Mon Aug 5 12:02:09 2019 -0700,pytorch/pytorch,165,2019Q3,165 pytorch/pytorch 2019Q3,document bool tensors for bitwise_not. summary requested by vadimkantorov at pull request resolved differential revision pulled by gchanan fbshipitsourceid,neutral,3.0
1667,c5a0de23e2c177c1ee15a28de0df44e228719f72,Tzu-Wei Huang <huang.dexter@gmail.com>,Fri Sep 6 14:21:58 2019 -0700,pytorch/pytorch,165,2019Q3,165 pytorch/pytorch 2019Q3,"fix empty graph problem summary this fixes the empty graph problem since pytorch . to prevent such things happen, we have to make the test harder. there levels of verification. lv . make sure that the graph is saved to some event file. currently here lv . make sure the file can be read by tensorboard. lv . make sure the graph in tensorboard is humanfriendly. i think must be involved by a human. is possible, but it will be useless if we want to use lv directly. cc orionr pull request resolved reviewed by sanekmelnikov differential revision pulled by orionr fbshipitsourceid bffeebabcdeefe",caution,3.0
1668,a91b8b809e71ba35280f584c4750efd1a13c2651,Nadav Rotem <nrotem@apple.com>,Tue Dec 24 21:17:06 2013 +0000,apple/swift,556,2013Q4,556 apple/swift 2013Q4,add statistics swift svn,frustration,4.0
1669,ba16f888006ea8b4a2b2b7f316a9c4bee0b51021,Doug Gregor <dgregor@apple.com>,Tue Oct 15 19:20:32 2013 +0000,apple/swift,556,2013Q4,556 apple/swift 2013Q4,unbreak cmake build. swift svn,frustration,4.0
1670,6d8330afb6c925d1092f27919f61d4ce6a3fb1d4,Alex Crichton <alex@alexcrichton.com>,Thu Oct 17 01:40:33 2013 -0700,rust-lang/rust,635,2013Q4,635 rust-lang/rust 2013Q4,"use __morestack to detect stack overflow this commit resumes management of the stack boundaries and limits when switching between tasks. this additionally leverages the __morestack function to run code on stack overflow. the current behavior is to abort the process, but this is probably not the best behavior in the long term for deails, see the comment i wrote up in the stack exhaustion routine.",neutral,5.0
1671,c20186bde5cc0129e4211fc766f117bf43a4b360,Chris Morgan <me@chrismorgan.info>,Wed Oct 30 00:26:25 2013 +1100,rust-lang/rust,635,2013Q4,635 rust-lang/rust 2013Q4,update prelude items in vim syntax file.,neutral,4.0
1672,91c4891af8f7edd32689a9917db5ae81f4ab0c72,Mark Eggleston <mark.eggleston@codethink.com>,Wed Oct 30 08:37:29 2019 +0000,gcc-mirror/gcc,848,2019Q4,848 gcc-mirror/gcc 2019Q4,suppress warning with wnooverwriterecursive. the use of fnoautomatic with frecursive results in a warning implying that recursion will not work. if all relevant local variable have the automatic attribute explicitly declared recursion does work and the warning is redundant. fromsvn,frustration,2.0
1673,b49d29d73ac1e25e1ec7c5279d7493f9be6961bb,Jan Hubicka <hubicka@ucw.cz>,Thu Nov 28 15:44:08 2019 +0100,gcc-mirror/gcc,848,2019Q4,848 gcc-mirror/gcc 2019Q4,"fix profile adjusments while cloning this patch fixes profile updates while cloning. when new clone is produced its global profile is subtracted from the original function. if the original function profile drops to we want to switch from global profiles to profiles which is implemented by combine_with_ipa_count_within. however this is done on all edges independnetly and it may happen that we end up combining global and profiles in one functions which is not a good idea. this implements profile_countcombine_with_ipa_count_within which is able to take into account that the counter is inside function with a given count. profilecount.h profile_countcombine_with_ipa_count_within declare. profilecount.c profile_countcombine_with_ipa_count_within new. cgraphclones.c cgraph_edgeclone, cgraph_nodecreate_clone use it. fromsvn",neutral,3.0
1674,38affafd3541cbbeb2bf13a6753516eb24b8c715,dusan.simicic <dusan.simicic@imgtec.com>,Mon Feb 20 08:21:49 2017 -0800,v8/v8,323,2017Q1,323 v8/v8 2017Q1,mips skip floatconstantfolding tests qnan and snan values have different binary representation on mips compared to architectures. we are skipping these tests because we can't provide specific nans encodings from architectures. bug cr,satisfaction,5.0
1675,876da98a5182a03f631f9ab4469bd6838225cb16,yangguo <yangguo@chromium.org>,Mon Jan 23 02:44:20 2017 -0800,v8/v8,323,2017Q1,323 v8/v8 2017Q1,remove legacy json debug protocol. chromium.org bug croriginal,neutral,3.0
1676,3c2f6d2ecffaee848844a84907d3fe4ccba72629,Jianyu Huang <jianyuhuang@fb.com>,Mon Aug 31 20:33:48 2020 -0700,pytorch/pytorch,165,2020Q3,165 pytorch/pytorch 2020Q3,extend dedup sparseadagrad fusion with stochastic rounding summary pull request resolved add the stochastic rounding support for dedup version of sparseadagrad fusion. ghstacksourceid test plan buck test nosan 'test_fuse_sparse_adagrad_with_sparse_lengths_sum_gradient ..fb.net_transforms.tests.fuse_sparse_ops_test.testfusesparseops' printpassingdetails buck test nosan 'test_fuse_sparse_adagrad_with_sparse_lengths_mean_gradient ..fb.net_transforms.tests.fuse_sparse_ops_test.testfusesparseops' printpassingdetails reviewed by xianjiec differential revision fbshipitsourceid cafebddeebfccdcc,satisfaction,5.0
1677,f30ac66e7970dae2833e390bc623ea29141c8ff9,Jianyu Huang <jianyuhuang@fb.com>,Thu Jul 30 00:58:24 2020 -0700,pytorch/pytorch,165,2020Q3,165 pytorch/pytorch 2020Q3,"fix a performance bug in dedup sparseadagrad op summary pull request resolved we shouldn't use block_size for thread dimensions in linear_index_weight_offsets_dedup_kernel, since the kernel doesn't iterate the embedding dimensions. ghstacksourceid test plan buck test nosan 'test_fuse_sparse_adagrad_with_sparse_lengths_sum_gradient ..fb.net_transforms.tests.fuse_sparse_ops_test.testfusesparseops' printpassingdetails reviewed by differential revision fbshipitsourceid dacffdeeacf",satisfaction,3.0
1678,aa8eff60a35e0abd2710e33ce056934d2141ddf0,Daniel Eischen <deischen@FreeBSD.org>,Thu Feb 23 21:34:08 2006 +0000,freebsd/freebsd-src,1207,2006Q1,1207 freebsd/freebsd-src 2006Q1,"eliminate a race condition in timed waits cv, mutex, and sleeps. mfc candidate. pr",frustration,2.0
1679,668816ed50ac7d9459294a0a46cee219995da3f2,Olivier Houchard <cognet@FreeBSD.org>,Thu Jan 26 18:23:16 2006 +0000,freebsd/freebsd-src,1207,2006Q1,1207 freebsd/freebsd-src 2006Q1,version bump for pts import.,neutral,4.0
1680,4af64d281a12d20b33e4355873ccde73a79c6ddb,miod <miod@openbsd.org>,Sat May 9 18:08:57 2009 +0000,openbsd/src,932,2009Q2,932 openbsd/src 2009Q2,"promote types in arcbios function prototypes from int to long whenever necessary, to allow the same c code to be used against bit arcbios, when compiled in bit mode, or against bit arcbios, when compiled in native mode. soon to be used by the boot blocks this commit doesn't introduce any functional change yet.",neutral,3.0
1681,216c7fa084248249fc3a00e4603797b9bcb9012e,oga <oga@openbsd.org>,Sun May 24 02:06:15 2009 +0000,openbsd/src,932,2009Q2,932 openbsd/src 2009Q2,"if flags to bind_page include bus_dma_coherent, set the snooped bit on the pte. this is currently unused, but will be used soon.",frustration,4.0
1682,31d2e0a9b4f72f35e841f6fca6e809bededa8b81,drahn <drahn@openbsd.org>,Thu Feb 15 20:39:05 2007 +0000,openbsd/src,932,2007Q1,932 openbsd/src 2007Q1,"reorder endpoints so that endpoint numbers match, remove more debug.",satisfaction,3.0
1683,c46014dff06c6d471a228f9753bc219084d0535e,jsg <jsg@openbsd.org>,Wed Feb 14 04:46:44 2007 +0000,openbsd/src,932,2007Q1,932 openbsd/src 2007Q1,remove no longer used rate related,neutral,4.0
1684,431a4fb504cc743a49e11c353eb77a1944cf7a39,ray <ray@openbsd.org>,Tue Mar 21 02:45:09 2006 +0000,openbsd/src,932,2006Q1,932 openbsd/src 2006Q1,allow creation of an rcs file if rcs_create flag set. ok xsa,neutral,4.0
1685,f8c248a612111149961139b15afc2aca7bcf7058,grange <grange@openbsd.org>,Sat Mar 4 16:27:02 2006 +0000,openbsd/src,932,2006Q1,932 openbsd/src 2006Q1,dallas wire bus support. includes the following drivers gpioow wire bus bitbanging through gpio pin onewire wire bus driver owid wire id family type device owtemp wire temperature family type device drivers for rs and usb bus masters will follow. ok deraadt,neutral,4.0
1686,de7621146a30b1a9649e43112ff5d5960c64ee6d,mickey <mickey@openbsd.org>,Sat Mar 30 23:00:01 2002 +0000,openbsd/src,932,2002Q1,932 openbsd/src 2002Q1,fix two evil bugs panic on absent wsdiplay on scrollback missing breaks.,neutral,5.0
1687,33caf085d143c7d986854bb2c8f6d89f6b1579bb,nordin <nordin@openbsd.org>,Mon Mar 25 05:21:17 2002 +0000,openbsd/src,932,2002Q1,932 openbsd/src 2002Q1,enable gettimeofday regression test.,frustration,5.0
1688,55cb016929542dfcf421a86070f6bb4e5cf9f86e,Mike Stump <mrs@apple.com>,Wed May 18 20:02:27 2005 +0000,gcc-mirror/gcc,848,2005Q2,848 gcc-mirror/gcc 2005Q2,"re pr crisaxiself, crisaxislinuxgnu, mmixknuthmmixware, x_unknownlinuxgnu broken .m pr objcact.c struct interface_tuple mark it up for gc. interface_htab it is really a struct interface_tuple. fromsvn",neutral,4.0
1689,8d18c628dde98c3706cdce5a4badf9ebfe8173e5,Zdenek Dvorak <dvorakz@suse.cz>,Tue May 17 21:41:38 2005 +0200,gcc-mirror/gcc,848,2005Q2,848 gcc-mirror/gcc 2005Q2,"ggcpage.c ggc_alloc_stat record amount of memory allocated. ggcpage.c ggc_alloc_stat record amount of memory allocated. ggczone.c ggc_alloc_zone_ ditto. timevar.c timevar_ggc_mem_total new variable. ggc_mem_bound new constant. get_time record ggc memory status. timevar_accumulate accumulate amount of ggc memory. timevar_print print consumption of ggc memory. timevar.def tv_find_referenced_vars, tv_tree_redphi, tv_tree_loop_bounds, tv_tree_loop_ivcanon, tv_tree_vectorization, tv_tree_linear_transform shorten strings to fit in characters. timevar.h struct timevar_time_def add ggc_mem field. timevar_ggc_mem_total declare. fromsvn",satisfaction,3.0
1690,7b01337540bbee093ad4dde7060e21c497a44f18,Eric Botcazou <ebotcazou@adacore.com>,Sat Dec 18 12:52:41 2010 +0000,gcc-mirror/gcc,848,2010Q4,848 gcc-mirror/gcc 2010Q4,re pr tree bit gcc..c fails on sparc pr tree gcc..c add fnotreesra. fromsvn,frustration,2.0
1691,1d85701e5c0d994f70230171c0edf4c5f992e705,Richard Guenther <rguenther@suse.de>,Thu Nov 18 13:10:40 2010 +0000,gcc-mirror/gcc,848,2010Q4,848 gcc-mirror/gcc 2010Q4,re pr failed to bootstraplto richard guenther pr gimple.c gimple_register_type update type_main_variant of type leaders. gimple_register_canonical_type also cache the canoncial type for non type leaders. fromsvn,satisfaction,2.0
1692,bf6a84c0e9b25339e58a6b135fe9fa1bab531eaa,grange <grange@openbsd.org>,Wed Nov 10 10:18:31 2004 +0000,openbsd/src,932,2004Q4,932 openbsd/src 2004Q4,"replace stge_lookup with pci_matchbyid remove useless product description strings don't print pci product revision, pci bus does it for us print interrupt and address string like other drivers do ok brad",neutral,3.0
1693,7e24b1258ab5aecd41be2804eaefc01450a66802,espie <espie@openbsd.org>,Wed Nov 10 09:41:16 2004 +0000,openbsd/src,932,2004Q4,932 openbsd/src 2004Q4,"resurrect e, document that it uses packagesspecs now.",frustration,4.0
1694,b18f8f85e9151195a81833d6862063323338854e,Anton Korobeynikov <asl@math.spbu.ru>,Sat Apr 28 13:45:00 2007 +0000,llvm/llvm-project,1805,2007Q2,1805 llvm/llvm-project 2007Q2,implement review feedback. aliasees can be either globalvalue's or bitcasts of them. llvmsvn,satisfaction,4.0
1695,b2a9048dc4e5d2f1dd4575f5b6b4041eb0a0f191,Chris Lattner <sabre@nondot.org>,Mon Jun 25 21:49:53 2007 +0000,llvm/llvm-project,1805,2007Q2,1805 llvm/llvm-project 2007Q2,"new testcase, the inliner shouldn't inline this. llvmsvn",frustration,2.0
1696,4795e037b51b6a99e57c1e4f1f2b15057e0bbd35,martin <martin@openbsd.org>,Wed Mar 30 11:03:38 2005 +0000,openbsd/src,932,2005Q1,932 openbsd/src 2005Q1,pagesize uses sysctl instead of getpagesize lots of input and ok jmc,neutral,5.0
1697,2947a0f08365f1903d348a5b4788e0a7e0479e7f,uwe <uwe@openbsd.org>,Tue Jan 11 11:47:11 2005 +0000,openbsd/src,932,2005Q1,932 openbsd/src 2005Q1,let 'boot' and 'ls' take arguments of the form .,caution,6.0
1698,253c415a1acba50711c82693426391743ac18040,Vladimir N. Makarov <vmakarov@redhat.com>,Sun Nov 15 11:22:19 2020 -0500,gcc-mirror/gcc,848,2020Q4,848 gcc-mirror/gcc 2020Q4,do not put reload insns in the last empty bb. gcc lra.c lra_process_new_insns don't put reload insns in the last empty bb.,frustration,3.0
1699,6fb8da750ff53faec52aaa6cda31fbc510219926,Eric Botcazou <ebotcazou@adacore.com>,Mon Dec 7 10:34:31 2020 +0100,gcc-mirror/gcc,848,2020Q4,848 gcc-mirror/gcc 2020Q4,fix oversight in earlier change changelog gcc.c gnat_to_gnu_entity put back the else unduly removed.,satisfaction,4.0
1700,011b2c354ed7c4624ce240ad95c38307122c08cd,mickey <mickey@openbsd.org>,Tue Apr 6 18:25:39 2004 +0000,openbsd/src,932,2004Q2,932 openbsd/src 2004Q2,repair last proper unimplemented'' trap check,frustration,3.0
1701,8ba4ecc8cfacb2db3ca1fda2ffc5b5ce0b03723f,markus <markus@openbsd.org>,Sat Jun 26 17:34:16 2004 +0000,openbsd/src,932,2004Q2,932 openbsd/src 2004Q2,"only add ipcomp headers if we've actually compressed the payload with jfb ok hshoexer, jfb",neutral,4.0
1702,6679bb158121cd38281c05e4beabee59eeb5da94,sashan <sashan@openbsd.org>,Thu Oct 20 23:18:43 2016 +0000,openbsd/src,932,2016Q4,932 openbsd/src 2016Q4,"pf should send a challenge ack as response to syn, which matches existing state. extra thanks goes to bluhm for careful testing and fixing patch i've sent to tech o.k. henning bluhm",neutral,3.0
1703,6296db85aa2330a894978054a02303c2b262c67c,rzalamena <rzalamena@openbsd.org>,Mon Oct 10 16:31:35 2016 +0000,openbsd/src,932,2016Q4,932 openbsd/src 2016Q4,fix msgbuf_write usage idiom and modify the treatment for socket close to exit gracefully instead of fataling. ok reyk,frustration,4.0
1704,1bf598561c4901ae20ceaa77de474317d6bd90ef,Matt Bierner <matb@microsoft.com>,Wed Jul 29 16:22:02 2020 -0700,microsoft/vscode,303,2020Q3,303 microsoft/vscode 2020Q3,pick up new ts build,caution,3.0
1705,426dbaeafee98bd58987d48bb097584d66877c6b,Johannes Rieken <johannes.rieken@gmail.com>,Wed Sep 30 08:57:50 2020 +0200,microsoft/vscode,303,2020Q3,303 microsoft/vscode 2020Q3,fix startup timings computation in timer service,satisfaction,6.0
1706,edb8abe5aedefdbc32104560a383de99d58c1278,Johannes Rieken <johannes.rieken@gmail.com>,Thu Nov 17 11:16:33 2016 +0100,microsoft/vscode,303,2016Q4,303 microsoft/vscode 2016Q4,"add builderstyle functionality to the snippetstring,",caution,4.0
1707,5a396424c7188b80b0c752c68d72ee9025b4aeb1,Sandeep Somavarapu <sasomava@microsoft.com>,Tue Oct 18 20:23:59 2016 +0200,microsoft/vscode,303,2016Q4,303 microsoft/vscode 2016Q4,move scanning extensions to extensionsruntimeservice,satisfaction,2.0
1708,2424d051e79b2df1ea1e089e18fb3f3d2801864f,dlg <dlg@openbsd.org>,Tue Jun 16 05:17:09 2020 +0000,openbsd/src,932,2020Q2,932 openbsd/src 2020Q2,how do you use the stoeplitz stuff?,frustration,3.0
1709,532be8f7c39ee23ce699db6a48e0616da5806220,inoguchi <inoguchi@openbsd.org>,Fri May 15 13:45:36 2020 +0000,openbsd/src,932,2020Q2,932 openbsd/src 2020Q2,"add ecdsa certificate test in appstest.sh enabled by e option, and default to disabled rsa certificate is used",neutral,2.0
1710,6287d913c3d1da34de1d24bfba18be5e85af3ca4,John McCall <rjmccall@apple.com>,Sat Jan 31 05:03:51 2015 +0000,apple/swift,556,2015Q1,556 apple/swift 2015Q1,"by default, hide the actual implementing accessors of properties and subscripts when printing them just print them as . the important thing here is that we don't want to show the names of addressors and mutable addressors when prettyprinting the stdlib, but hiding observers is also general goodness. swift svn",satisfaction,5.0
1711,661fde2ca68dffdf4d817762289b9dbf8a240899,Maxwell Swadling <maxs@apple.com>,Mon Jan 19 23:18:07 2015 +0000,apple/swift,556,2015Q1,556 apple/swift 2015Q1,"removed ambiguous string comparison overloads fixes rdar now that some implicit bridging conversions were removed, we can remove some of the complex string comparison overloads. we could not remove all of them yet, as string to nsstring implicit bridging still exists. to work around this, unavailable annotations were used. this ensures the user always gets the string comparison function they intended. swift svn",neutral,4.0
1712,152bc72bcbf8aeb243aaf6692c84c34c5c3c925e,Ross McIlroy <rmcilroy@chromium.org>,Tue Dec 11 15:44:41 2018 +0000,v8/v8,323,2018Q4,323 v8/v8 2018Q4,reset jsfunction if bytecode is flushed when serializing snapshot. bug,neutral,5.0
1713,948cf2f64252b1a72683b2517174b39b679890df,Sergiy Byelozyorov <sergiyb@chromium.org>,Tue Nov 20 15:32:44 2018 +0100,v8/v8,323,2018Q4,323 v8/v8 2018Q4,"add fail_phase_only status file modifier for tests chromium.org, bug",frustration,3.0
1714,d094efd8b753a0b9cedfe07af6b5185d59de2797,Benjamin Peterson <benjamin@python.org>,Sun Oct 31 17:15:42 2010 +0000,python/cpython,462,2010Q4,462 python/cpython 2010Q4,cleanup resources in test_smtplib,caution,4.0
1715,0ee4c9f274960bb717492b0827f6d22af0b1e60b,Antoine Pitrou <solipsis@pitrou.net>,Fri Oct 8 16:46:17 2010 +0000,python/cpython,462,2010Q4,462 python/cpython 2010Q4,update what's new,caution,4.0
1716,d85fd922e12315cd65061ed85f7afb40fe7ff958,Arnaud Charlet <charlet@gcc.gnu.org>,Mon Aug 29 16:25:19 2011 +0200,gcc-mirror/gcc,848,2011Q3,848 gcc-mirror/gcc 2011Q3,"robert dewar acdlili.ads, acoinve.ads, acoorma.adb, acoorma.ads, stassta.adb, acborma.adb, acborma.ads, acohama.ads, acoorse.ads, acbhama.ads, acborse.ads, acobove.adb, acobove.ads, acbhase.ads minor reformatting. tristan gingold exp_ch.adb, exp_ch.ads build_exception_handler move its spec to package spec. exp_intr.adb expand_unc_deallocation use build_exception_handler. aexcept.adb, aexcept.adb rcheck_ do not defer aborts while raising pe. fromsvn",neutral,4.0
1717,e7c82a992521536902a0b230d9b7508e27cd7839,Jakub Jelinek <jakub@redhat.com>,Tue Sep 27 09:29:21 2011 +0200,gcc-mirror/gcc,848,2011Q3,848 gcc-mirror/gcc 2011Q3,rtl.h const_tiny_rtx change into array of x max_machine_mode from x max_machine_mode. rtl.h const_tiny_rtx change into array of x max_machine_mode from x max_machine_mode. constm_rtx define. emitrtl.c const_tiny_rtx change into array of x max_machine_mode from x max_machine_mode. gen_rtx_const_vector use constm_rtx if all inner constants are constm_rtx. init_emit_once initialize constm_rtx for mode_int and mode_vector_int modes. simplifyrtx.c simplify_binary_operation_ optimize if one operand is constm_rtx. .c ix_expand_sse_movcc optimize mask ? x into mask x. fromsvn,caution,4.0
1718,18f67bc413e8a4e6b313c023e8612603f1ea17c0,Mateusz Guzik <mjg@FreeBSD.org>,Wed Aug 5 07:34:45 2020 +0000,freebsd/freebsd-src,1207,2020Q3,1207 freebsd/freebsd-src 2020Q3,vfs add a cheaper entry for mac_vnode_check_access,neutral,3.0
1719,1ea95ba2317b2fe482da0ea1a3d132643a0705b8,Alan Somers <asomers@FreeBSD.org>,Fri Sep 11 20:49:36 2020 +0000,freebsd/freebsd-src,1207,2020Q3,1207 freebsd/freebsd-src 2020Q3,"cp fall back to if copy_file_range fails even though copy_file_range has a filesystem agnostic version, it still fails on devfs perhaps because the file descriptor is nonseekable? in that case, fallback to oldfashioned . fixes cp pr reported by michael butler reviewed by mjg mfcwith differential revision",frustration,5.0
1720,5fc841e5c607b3f3cf520413d10f31e93f401e57,Matthew Fortune <matthew.fortune@imgtec.com>,Wed Nov 5 23:37:02 2014 +0000,gcc-mirror/gcc,848,2014Q4,848 gcc-mirror/gcc 2014Q4,"fix all mips test failures caused by implicit warnings. gcc.asm.c bar add prototype. gcc.call.c f, h add return type. gcc.call.c f, h likewise. gcc.call.c f, h likewise. gcc.call.c f likewise. gcc.call.c g add prototype. f add return type. gcc.call.c likewise. gcc.codereadable.c foo add type for x. gcc.codereadable.c foo likewise. gcc.codereadable.c foo likewise. gcc.codereadable.c foo likewise. gcc.constanchor.c g add prototype. gcc.constanchor.c g likewise. gcc.constanchor.c g likewise. gcc.constanchor.c g likewise. gcc.interrupt_handler.c t likewise. gcc.mips.c main add return type. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mips.c main likewise. gcc.mipsnonpic.h nonpic_call, nonpic_addr_call add prototype. pic_call, pic_addr_call likewise. gcc.extends.c validate likewise. gcc.octeonbbit.c foo likewise. gcc.octeonseq.c h likewise. gcc.truncate.c g add prototype. f add return type. fromsvn",satisfaction,4.0
1721,69859058c7b1bc5ae64131a661aa2973a23cc719,Tobias Burnus <burnus@net-b.de>,Mon Dec 22 22:53:53 2014 +0100,gcc-mirror/gcc,848,2014Q4,848 gcc-mirror/gcc 2014Q4,"transintrinsic.c gfc_conv_intrinsic_caf_get, fix vector handling. tobias burnus transintrinsic.c gfc_conv_intrinsic_caf_get, conv_caf_send fix vector handling. fromsvn",neutral,3.0
1722,efab609272469021636bc75c1c7c822cbe6dbede,Alan Cox <alc@FreeBSD.org>,Mon Jun 11 21:41:16 2012 +0000,freebsd/freebsd-src,1207,2012Q2,1207 freebsd/freebsd-src 2012Q2,avoid unnecessary atomic operations for clearing pga_writeable in pmap_remove_pages. this reduces pmap_remove_pages's running time by to in my tests. mfc after week,neutral,3.0
1723,49ce68b36949057b77d54417d1cd5dc28aa24e3a,Jung-uk Kim <jkim@FreeBSD.org>,Wed Jun 27 21:35:45 2012 +0000,freebsd/freebsd-src,1207,2012Q2,1207 freebsd/freebsd-src 2012Q2,"regen ca for . this reapplies , i.e add a missing be.",caution,4.0
1724,54b91d226a3327a0689e087a1221f486528aae18,dlg <dlg@openbsd.org>,Thu Dec 4 01:55:02 2008 +0000,openbsd/src,932,2008Q4,932 openbsd/src 2008Q4,dont need this bit of whitespace,frustration,4.0
1725,3a9c3f52f56525a78c7165421b8a861757bd4efa,brad <brad@openbsd.org>,Mon Oct 20 19:39:37 2008 +0000,openbsd/src,932,2008Q4,932 openbsd/src 2008Q4,"enable support for rx checksum offload, rx vlan tag stripping and tx vlan tag insertion. ok jsg",frustration,2.0
1726,195ce437081967b578f71d3256bd1028b2bee9b1,Pedro F. Giffuni <pfg@FreeBSD.org>,Thu Apr 18 01:20:08 2013 +0000,freebsd/freebsd-src,1207,2013Q2,1207 freebsd/freebsd-src 2013Q2,dtrace nfs translators should be split into pieces belatedly update the provider with changes from opensolaris psarc dtrace nfs provider nfs provider reports all udp clients as assert vpv_shrlocks obtained from illumos,satisfaction,2.0
1727,7297a2ff53de3005d30c8874d7c8e4a8c58c709e,Mikolaj Golub <trociny@FreeBSD.org>,Wed May 8 20:03:37 2013 +0000,freebsd/freebsd-src,1207,2013Q2,1207 freebsd/freebsd-src 2013Q2,"hast module for bsnmpd. reviewed by harti, pjd mfc after weeks",satisfaction,4.0
1728,829f951aaeee6548e79d735a442be1c9f02a83e4,littledan <littledan@chromium.org>,Thu Feb 25 21:26:05 2016 -0800,v8/v8,323,2016Q1,323 v8/v8 2016Q1,"revert of make intl install properties more like how other builtins do patchset of reason for revert breaks a bot original issue's description make intl install properties more like how other builtins do intl has been somewhat of an oddball for how it integrates with . one aspect is that it largely didn't use utils to install itself into the snapshot, which led to some missing names, which new tests check for, and duplicated code. this patch brings intl a bit closer to how the rest of the builtins do things, though not entirely as it is currently structured to do unusual things, such as creating new constructors from javascript rather than c. new tests check for some of the names that are added in this patch. bug committed cr",frustration,7.0
1729,db74cccf8a7afc94d89e95eff180d67a93e0da89,bmeurer <bmeurer@chromium.org>,Wed Feb 3 22:51:22 2016 -0800,v8/v8,323,2016Q1,323 v8/v8 2016Q1,"replace uses of _arguments_argumentslength with arguments. no need to microoptimize here, and in almost all cases here, using arguments should result in roughly the same code w crankshaft anyway. chromium.org review url cr",frustration,3.0
1730,ecf021c7c0caf4698cf704d03af4eb3d366fcdd5,Florent Xicluna <florent.xicluna@gmail.com>,Thu Mar 11 01:00:26 2010 +0000,python/cpython,462,2010Q1,462 python/cpython 2010Q1,"merged revisions via svnmerge from svnssh.trunk florent.xicluna jeu, mar lines fix the test_subprocess failure when sys.executable is meaningless '' or a directory. it does not fix .",frustration,4.0
1731,180e4cd54de7a08ba363ac18412fb74b8f10ec31,Mark Dickinson <dickinsm@gmail.com>,Mon Jan 4 21:33:31 2010 +0000,python/cpython,462,2010Q1,462 python/cpython 2010Q1,"merged revisions via svnmerge from svnssh.trunk mark.dickinson mon, jan line fix typo in comment.",satisfaction,4.0
1732,34b3c2498bf578abd0dd15fab57a236305bfd784,schwarze <schwarze@openbsd.org>,Thu Aug 9 19:48:44 2018 +0000,openbsd/src,932,2018Q3,932 openbsd/src 2018Q3,"drop support for guessing an oldstyle class a, b, or c netmask from a bare dotnotation ip address by counting trailing zero octets. instead, assume host when neither net nor netmask nor prefixlen is given. error out when net is requested but no netmask is specified. this removes the last use of the in_class macros from this program. ok claudio kn, and many agreed with the general direction during gk.",satisfaction,3.0
1733,1af18cc176787adb8047614c2af737b43dee895b,kettenis <kettenis@openbsd.org>,Wed Aug 1 15:55:50 2018 +0000,openbsd/src,932,2018Q3,932 openbsd/src 2018Q3,"fix various clocks and add support for getting the clock frequency of the clocks that we can set. assign clock rates and parents based on the assignedclocks device tree property, but only on for now as the code for the other rockchip socs isn't quite ready yet. last but not least, fixup a mistake on the firmware for the theobroma systems module such that the big cluster uses bpll as intended.",frustration,6.0
1734,1cf74cee2105efefc043ddb80051fe9f8db4b82f,Reid Spencer <rspencer@reidspencer.com>,Mon Dec 20 16:06:44 2004 +0000,llvm/llvm-project,1805,2004Q4,1805 llvm/llvm-project 2004Q4,"consistently use the same if style. also, fix a bug testing for sbrk llvmsvn",neutral,3.0
1735,ad3016a2734cb163579563191752474007c1095c,Reid Spencer <rspencer@reidspencer.com>,Sun Nov 28 08:15:33 2004 +0000,llvm/llvm-project,1805,2004Q4,1805 llvm/llvm-project 2004Q4,correct the run line to remove unneeded parameters and make sure the test case is testing the right thing. llvmsvn,neutral,4.0
1736,3a2370983294ad93d3a253d20e5f2d0710376bbd,David Chisnall <theraven@FreeBSD.org>,Sat Nov 12 14:39:20 2011 +0000,freebsd/freebsd-src,1207,2011Q4,1207 freebsd/freebsd-src 2011Q4,"fix the number of decimal digits used for swiss francs . found by the libc test suite. if there is some locale test suite somewhere, it might be worth running it approved by dim mentor",frustration,5.0
1737,4fb4550854099bd1609180bb53c5b89b5b8656ca,David Chisnall <theraven@FreeBSD.org>,Thu Dec 15 11:16:41 2011 +0000,freebsd/freebsd-src,1207,2011Q4,1207 freebsd/freebsd-src 2011Q4,small style improvements. approved by dim mentor,neutral,4.0
1738,831bc233038e6f64152f9efff3d6729d5f41091e,Jungshik Shin <jshin@chromium.org>,Thu Oct 19 00:54:58 2017 -0700,v8/v8,323,2017Q4,323 v8/v8 2017Q4,"intl.datetimeformat throw rangeerror for nonfinite input intl.js throws an exception when datetimevalue to format is infinity or nan, but there was a way to thwart the check. moreover, intl.js and runtimeintl.cc have unnecessary conversions of 'numberdatenumber'. i removed the unnecessary conversion and made 'number' be passed to internaldateformat. with this streamlining, the workaround mentioned above does not work anymore. add a check in runtime_intl.cc for and throw a rangeerror. add invalidtime test for invalid datetimevalues passed to intl.datetimeformat.format. bug test time.js cqincludetrybots master.tryserver.",neutral,5.0
1739,2b325d16667eb8d815ac1eb7cc9593d8308d0d58,Ben Smith <binji@chromium.org>,Fri Oct 20 10:58:46 2017 -0700,v8/v8,323,2017Q4,323 v8/v8 2017Q4,remove use of goto in valueserializer.cc see the comment here bug,neutral,3.0
1740,b7ff0d7136427891db98936de10a7edf1fd7f7e3,cbruni <cbruni@chromium.org>,Wed Oct 19 04:33:30 2016 -0700,v8/v8,323,2016Q4,323 v8/v8 2016Q4,implement tf builtin for object.create fast paths bug cr,neutral,3.0
1741,4a31323e973e0a03403a53c601dfd4f0237532e8,leszeks <leszeks@chromium.org>,Fri Oct 21 06:12:45 2016 -0700,v8/v8,323,2016Q4,323 v8/v8 2016Q4,"mark shared functions for optimization the current method of marking functions for optimization, which replaces the jsfunction's code object with one that triggers optimization, would never allow unnamed functions to be optimized. this is an issue for a style of programming which heavily relies on passing around closures. this patch sets a bit on the sharedfunctioninfo when a jsfunction is marked. when another jsfunction referring to the same sharedfunctioninfo is lazily compiled, it immediately triggers a nonconcurrent optimize. bug cr",frustration,2.0
1742,3e619f14331e9c3daa0af310640ef182e9e75e23,H.J. Lu <hjl@gnu.org>,Sun Nov 11 01:50:40 2001 +0000,gcc-mirror/gcc,848,2001Q4,848 gcc-mirror/gcc 2001Q4,config.gcc add elfos.h .h to tm_file for . h.j. lu config.gcc add elfos.h .h to tm_file for . fromsvn,neutral,3.0
1743,0d35f155c06d1d273c1ff2810f6f2bc45b839035,Kaveh R. Ghazi <ghazi@caip.rutgers.edu>,Fri Nov 30 01:55:24 2001 +0000,gcc-mirror/gcc,848,2001Q4,848 gcc-mirror/gcc 2001Q4,"genattrtab.c attr_rtx_ new function containing the majority of attr_rtx'. genattrtab.c attr_rtx_ new function containing the majority of attr_rtx'. move variable declarations into the scope where they are used. eliminate unnecessary gotos. attr_rtx now just a wrapper for attr_rtx_' using va_open, va_fixedarg, and va_close. fromsvn",neutral,4.0
1744,e9a91756cddbb41d584363528b18169e529007a3,Lu Fang <lufang@fb.com>,Tue Oct 15 21:10:50 2019 -0700,pytorch/pytorch,165,2019Q4,165 pytorch/pytorch 2019Q4,back out migrate soft_margin_loss from the th to aten cudacpu summary original commit changeset ddffedbbfa test plan ci reviewed by differential revision fbshipitsourceid abbfefecbeded,neutral,3.0
1745,dbf8f535fcd241f1ee43c4ee7ef0a8ae643b3b36,Mingzhe Li <mingzhe0908@fb.com>,Wed Oct 30 16:23:21 2019 -0700,pytorch/pytorch,165,2019Q4,165 pytorch/pytorch 2019Q4,"unify chunk benchmark summary pull request resolved as title test plan buck run operator_benchmark operator microbenchmarks tag short benchmarking pytorch chunks mode eager name chunks_m_n_chunks_cpu input m , n , chunks , device cpu forward execution time us . reviewed by differential revision fbshipitsourceid bfeaddeffacb",caution,3.0
1746,7455062c6ddee1a0e79a7a000fbfe1dd5ce8529d,florian <florian@openbsd.org>,Fri Aug 4 14:00:33 2017 +0000,openbsd/src,932,2017Q3,932 openbsd/src 2017Q3,when free'ing an address_proposal we need to stop the libevent timer. resulting useafterfree found the hard way by me. introduce free_address_proposal to make sure we always do this. while here also stop the interface timer when deleting an interface.,frustration,3.0
1747,d18170ad7bbe5cdc98e45f892b4eff776eb38a3f,krw <krw@openbsd.org>,Fri Jul 7 15:39:30 2017 +0000,openbsd/src,932,2017Q3,932 openbsd/src 2017Q3,dispatch_imsg only needs to know name and rdomain. no more struct interface_info knowledge in privsep.,neutral,4.0
1748,0adf658a50d5a39193500972ef52c716918965f9,Jordan K. Hubbard <jkh@FreeBSD.org>,Tue Dec 29 07:27:55 1998 +0000,freebsd/freebsd-src,1207,1998Q4,1207 freebsd/freebsd-src 1998Q4,"gzip the kern.flp kernel, don't kzip it.",neutral,2.0
1749,38ed72f1458ca926cc24270ad72fe3f90c6a651e,Mike Smith <msmith@FreeBSD.org>,Tue Oct 6 07:34:26 1998 +0000,freebsd/freebsd-src,1207,1998Q4,1207 freebsd/freebsd-src 1998Q4,teach userconfig about isa_devtab_cam,frustration,4.0
1750,8dc8feb53da0c1a2301cb21c87b17a09d12e8fa7,Jason A. Harmening <jah@FreeBSD.org>,Fri Mar 26 20:10:46 2021 -0700,freebsd/freebsd-src,1207,2021Q1,1207 freebsd/freebsd-src 2021Q1,"clean up a couple of md warts in vm_fault_populate eliminate a big ifdef that encompassed all currentlysupported architectures except mips and . this applied to the case in which we've allocated a superpage but the pagerpopulated range is insufficient for a superpage mapping. for platforms that don't support superpages the check should be inexpensive as we shouldn't get a superpage in the first place. make the normalpage fallback logic identical for all platforms and provide a simple implementation of pmap_ps_enabled for mips and book powerpc. apply the logic for handling pmap_enter failure if a superpage mapping can't be supported due to additional protection policy. use kern_protection_failure instead of kern_failure for this case, and note intel pku on as the first example of such protection policy. reviewed by kib, markj, bdragon differential revision",neutral,5.0
1751,8537f16249c4ed8e575386472d624dbd423cf093,Baptiste Daroussin <bapt@FreeBSD.org>,Thu Jan 7 15:14:52 2021 +0100,freebsd/freebsd-src,1207,2021Q1,1207 freebsd/freebsd-src 2021Q1,libcompat remove redundant path for ncurses reported by kevans,satisfaction,5.0
1752,3bdb68463337cd6bba397b21b8883b9b8885dd8a,Vladimir Kondratyev <wulf@FreeBSD.org>,Sat Oct 31 22:04:13 2020 +0000,freebsd/freebsd-src,1207,2020Q4,1207 freebsd/freebsd-src 2020Q4,"devmatch respect mask field when matching strings of z type. while here, add debug output for this action. reviewed by imp mfc after weeks differential revision",satisfaction,4.0
1753,f14436adc61a52b29d035791c0b90c0b221bea9a,Hans Petter Selasky <hselasky@FreeBSD.org>,Thu Nov 12 09:26:01 2020 +0000,freebsd/freebsd-src,1207,2020Q4,1207 freebsd/freebsd-src 2020Q4,"add a tunable sysctl, hw.usb.uaudio.handle_hid, to allow disabling the the hid volume keys support in the usb audio driver. while at it reorganize the usb audio sysctls a bit. differential revision mfc after week sponsored by mellanox technologies nvidia networking",frustration,4.0
1754,7fc550064afacdff277dba0e1a836ecde9770453,Ruslan Ermilov <ru@FreeBSD.org>,Wed Sep 28 07:54:18 2005 +0000,freebsd/freebsd-src,1207,2005Q3,1207 freebsd/freebsd-src 2005Q3,"oops, revert last commit the manpage is still built in objdir.",neutral,4.0
1755,ea78cad4bfb2e1afdae55df7dc71fc623a82c616,Roman Kurakin <rik@FreeBSD.org>,Sat Jul 9 14:31:48 2005 +0000,freebsd/freebsd-src,1207,2005Q3,1207 freebsd/freebsd-src 2005Q3,lost cx_mpsafenet check. pointy hat me approved by re scottl,satisfaction,5.0
1756,c1afff113ceec2c78b96b2e52379cb5a9275d5fb,Alan Somers <asomers@FreeBSD.org>,Thu Jun 27 22:24:56 2019 +0000,freebsd/freebsd-src,1207,2019Q2,1207 freebsd/freebsd-src 2019Q2,fusefs fix a memory leak regarding fuse_interrupt we were leaking the fuse ticket if the original operation completed before the daemon received the interrupt operation. fixing this was easier than i expected. sponsored by the freebsd foundation,neutral,3.0
1757,ce78460aebaaba556b6b204d0a8f16143c33a6f6,Rick Macklem <rmacklem@FreeBSD.org>,Sat Apr 6 22:05:51 2019 +0000,freebsd/freebsd-src,1207,2019Q2,1207 freebsd/freebsd-src 2019Q2,"fix nfsuserd so that it handles the mapped localhost address when jails are enabled. the nfsuserd daemon does not function correctly when jails are enabled, since localhost gets mapped to another ip address and, as such, the upcall rpc fails. this patch fixes the problem by doing a getsockname of a socket mapped to localhost to find out what the correct address is for the comparison test with the upcall's from ip address. this patch also adds support and the required ifdef's for inet and . it now uses by default for the upcalls, if the kernel has support and the daemon is also built with support. tested by earlier version pr reviewed by bz, rgrimes mfc after weeks differential revision",neutral,3.0
1758,a0c6ad0c510ca8b6b810ebb36bfa42c4a29b62a2,Brian Anderson <banderson@mozilla.com>,Mon Mar 19 14:17:28 2012 -0700,rust-lang/rust,635,2012Q1,635 rust-lang/rust 2012Q1,core remove a fixme. closes this is too vague to ever fix,satisfaction,4.0
1759,bcf44f8cc1b6f4b53e806a3280b0dcd599767416,Brian Anderson <banderson@mozilla.com>,Thu Mar 15 16:49:24 2012 -0700,rust-lang/rust,635,2012Q1,635 rust-lang/rust 2012Q1,core optimize strunsafeslice_bytes. closes,caution,5.0
1760,b0e4af35f2af39b59f3da4c4cd1ea6c715c3d183,JJ Allaire <jj@rstudio.com>,Tue Apr 14 06:40:11 2020 -0400,rstudio/rstudio,155,2020Q2,155 rstudio/rstudio 2020Q2,more work on heading text focus at startup,frustration,4.0
1761,7150f427d108871524f5030a662036ec74fff94f,Charles Teague <cteague@gmail.com>,Fri Jun 26 12:45:53 2020 -0400,rstudio/rstudio,155,2020Q2,155 rstudio/rstudio 2020Q2,"for crossref dois, filter to legal characters your doi suffix can be any alphanumeric string. limited punctuation is allowed, the approved character set for doi suffixes is az, az, and . _. an expanded set of characters was supported prior to , so you may see dois with nowbanned characters such as , ,",caution,4.0
1762,b8ad04da7c7eb92719193ff21f56d325d205d21f,Brendan Burns <bburns@google.com>,Mon Oct 27 13:13:21 2014 -0700,kubernetes/kubernetes,464,2014Q4,464 kubernetes/kubernetes 2014Q4,merge pull request from move handler setup,satisfaction,4.0
1763,1454d5d174f7b4a675d73a956b42633d0c5b2dbd,Deyuan Deng <deyuan.deng@gmail.com>,Mon Oct 6 20:49:20 2014 -0400,kubernetes/kubernetes,464,2014Q4,464 kubernetes/kubernetes 2014Q4,improve replication controller handling.,satisfaction,4.0
1764,2624320fccf024cdc642d0e88ac380b82c831317,Konstantin Belousov <kib@FreeBSD.org>,Thu Aug 24 10:57:34 2017 +0000,freebsd/freebsd-src,1207,2017Q3,1207 freebsd/freebsd-src 2017Q3,"stop masking fsgsbase and smep features under monitors. not enabling fsgsbase in does not prevent reporting of the feature by the cpuid instruction blame intl. as result, kernels which were run under monitors pretended that usermode cannot modify tls base without the syscall, while libc noted right combination of capable cpu and the new kernel version, trying to use the wrfsbase instruction. really old hypervisors that cannot handle enablement of these features in would require the manual configuration, by setting the loader tunable hw. reported by lwhsu, mjoras sponsored by the freebsd foundation mfc after days",satisfaction,3.0
1765,907f50fe04bdcbbe2b0606ca662ba662c44f6877,Conrad Meyer <cem@FreeBSD.org>,Tue Sep 5 15:13:41 2017 +0000,freebsd/freebsd-src,1207,2017Q3,1207 freebsd/freebsd-src 2017Q3,"add smn driver for amd system management network amd family cpus have an internal network used to communicate between the host cpu and the psp and smu coprocessors. it exposes a simple bit register space. reviewed by avg no , mjoras, truckman sponsored by dell emc isilon differential revision",caution,6.0
1766,3b217d4245e38ea6e0c59dfeaffd6838681e852c,ivica.bogosavljevic <ivica.bogosavljevic@imgtec.com>,Thu Apr 20 05:38:54 2017 -0700,v8/v8,323,2017Q2,323 v8/v8 2017Q2,"fix double rules warning when compiling inspector with gyp when cross compiling inspector with gyp on mips and arm, there are three rules that generate the same file both host toolset and target toolset. this causes problems because of rule duplication depending on compilation configuration this can cause warning or error. we fix this by disabling the host rule and using target rule for all depending rules. bug cr",neutral,6.0
1767,39e42b5ef08e8b6b28f060bb2f08b1149c458fbe,bjaideep <bjaideep@ca.ibm.com>,Thu Jun 8 14:08:54 2017 -0700,v8/v8,323,2017Q2,323 v8/v8 2017Q2,"untangle debuginfo from break point support port dccbbdafbffcdafbc original commit message debuginfo was very closely tied to break point support it contained only information relevant to break points. it was created and freed by break point implementation. existence of a debuginfo on the shared function info implied existence of break points. this cl is a step towards making debuginfo usable by other debugging functionality such as block coverage by decoupling it from break point support, which is now only one kind of information stored on the debuginfo object. chromium.org, , , bug cr",neutral,6.0
1768,869f0251e11f1875c125a4d4f99ffa37501ea3b6,dlg <dlg@openbsd.org>,Mon Aug 28 05:36:00 2006 +0000,openbsd/src,932,2006Q3,932 openbsd/src 2006Q3,move the firmware messaging under nbio since it's only used by bio.,satisfaction,4.0
1769,b1df4c94cfe1beb872253255c9304847eaf6fa71,jmc <jmc@openbsd.org>,Sat Sep 9 15:46:22 2006 +0000,openbsd/src,932,2006Q3,932 openbsd/src 2006Q3,document pcap_get_selectable_fd mlink will happen after unlock from okan demirmen ok djm,caution,2.0
1770,35aff4fb82ce0f615dc5e0ad73341a1fe77cbd12,Marek Polacek <polacek@redhat.com>,Tue Aug 19 06:04:38 2014 +0000,gcc-mirror/gcc,848,2014Q3,848 gcc-mirror/gcc 2014Q3,"invoke.texi document compat. .texi document compat. cfamily c.opt compat new option. c cdecl.c diagnose_mismatched_decls unconditionally call pedwarn_c instead of pedwarn. grokfield likewise. warn_defaults_to new function. grokdeclarator call warn_defaults_to instead of pedwarn_c. unconditionally call pedwarn_c instead of pedwarn. start_function call warn_defaults_to instead of pedwarn_c. declspecs_add_scspec call pedwarn_c instead of pedwarn, don't check flag_isoc before. cerrors.c pedwarn_c change the return type to bool. handle compat. cparser.c disable_extension_diagnostics handle warn_c_c_compat. restore_extension_diagnostics likewise. c_parser_static_assert_declaration_no_semi call pedwarn_c instead of pedwarn, don't check flag_isoc before. c_parser_declspecs likewise. c_parser_alignas_specifier likewise. c_parser_alignof_expression likewise. c_parser_generic_selection likewise. ctree.h pedwarn_c update declaration. ctypeck.c c_finish_return call pedwarn or warning_at instead of pedwarn_c. testsuite gcc.compat.c new test. gcc.compat.c new test. gcc.compat.c new test. gcc.compat.c new test. gcc.compat.c new test. gcc.compat.c new test. gcc.compat.c new test. fromsvn",satisfaction,4.0
1771,79c702321e4a03f1b999f526b17d3c35d5a49907,John David Anglin <danglin@gcc.gnu.org>,Sat Aug 30 15:10:20 2014 +0000,gcc-mirror/gcc,848,2014Q3,848 gcc-mirror/gcc 2014Q3,baseline_symbols.txt update. linux.txt update. fromsvn,frustration,4.0
1772,2d7162aaf449fc5a8b2255792c59f04ec5844f23,Jim Laskey <jlaskey@mac.com>,Sat Jan 14 00:29:48 2006 +0000,llvm/llvm-project,1805,2006Q1,1805 llvm/llvm-project 2006Q1,testcase for llvmsvn,neutral,5.0
1773,392c7d2779b636479ac750756782a5238fee33e7,Evan Cheng <evan.cheng@apple.com>,Fri Jan 13 21:45:19 2006 +0000,llvm/llvm-project,1805,2006Q1,1805 llvm/llvm-project 2006Q1,add truncstore patterns. llvmsvn,neutral,6.0
1774,34951e9adc317df0050e55fe73c9de41a3266f1a,Zeliang Chen <zlc@fb.com>,Fri Oct 9 19:27:26 2020 -0700,pytorch/pytorch,165,2020Q4,165 pytorch/pytorch 2020Q4,adding a new flag to the struct summary adding a new flag shape_is_set to the structs for shape inference on inplace op to prevent duplicated inference. test plan buck test clang buck test clang fb reviewed by chunlif differential revision fbshipitsourceid efddbaffbaf,caution,4.0
1775,3ffd2af8cd7b52c95177576b1246de546488af02,Aliaksandr Ivanou <aivanou@fb.com>,Fri Oct 9 12:51:34 2020 -0700,pytorch/pytorch,165,2020Q4,165 pytorch/pytorch 2020Q4,add exception classification to torch.multiprocessing.spawn summary pull request resolved introduce different types of exceptions that map to different failures of torch.multiprocessing.spawn. the change introduces three different exception types processraisedexception occurs when the process initiated by spawn raises an exception processexitedexception occurs when the process initiated by spawn exits the following logic will allow frameworks that use mp.spawn to categorize failures. this can be helpful for tracking metrics and enhancing logs. test plan imported from oss reviewed by taohe differential revision pulled by tierex fbshipitsourceid caaccecbeb,frustration,4.0
1776,006725ba9e8bf2d005a4a73998e9e3c276e4c60e,Gleb Smirnoff <glebius@FreeBSD.org>,Wed Oct 11 12:32:53 2006 +0000,freebsd/freebsd-src,1207,2006Q4,1207 freebsd/freebsd-src 2006Q4,break long line.,satisfaction,5.0
1777,a7d36216746d6d546338467cf18a9cbbb98d8422,Xin LI <delphij@FreeBSD.org>,Wed Oct 11 07:52:54 2006 +0000,freebsd/freebsd-src,1207,2006Q4,1207 freebsd/freebsd-src 2006Q4,add powerpc stuff.,frustration,3.0
1778,2c9ccc21b11aa2bb63b908b33c8f9bc9c15c960d,Peter Bergner <bergner@vnet.ibm.com>,Fri Jul 9 10:00:55 2010 -0500,gcc-mirror/gcc,848,2010Q3,848 gcc-mirror/gcc 2010Q3,.c rs_override_options fix setting of default isa flags. .c rs_override_options fix setting of default isa flags. .h asm_cpu_spec add mvsx. fromsvn,frustration,4.0
1779,8cce3d7579f87245302f6ceae1b33412558da1c0,Arnaud Charlet <charlet@gcc.gnu.org>,Thu Sep 9 14:46:27 2010 +0200,gcc-mirror/gcc,848,2010Q3,848 gcc-mirror/gcc 2010Q3,"robert dewar sem_attr.adb minor reformatting. thomas quinot socket.c __gnat_socket_ioctl on darwin, the req parameter is an unsigned long, not an int. vincent celier make.adb, mlibprj.adb, prj.adb, prjnmsc.adb, mlibtgt.adb, prjconf.adb, prjenv.adb use display_name instead of name whenever we are not checking for equality of path or file names. ed schonberg exp_util.adb remove_side_effects if the expression is a packed array reference, reset the analyzed flag so that it is properly expanded when the resulting object declaration is analyzed. vincent celier sinputp.adb source_file_is_subunit return false if x is no_source_file. ramon fernandez sysdep.c the bsp in mils doesn't know anything about the vx_spe_task option, so disable it. fromsvn",neutral,3.0
1780,978afeee5fb69a123672ffdd27588e4f8ae8216d,Jordan K. Hubbard <jkh@FreeBSD.org>,Wed Oct 9 23:36:54 1996 +0000,freebsd/freebsd-src,1207,1996Q4,1207 freebsd/freebsd-src 1996Q4,correct the intro text so user is not encouraged to step off cliffs. also document the fact that you can hit esc to skip configuration.,neutral,4.0
1781,47fe01ae9cbf1a4d7d57005d1a4147253abfecc6,Garrett Wollman <wollman@FreeBSD.org>,Tue Nov 19 20:23:47 1996 +0000,freebsd/freebsd-src,1207,1996Q4,1207 freebsd/freebsd-src 1996Q4,"this commit was generated by to compensate for changes in , which included commits to rcs files with nontrunk default branches.",satisfaction,2.0
1782,c16a5db6e111f69dbb8da094eb3dcb3ed0c4e1e8,claudio <claudio@openbsd.org>,Thu Jan 9 15:50:34 2020 +0000,openbsd/src,932,2020Q1,932 openbsd/src 2020Q1,instead of calling siphash_update in path_hash for each element of struct rde_aspath define aspath_hashstart and aspath_hashend and update all values in one call. inspired by struct process and its ps_startcopy. ok deraadt,neutral,5.0
1783,b0694f62b628e8e590f5084335da77123975fd77,deraadt <deraadt@openbsd.org>,Fri Feb 28 05:31:41 2020 +0000,openbsd/src,932,2020Q1,932 openbsd/src 2020Q1,"oops, tsc value is bit. pointed out by naddy",frustration,4.0
1784,88e451e1e79973615371b41632a39f7e90444c3f,Volker Reichelt <reichelt@gcc.gnu.org>,Mon Oct 13 23:06:37 2003 +0000,gcc-mirror/gcc,848,2003Q4,848 gcc-mirror/gcc 2003Q4,re pr c wrong code when adding friend pr c g..c new test. changelog add pr number to patch for pr c. fromsvn,satisfaction,4.0
1785,a25d596a2961075d0aa21c51c822d87218610718,Andrew Pinski <apinski@apple.com>,Fri Nov 14 01:47:55 2003 +0000,gcc-mirror/gcc,848,2003Q4,848 gcc-mirror/gcc 2003Q4,andrew pinski .c andrew pinski .c machopic_output_possible_stub_label allow stub symbol be not defined when outputting possible stub label. andrew pinski gcc.c.c new test. fromsvn,satisfaction,5.0
1786,0c1994c64d5327cce706e7ae6bfec8da2ac4c7e4,mstarzinger <mstarzinger@chromium.org>,Mon Nov 9 09:19:46 2015 -0800,v8/v8,323,2015Q4,323 v8/v8 2015Q4,"simplify zapping of old optimized code maps. this unconditionally enables zapping of old optimized code maps and unifies the various zapping paths. the unconditional zapping, even if heap verification is off, is needed because slots in the code map have not been recorded and evacuation invariants break. chromium.org review url cr",frustration,4.0
1787,2376296c77699d4c2488c6104341ea531503b105,v8-autoroll <v8-autoroll@chromium.org>,Thu Dec 17 20:23:37 2015 -0800,v8/v8,323,2015Q4,323 v8/v8 2015Q4,update deps. rolling to rolling clang to cfaafabdafede chromium.org review url cr,neutral,3.0
1788,f110151de5b064ca6a4186885c3d9dc28bd91f18,jsg <jsg@openbsd.org>,Fri Aug 27 17:08:00 2010 +0000,openbsd/src,932,2010Q3,932 openbsd/src 2010Q3,remove the unused if_init callback in struct ifnet ok deraadt henning claudio,neutral,5.0
1789,4c836c652e11dbd232573c85d8029a4bc3a0092e,jmc <jmc@openbsd.org>,Wed Jul 21 19:53:45 2010 +0000,openbsd/src,932,2010Q3,932 openbsd/src 2010Q3,document exit values from daniel dickman,frustration,4.0
1790,5081946172f35ef986bc6b2d2d6b0b8301ade8bc,Dmitrij Tejblum <dt@FreeBSD.org>,Tue Sep 29 20:01:21 1998 +0000,freebsd/freebsd-src,1207,1998Q3,1207 freebsd/freebsd-src 1998Q3,"rename a static variable, so it will not shadowed by a local variable. now comments will be ignored, rather than put junk in the password database. broken in rev. .",satisfaction,4.0
1791,ab5998ff8529538d0e332df7145bd835b3309819,Gary Palmer <gpalmer@FreeBSD.org>,Wed Sep 23 07:38:51 1998 +0000,freebsd/freebsd-src,1207,1998Q3,1207 freebsd/freebsd-src 1998Q3,"build the generic kernel on the alpha too. and don't expect a mfs kernel yet, nor will fbsdboot.exe be too useful reviewed by jkh",caution,5.0
1792,91dc2352260236b6cd3b806781b18b73e0ac207a,Eric Botcazou <ebotcazou@gcc.gnu.org>,Sat Jun 27 10:02:58 2009 +0000,gcc-mirror/gcc,848,2009Q2,848 gcc-mirror/gcc 2009Q2,fix nits fromsvn,frustration,6.0
1793,a46f975bee74ff08eb97aac61f2fb81faa2c173f,Jakub Jelinek <jakub@redhat.com>,Sun Jun 21 11:37:31 2009 +0200,gcc-mirror/gcc,848,2009Q2,848 gcc-mirror/gcc 2009Q2,"hashtab.c htab_traverse don't call htab_expand for nearly empty hashtabs with sizes , or . hashtab.c htab_traverse don't call htab_expand for nearly empty hashtabs with sizes , or . fromsvn",neutral,5.0
1794,f7403084425047b247921678405d0cd028b2f5c2,mikeb <mikeb@openbsd.org>,Fri Jan 22 19:33:30 2016 +0000,openbsd/src,932,2016Q1,932 openbsd/src 2016Q1,"set minimum number of slots on the receive ring to after some experimentation, discussions with xen folks and pondering linux source code, it became clear that most versions of xen require at least slots available on the receive ring to send an event.",neutral,4.0
1795,e8a9dea80d9cc79f3abe09aee0f07902d9b449ed,gsoares <gsoares@openbsd.org>,Tue Feb 2 14:59:20 2016 +0000,openbsd/src,932,2016Q1,932 openbsd/src 2016Q1,use stat instead of chdir to check if given the directory is valid. ok landry jca,satisfaction,3.0
1796,beaded8a1eccbbc6484a3c8e95b8fcb3ba500e1b,Roman Divacky <rdivacky@FreeBSD.org>,Fri Aug 24 16:37:00 2012 +0000,freebsd/freebsd-src,1207,2012Q3,1207 freebsd/freebsd-src 2012Q3,dont use werror when building libbfd and gnu as on with clang as there are warnings. reviewed by nwhitehorn,neutral,4.0
1797,df201b82d3175abfc7d3264762227a7355f53c16,Brooks Davis <brooks@FreeBSD.org>,Wed Sep 5 15:55:51 2012 +0000,freebsd/freebsd-src,1207,2012Q3,1207 freebsd/freebsd-src 2012Q3,don't hardcode paths to mfs_image in the kernel config. when they don't exist they don't cause make tinderbox to fail. reported by jhb,frustration,2.0
1798,6e74fb9dff61f06623292a7ce1d2f3ff06eb1c13,Maxim Konovalov <maxim@FreeBSD.org>,Wed May 10 14:40:40 2006 +0000,freebsd/freebsd-src,1207,2006Q2,1207 freebsd/freebsd-src 2006Q2,o extend rev. . and restore an ability to specify a nondefault quota files location. submitted by kostik belousov,frustration,5.0
1799,e3901dc97d6b5677d92436d43ba454503eb843e8,Robert Watson <rwatson@FreeBSD.org>,Mon Jun 5 12:53:44 2006 +0000,freebsd/freebsd-src,1207,2006Q2,1207 freebsd/freebsd-src 2006Q2,add audit_submit. to the set of man pages built and installed with libbsm. this interface is new as of openbsm . alpha . submitted by csjp obtained from trustedbsd project,satisfaction,3.0
1800,463dbab3ec5386947e74c5829aec5bf469992166,Michal Majewski <majeski@google.com>,Tue Jan 9 18:52:34 2018 +0100,v8/v8,323,2018Q1,323 v8/v8 2018Q1,implemented status file filter as a processor bug,neutral,3.0
1801,5457e24e15716a6c4c2ce5eea57241de4a815185,Michael Achenbach <machenbach@chromium.org>,Mon Mar 26 15:42:13 2018 +0200,v8/v8,323,2018Q1,323 v8/v8 2018Q1,add data deps for test suites bug cqincludetrybots luci,satisfaction,3.0
1802,6e9dcee4cacdd56cc8eb5a397fe9b58fe4565f86,Alexander Kabaev <kan@FreeBSD.org>,Thu Mar 8 21:09:34 2012 +0000,freebsd/freebsd-src,1207,2012Q1,1207 freebsd/freebsd-src 2012Q1,"save more of config space for pci express and pcix devices. expand pci_save_state and pci_restore_state to save more of the config state for pci express and pcix devices. various writable control registers are present in pci express that can potentially be lost over cycle. this change is modeled after similar functionality in linux. reviewed by wlosh,jhb mfc after month",frustration,3.0
1803,c0fd04a9223e1a6575fd8fb6cd3cb6a27d4a7371,Ed Schouten <ed@FreeBSD.org>,Thu Mar 15 11:49:26 2012 +0000,freebsd/freebsd-src,1207,2012Q1,1207 freebsd/freebsd-src 2012Q1,"remove impossible error condition from the man page. on freebsd, all processes have a process group, so it is impossible for kill to fail this way. posix also doesn't mention this error condition. discussed on arch mfc after weeks",neutral,3.0
1804,0bcee2755848bd10da9be41b00eeafef8cb65bc5,Arnaud Charlet <charlet@gcc.gnu.org>,Tue Apr 25 14:08:24 2017 +0200,gcc-mirror/gcc,848,2017Q2,848 gcc-mirror/gcc 2017Q2,code cleanups. fromsvn,neutral,4.0
1805,5a68fae797b88216b40eb6af8c75dec6e98b983c,Jason Merrill <jason@redhat.com>,Mon Apr 3 17:15:36 2017 -0400,gcc-mirror/gcc,848,2017Q2,848 gcc-mirror/gcc 2017Q2,pr ice with vla initialization from string pr c wrong vla initialization from string init.c finish_length_check split out from build_vec_init. build_vec_init handle string_cst. .c split_nonconstant_init handle string_cst. digest_init_r don't give a string_cst vla type. fromsvn,frustration,3.0
1806,866dcdacfe59f5f448e008fe2c4cb9dfcf72b2ec,Ed Maste <emaste@FreeBSD.org>,Tue Feb 18 16:23:10 2014 +0000,freebsd/freebsd-src,1207,2014Q1,1207 freebsd/freebsd-src 2014Q1,"import lldb as of svn git bdcf a number of files not required for the freebsd build have been removed. sponsored by darpa, afrl",neutral,4.0
1807,054692a4bd7999edd4f306e1f0d5e517675f0b8d,Alexander V. Chernikov <melifaro@FreeBSD.org>,Thu Jan 16 11:50:00 2014 +0000,freebsd/freebsd-src,1207,2014Q1,1207 freebsd/freebsd-src 2014Q1,"fix ipfw fwd for traffic broken by . problem case original lookup returns route with gw set, so gw points to rtert_gateway. after that we're changing dst and performing lookup another time. since fwd host is most probably directly reachable, resulting rte does not contain rt_gateway, so gw is not set. finally, we end with packet transmitted to proper interface but wrong linklayer address. found by lstewart discussed with ae,lstewart mfc after weeks sponsored by yandex llc",satisfaction,7.0
1808,18041d4ec51adaf8fb962b724d0798d6ca88ab73,Kyle Evans <kevans@FreeBSD.org>,Mon Apr 13 20:00:44 2020 +0000,freebsd/freebsd-src,1207,2020Q2,1207 freebsd/freebsd-src 2020Q2,"dependcleanup fix typo, .inc generates .s stubs pointy hat kevans",frustration,3.0
1809,27586155ace4df0c7322189d74f901ceccc027ab,Alan Somers <asomers@FreeBSD.org>,Sat Apr 18 19:53:47 2020 +0000,freebsd/freebsd-src,1207,2020Q2,1207 freebsd/freebsd-src 2020Q2,bectl beinstall.sh. fix man page section of beinstall.sh reported by phk mfc after weeks,frustration,6.0
1810,010b438291e1c97e99efe432490fb27a9aa048c2,Peter Wemm <peter@FreeBSD.org>,Thu Feb 4 03:57:15 1999 +0000,freebsd/freebsd-src,1207,1999Q1,1207 freebsd/freebsd-src 1999Q1,restore rev . and . after they got spammed and backed out in rev . and . as those features are used by the ports tree. releng_ candidate,satisfaction,5.0
1811,9294327d4a34b52e8278e9720a7d822be0fddb72,John Polstra <jdp@FreeBSD.org>,Wed Jan 20 21:55:30 1999 +0000,freebsd/freebsd-src,1207,1999Q1,1207 freebsd/freebsd-src 1999Q1,make it possible to use pam in staticallylinked applications.,neutral,4.0
1812,d8d27d73b0c7057dc4b97bbbaa59dc411a7e2dfc,Tom Tromey <tromey@redhat.com>,Wed Jan 16 23:40:04 2002 +0000,gcc-mirror/gcc,848,2002Q1,848 gcc-mirror/gcc 2002Q1,checkboxgroup.java merged with classpath. checkboxgroup.java merged with classpath. checkbox.java merged with classpath. fromsvn,caution,2.0
1813,5a721dab82a65ae66c4b4a7ef05c8f287299a212,Richard Earnshaw <rearnsha@arm.com>,Mon Jan 28 16:25:14 2002 +0000,gcc-mirror/gcc,848,2002Q1,848 gcc-mirror/gcc 2002Q1,"config.gcc netbsdelf set up generic parameters. config.gcc netbsdelf set up generic parameters. netbsd always use . remove settings from other nonelf netbsd config frags. aout.h startfile_spec don't pull in c since will does that. .h libgcc_spec add white space before lgcc, so that sharedlib frobbing will work. fromsvn",caution,6.0
1814,ad6c0150c0408a878e09c50e01995f20ec0c5e85,John-Mark Gurney <jmg@FreeBSD.org>,Sat Apr 19 19:32:54 2014 +0000,freebsd/freebsd-src,1207,2014Q2,1207 freebsd/freebsd-src 2014Q2,"add a ton of missing event handlers with quite possibly bogus descrptions if you're one of the many people who forgot to document their work and don't like my description, well, do your job and update it",frustration,5.0
1815,11a99c6984037e95044027a6c5d7f06ef69f4538,Ruslan Bukin <br@FreeBSD.org>,Sat Apr 5 16:38:27 2014 +0000,freebsd/freebsd-src,1207,2014Q2,1207 freebsd/freebsd-src 2014Q2,correct the end address of the video frame buffer. this fixes problem that sometimes display suddenly goes blank.,frustration,5.0
1816,3d416346cfca32e50fc17feea9ba012b3a2730f5,Uros Bizjak <uros@gcc.gnu.org>,Sun Apr 25 10:11:46 2010 +0200,gcc-mirror/gcc,848,2010Q2,848 gcc-mirror/gcc 2010Q2,gmon.c _mcleanup change format string placeholder from x to x. gmon.c _mcleanup change format string placeholder from x to x. .h asm_output_ascii ditto. interix.h asm_output_ascii ditto. att.h asm_output_ascii ditto. .h asm_output_ascii ditto. .c ix_target_string ditto. output_pic_addr_const ditto. print_operand ditto. fromsvn,neutral,4.0
1817,f5631ae6907cd200d8a9be082bf5450b1dfe52f9,Eric Botcazou <ebotcazou@adacore.com>,Sat Apr 17 14:53:08 2010 +0000,gcc-mirror/gcc,848,2010Q2,848 gcc-mirror/gcc 2010Q2,.c build_unary_op do not issue warning. gcc.c build_unary_op do not issue warning. fromsvn,neutral,3.0
1818,384190f25bd74435d0cf3982d470055c393e4e3a,Devin Teske <dteske@FreeBSD.org>,Fri Jul 5 06:24:18 2013 +0000,freebsd/freebsd-src,1207,2013Q3,1207 freebsd/freebsd-src 2013Q3,prevent f_package_add from reperforming f_package_detect_installed even though f_package_config may have already detected the installed packages.,satisfaction,4.0
1819,7c2af6212d5345ade65f1e2013e08b74c14fc794,Mark Murray <markm@FreeBSD.org>,Sat Sep 7 22:07:36 2013 +0000,freebsd/freebsd-src,1207,2013Q3,1207 freebsd/freebsd-src 2013Q3,"fix the build certain linkable symbols need to always be present. pass the pointy hat please. also unblock the software yarrow generator for now. this will be reverted yarrow needs to block until secure, not this behaviour of serving as soon as asked. folks with specific requiremnts will be able to can! unblock this device with any write, and are encouraged to do so in .d scripting. any in this case could be echo '' as root.",satisfaction,7.0
1820,3c514959ddaeb31e0f4eaea9f1f28041e4a1a594,Reid Spencer <rspencer@reidspencer.com>,Mon Oct 16 23:08:08 2006 +0000,llvm/llvm-project,1805,2006Q4,1805 llvm/llvm-project 2006Q4,"undo chris' last patch, it caused a regression. llvmsvn",satisfaction,5.0
1821,634885f71e28403119acd1eef139e8285ea0473a,Evan Cheng <evan.cheng@apple.com>,Tue Dec 12 21:21:32 2006 +0000,llvm/llvm-project,1805,2006Q4,1805 llvm/llvm-project 2006Q4,expand copytoreg to bit_convert copytoreg. llvmsvn,neutral,6.0
1822,24a43b3c4e89e2fa780f1c8da04a152a1b6e2efe,Clemens Hammacher <clemensh@chromium.org>,Wed Jan 9 16:34:29 2019 +0100,v8/v8,323,2019Q1,323 v8/v8 2019Q1,"fix reloading register spilled multiple times since register can be used multiple times on the stack, they can also be spilled into multiple stack slots. at merge points, we then might have to reload the spilled slots. a dcheck currently checks that each register is only loaded once. instead of failing, just load the first stack slot, the others are statically known to contain the same value anyways. chromium.org bug ,",satisfaction,2.0
1823,a392e4a301758c2a9d4b4ce8140dbd0064dac02e,Michael Starzinger <mstarzinger@chromium.org>,Thu Jan 31 14:35:57 2019 +0100,v8/v8,323,2019Q1,323 v8/v8 2019Q1,fix interpreter stack height on type error trap. this fixes stack height management when a call to an external function raises a type error trap. it also adds a test case that such exceptions can be caught locally. chromium.org testrunwasmexceptions bug,satisfaction,2.0
1824,dad3faecf3bdfddf7ab52f05beb92a30b1cdb8a0,Cyrus Najmabadi <cyrusn@microsoft.com>,Tue Dec 9 18:25:10 2014 -0800,microsoft/TypeScript,142,2014Q4,142 microsoft/TypeScript 2014Q4,add incremental test.,frustration,3.0
1825,850f3cb60962fd292f799b6d8feed33cb614c26a,Anders Hejlsberg <andersh@microsoft.com>,Wed Nov 19 14:42:06 2014 -0800,microsoft/TypeScript,142,2014Q4,142 microsoft/TypeScript 2014Q4,destructuring parameter declarations,frustration,3.0
1826,d6b5965b7753b5828babbe09618f7dc45639fbe7,Gleb Smirnoff <glebius@FreeBSD.org>,Mon Oct 21 17:59:16 2019 +0000,freebsd/freebsd-src,1207,2019Q4,1207 freebsd/freebsd-src 2019Q4,convert to if_foreach_llmaddr kpi.,caution,3.0
1827,452588d3e58e2c0d9b64aee5a8f6d915d772439f,Rick Macklem <rmacklem@FreeBSD.org>,Fri Dec 20 21:41:33 2019 +0000,freebsd/freebsd-src,1207,2019Q4,1207 freebsd/freebsd-src 2019Q4,"update the man page to reflect the addition of . . include references to . and flexible file layout, plus clarify when vfs.nfsd.flexlinuxhack needs to be set for linux pnfs clients. also update the man page to reflect the addition of spaceused to the attributes stored in the extended attribute on the mds . this is a content change.",neutral,4.0
1828,2b9d918bfd8df818fef0145fa8b8673e1870ca92,kettenis <kettenis@openbsd.org>,Sun Dec 15 11:42:10 2013 +0000,openbsd/src,932,2013Q4,932 openbsd/src 2013Q4,"overhaul the pread and pwrite code to match what linux does. should fix a few more cache coherency issues, hopefully reducing the number of artifacts showing up the screen.",neutral,5.0
1829,a93be355900dd1fad053f08a9e2ce96da9775158,jmc <jmc@openbsd.org>,Thu Dec 5 07:41:40 2013 +0000,openbsd/src,932,2013Q4,932 openbsd/src 2013Q4,"no more stty, so point to tty as advised by deraadt",satisfaction,3.0
1830,0aeb81f86f6dc5bfc21bf035fd71ab17a3f3978f,Jonathan Wakely <redi@gcc.gnu.org>,Tue Oct 18 12:42:18 2016 +0100,gcc-mirror/gcc,848,2016Q4,848 gcc-mirror/gcc 2016Q4,don't define usesallocator variable templates in c uses_allocator.h __is_uses_allocator_constructible_v __is_nothrow_uses_allocator_constructible_v only define for c and later. fromsvn,satisfaction,3.0
1831,8eb8461dc13600aafd77b89928196366a4747786,Arnaud Charlet <charlet@gcc.gnu.org>,Thu Oct 13 14:58:24 2016 +0200,gcc-mirror/gcc,848,2016Q4,848 gcc-mirror/gcc 2016Q4,"hristian kirtchev sem_ch.adb create_extra_formals generate an itype reference for the object extra formal in case the subprogram is called within the same or nested scope. claire dross sem_ch.adb analyze_iterator_specification also create a renaming in gnatprove mode. ed schonberg freeze.adb freeze_fixed_point_type in spark mode, the given bounds of the type must be strictly representable, and the range reduction by one delta shaving allowed by the ada rm, is not applicable in spark. javier miranda debug.adb switch d. used to temporarily disable the support needed for this enhancement since it causes regressions with large sources. .adb post_compilation_validation_checks temporarily leave the validation of pragmas compile_time_warning and compile_time_error under control of gnatd. fromsvn",satisfaction,4.0
1832,fbadafbc20492db9c7ac0bb5bd541d72efeff9d7,Richard Henderson <rth@redhat.com>,Fri Jan 10 15:54:34 2003 -0800,gcc-mirror/gcc,848,2003Q1,848 gcc-mirror/gcc 2003Q1,"alpha.h no_profile_counters set. alpha.h no_profile_counters set. asm_output_reg_push, asm_output_reg_pop kill. fromsvn",frustration,3.0
1833,5f1355ef3890b4a997155b4f143681a1f992f68a,Jan Hubicka <jh@suse.cz>,Fri Jan 10 22:28:24 2003 +0100,gcc-mirror/gcc,848,2003Q1,848 gcc-mirror/gcc 2003Q1,ifcvt.c noce_try_addcc do not call emit_conditional_add with weird operands. fri jan cet jan hubicka ifcvt.c noce_try_addcc do not call emit_conditional_add with weird operands. fromsvn,neutral,3.0
1834,3c19f1bca83be3f4abef378d0a4cd852c8615164,Felix S. Klock II <pnkfelix@pnkfx.org>,Thu Jun 27 14:20:42 2013 +0200,rust-lang/rust,635,2013Q2,635 rust-lang/rust 2013Q2,refactored range code in preparation for change to range_rev semantics. also added unit tests of range code to test refactoring. the numrangerev.rs test will need to be updated when the range_rev semantics change.,caution,3.0
1835,73733c96db89f267e8a3289f660937c807b71283,bors <bors@rust-lang.org>,Thu May 2 18:09:35 2013 -0700,rust-lang/rust,635,2013Q2,635 rust-lang/rust 2013Q2,"auto merge of newtypedrop, follow up with test case for .",satisfaction,3.0
1836,e0b727dfd026d9698d39e4ee9d473d6d1dfaadba,mlarkin <mlarkin@openbsd.org>,Tue May 30 12:41:55 2017 +0000,openbsd/src,932,2017Q2,932 openbsd/src 2017Q2,move some data tables out of .text and into .rodata where they belong ok deraadt,neutral,4.0
1837,ceb1b38682f692d1ac9a398a1677c6d1e85279e7,brynet <brynet@openbsd.org>,Tue Jun 20 17:32:20 2017 +0000,openbsd/src,932,2017Q2,932 openbsd/src 2017Q2,"'t' is documented to be bounded to transposechars while in emacs mode, not stuff. while here, remove the poorly described stuff and stuff bind functions as well in the unlikely event anyone has those in .kshrc, they'll need to be removed. ok anton",satisfaction,5.0
1838,9d7f0ab7b4e6a43634d89b98110e82124fbdee6a,schwarze <schwarze@openbsd.org>,Sat Nov 29 03:37:28 2014 +0000,openbsd/src,932,2014Q4,932 openbsd/src 2014Q4,"provide a helper function macro_or_word and use it to prune the same chunk of argument parsing code out of five of the eight callback functions. the other three have too much special handling to participate. as a bonus, let lookup and mdoc_args deal with line macros and retire the lookup_raw helper and the mdoc_zargs internal interface function. no functional change, minus lines of code.",frustration,5.0
1839,ff5caba2a863a579ed9628cb42d8a75bf1d3f3c4,kspillner <kspillner@openbsd.org>,Thu Oct 23 20:38:37 2014 +0000,openbsd/src,932,2014Q4,932 openbsd/src 2014Q4,"add grammar to list of sections. ok jmc, deraadt begrudgingly",frustration,3.0
1840,f502143fb27bb4779e5ddda9187c0bbb7d68d701,niallo <niallo@openbsd.org>,Thu Sep 8 23:05:58 2005 +0000,openbsd/src,932,2005Q3,932 openbsd/src 2005Q3,"ensure that renegotiation is performed for a transition from sslverifyclient optional to sslverifyclient require fixes can ok henning, go for it deraadt",neutral,3.0
1841,301c265201fbd290ad5775d83def6273b2179baa,brad <brad@openbsd.org>,Fri Jul 1 22:43:36 2005 +0000,openbsd/src,932,2005Q3,932 openbsd/src 2005Q3,add some hp bgebased cards,neutral,4.0
1842,5d5ff49b9b028bb147e7700a580b2b0a4f1af982,Kubernetes Prow Robot <k8s-ci-robot@users.noreply.github.com>,Wed Nov 11 05:11:49 2020 -0800,kubernetes/kubernetes,464,2020Q4,464 kubernetes/kubernetes 2020Q4,merge pull request from xing update snapshot crds to,neutral,4.0
1843,37b34f5b53edec78ca33929443bb4ba9a9534ed1,Tim Hockin <thockin@google.com>,Tue Dec 15 21:49:16 2020 -0800,kubernetes/kubernetes,464,2020Q4,464 kubernetes/kubernetes 2020Q4,"use typedefs for begin functions david asked for this for readability, even if not all other hooks do it.",neutral,3.0
1844,fb044857e65338ad96e8867913e7caacb4e8994c,Bruce Evans <bde@FreeBSD.org>,Sun Jul 13 09:52:46 1997 +0000,freebsd/freebsd-src,1207,1997Q3,1207 freebsd/freebsd-src 1997Q3,finish ? importing 's . cvs ignored csh.a.,frustration,4.0
1845,00496c285537284b066d1fe1b6edd283195b5efc,Paul Traina <pst@FreeBSD.org>,Wed Aug 13 06:12:05 1997 +0000,freebsd/freebsd-src,1207,1997Q3,1207 freebsd/freebsd-src 1997Q3,make the cutover to periodic and cron.d as discussed to death on committers for the past week.,neutral,4.0
1846,7c390929d9529fcfbd643e081f0a0a7593ff9c6e,Mark Johnston <markj@FreeBSD.org>,Wed Feb 5 16:09:02 2020 +0000,freebsd/freebsd-src,1207,2020Q1,1207 freebsd/freebsd-src 2020Q1,fix map locking in the clear_pkru sysarch handler. reported and tested by pho mfc after week sponsored by the freebsd foundation,satisfaction,4.0
1847,28e68bc000e72bd2dda9ff94634ad998d33d4502,Kyle Evans <kevans@FreeBSD.org>,Wed Feb 5 17:21:36 2020 +0000,freebsd/freebsd-src,1207,2020Q1,1207 freebsd/freebsd-src 2020Q1,"o_search test drop o_searcho_rdwr local diff in freebsd's o_search implementation, o_search in conjunction with o_rdwr or o_wronly is explicitly rejected. in this case, o_rdwr was not necessary anyways as the file will get created with or without it. this was submitted upstream as and committed in rev . of the file.",neutral,4.0
1848,8039cf9bb1a3d3c600c0eaf35b53b008f0226ffc,Rob Scott <robertjscott@google.com>,Wed Jul 1 18:47:22 2020 -0700,kubernetes/kubernetes,464,2020Q3,464 kubernetes/kubernetes 2020Q3,graduating endpointsliceproxying to beta for linux,neutral,4.0
1849,16c13017a2e477552bfeac0acfa1b0a220b2daf0,lsytj0413 <511121939@qq.com>,Fri Aug 7 10:36:10 2020 +0800,kubernetes/kubernetes,464,2020Q3,464 kubernetes/kubernetes 2020Q3,refactor update pvc quota name typo in comment,neutral,3.0
1850,8b212e65c4825560c880b146ae639277b7fc63a6,markus <markus@openbsd.org>,Mon May 1 18:41:06 2000 +0000,openbsd/src,932,2000Q2,932 openbsd/src 2000Q2,check whether file exists before asking for passphrase,neutral,5.0
1851,80298c3b46400a8f24be35ddf9169ccc18e5cf9b,Arnaud Charlet <charlet@gcc.gnu.org>,Fri Jun 13 12:20:53 2014 +0200,gcc-mirror/gcc,848,2014Q2,848 gcc-mirror/gcc 2014Q2,"robert dewar exp_attr.adb expand_n_attribute_reference, case change reason to overflow. robert dewar makeutl.adb minor reformatting. gail schenker debug.adb, sem_eval.adb why_not_static remove temporary code and associated flag d.z, no longer needed. ed schonberg sem_ch.adb analyze_aspect_specifications for import and export aspects, do not check whether a corresponding convention aspect has been specified. convention is optional in , and defaults to convention_ada. fromsvn",neutral,4.0
1852,dea8e3edadc7980abfc297e8bee39f1f7ba53061,Kanchalai Tanglertsampan <yuisu@microsoft.com>,Tue May 19 13:23:32 2015 -0400,microsoft/TypeScript,142,2015Q2,142 microsoft/TypeScript 2015Q2,merge pull request from declare modifier for interface,caution,3.0
1853,c6249e9fef66057a1f89b8d4d6bcd5c0e1cfc217,Jack Jansen <jack.jansen@cwi.nl>,Mon Sep 10 21:03:06 2001 +0000,python/cpython,462,2001Q3,462 python/cpython 2001Q3,superseded by python vct.,satisfaction,4.0
1854,42daeab7df3e0f883e43573389b4e3e3f31c644b,Patrick Walton <pcwalton@mimiga.net>,Mon Aug 8 14:55:35 2011 -0700,rust-lang/rust,635,2011Q3,635 rust-lang/rust 2011Q3,"rt const foo const const foo , duh. puts out burning tinderbox.",frustration,2.0
1855,7da4db7bf1cc9630f37c6f46031ed972a9fe7275,millert <millert@openbsd.org>,Sat Jul 26 17:34:18 2003 +0000,openbsd/src,932,2003Q3,932 openbsd/src 2003Q3,add missing break in s case and make usage explicitly take void. from andrey matveev.,neutral,4.0
1856,aef3fb082ce3fec607ac2ba0afe71db1195a7ba7,Martin v. Löwis <martin@v.loewis.de>,Sat May 2 19:27:30 2009 +0000,python/cpython,462,2009Q2,462 python/cpython 2009Q2,make pycodec_surrogateerrors static.,neutral,5.0
1857,5b7ed762347ea9e82a3982b57975747de0943eb4,Jakub Jelinek <jakub@redhat.com>,Sat Aug 10 12:13:52 2019 +0200,gcc-mirror/gcc,848,2019Q3,848 gcc-mirror/gcc 2019Q3,"re pr ice in extract_insn, at recog. since pr mmx.md use register_operand instead of vector_operand. gcc..c new test. fromsvn",neutral,5.0
1858,413134305e0038936cfa246a56ab91903d35e19c,John Baldwin <jhb@FreeBSD.org>,Wed Sep 10 19:13:30 2008 +0000,freebsd/freebsd-src,1207,2008Q3,1207 freebsd/freebsd-src 2008Q3,"teach witness about the interlocks used with lockmgr. this removes a bunch of spurious witness warnings since lockmgr grew witness support. before this, every time you passed an interlock to a lockmgr lock witness treated it as a lor. reviewed by attilio",neutral,3.0
1859,626d8465fbf608ec33e89fce543a289fcba3ce1e,Hans Petter Selasky <hselasky@FreeBSD.org>,Wed Feb 13 15:43:15 2013 +0000,freebsd/freebsd-src,1207,2013Q1,1207 freebsd/freebsd-src 2013Q1,remove unused variable. mfc after week,neutral,6.0
1860,347f9c745707e5d55d261434c4c4affc3bbb4c85,R David Murray <rdmurray@bitdance.com>,Mon Dec 23 21:30:06 2013 -0500,python/cpython,462,2013Q4,462 python/cpython 2013Q4,make the 'read on' sentence cover more ground.,satisfaction,4.0
1861,2a89829bde87ff018a5a613de389fc042a781bbb,Juli Mallett <jmallett@FreeBSD.org>,Sun Nov 28 04:07:45 2010 +0000,freebsd/freebsd-src,1207,2010Q4,1207 freebsd/freebsd-src 2010Q4,set machine_arch based on abi and endianness. reviewed by imp,neutral,4.0
1862,0abbfd21897f5c2f45d513d6d3212dae188e2bd7,Kai Tietz <ktietz@redhat.com>,Thu Nov 29 10:21:17 2012 +0100,gcc-mirror/gcc,848,2012Q4,848 gcc-mirror/gcc 2012Q4,re pr incorrect virtual thunk on mingw pr .c get_scratch_register_on_entry handle thiscallconvention. split_stack_prologue_scratch_regno likewise. ix_static_chain likewise. x_output_mi_thunk likewise. fromsvn,frustration,6.0
1863,3e920bd03d61a41ff8a337afa4659a0e1453e2eb,Matthias Klose <doko@ubuntu.com>,Fri Nov 29 16:53:39 2013 +0000,gcc-mirror/gcc,848,2013Q4,848 gcc-mirror/gcc 2013Q4,"gnu_java_awt_peer_gtk_freetypeglyphvector.c, fix freetype includes. matthias klose gtk.c, gtk.c fix freetype includes. fromsvn",caution,3.0
1864,798e70e0cbb7d32fe18c1270416346f5289cab42,Andrey A. Chernov <ache@FreeBSD.org>,Mon Jun 2 10:21:12 1997 +0000,freebsd/freebsd-src,1207,1997Q2,1207 freebsd/freebsd-src 1997Q2,back out .pid cleaning since some programms like innd use .pid to detect crash,satisfaction,5.0
1865,ba3e26e86c5fd7a63371aa1c4f9bab4ee8978ee7,Brooks Moses <brooks.moses@codesourcery.com>,Fri Mar 2 00:18:47 2007 +0000,gcc-mirror/gcc,848,2007Q1,848 gcc-mirror/gcc 2007Q1,makelang.in add installpdf target as copied from automake . rules. makelang.in add installpdf target as copied from automake . rules. fromsvn,satisfaction,3.0
1866,90ce2410817115f2ea804c981de9da37e0577a91,Konstantin Belousov <kib@FreeBSD.org>,Tue Feb 19 20:26:03 2019 +0000,freebsd/freebsd-src,1207,2019Q1,1207 freebsd/freebsd-src 2019Q1,minor cleanup for mkuzip man page. list all singleletter options in summary. order options alphabetically. sponsored by mellanox technologies mfc after days,caution,3.0
1867,cbdafaf6309dda9e847177691225093ec17c9b55,jmc <jmc@openbsd.org>,Thu Jul 30 19:38:26 2009 +0000,openbsd/src,932,2009Q3,932 openbsd/src 2009Q3,linksys ok damien,satisfaction,4.0
1868,0989f675cc434d8f925667579fca7a71983f3f3b,jsg <jsg@openbsd.org>,Mon Jul 29 11:07:40 2019 +0000,openbsd/src,932,2019Q3,932 openbsd/src 2019Q3,fix i_exec_ring_mask from chris wilson fedbefaceac in linux dcdfbbddbbdc in mainline linux,neutral,4.0
1869,d716a02a033e605e8a38ab34b109ccc59d0013b7,claudio <claudio@openbsd.org>,Sun Sep 23 09:39:17 2012 +0000,openbsd/src,932,2012Q3,932 openbsd/src 2012Q3,"enable graceful restart by default. the only way to find out if it works for real. after discussion with sthen, henning and deraadt. it can be disabled per neighbor with announce restart no.",frustration,7.0
1870,4b12e93df87d277dd252b39c364953502615a35d,Tristan Gingold <gingold@adacore.com>,Mon Mar 26 09:35:18 2012 +0000,gcc-mirror/gcc,848,2012Q1,848 gcc-mirror/gcc 2012Q1,"vms.h link_spec simplify. libgcc tristan gingold vms.h link_spec simplify. startfile_spec remove mvmsreturncodes handling. name__main, symbol__main remove. vms_debug_main_pointer remove. vms.h likewise. alpha.c alpha_start_function move vms_debug_main code to vms.c. call vms_start_function. .c ia_start_function likewise. vmsprotos.h vms_start_function declare. vms.c vms_start_function new function. vms.h math_library define. vms_debug_main_pointer define. gcc tristan gingold vms.h link_spec simplify. startfile_spec remove mvmsreturncodes handling. name__main, symbol__main remove. vms_debug_main_pointer remove. vms.h likewise. alpha.c alpha_start_function move vms_debug_main code to vms.c. call vms_start_function. .c ia_start_function likewise. vmsprotos.h vms_start_function declare. vms.c vms_start_function new function. vms.h math_library define. vms_debug_main_pointer define. fromsvn",neutral,4.0
1871,44062a954fcacf01219b7ca633eb0b9fe9b886c8,aroben <aroben@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Jan 10 17:15:39 2007 +0000,chromium/chromium,4568,2007Q1,4568 chromium/chromium 2007Q1,reviewed by geoff. fix contextmenucontroller leaks events no layout tests possible. .cpp webcorecontextmenucontrollercontextmenuitemselected use refptr to manage the lifetime of shared objects. bb,neutral,7.0
1872,404e48547ae0ddd515fa0615eebd8449e7741c98,Kaveh R. Ghazi <ghazi@caip.rutgers.edu>,Sat Jul 15 15:13:52 2000 +0000,gcc-mirror/gcc,848,2000Q3,848 gcc-mirror/gcc 2000Q3,warning patch mips.c function_arg_pass_by_reference don't do automatic aggregate initialization. machine_dependent_reorg initialize variable mode'. mips.md change variable ' to unsigned int. reload_indi rename to to avoid conflicts with .h macro of the same name. reload_outdi likewise. fromsvn,frustration,4.0
1873,aaa42f77dbf312ff6c3c15abd8bfa059eeb0d3b1,Mark Dickinson <dickinsm@gmail.com>,Sun Oct 25 20:50:18 2009 +0000,python/cpython,462,2009Q4,462 python/cpython 2009Q4,"blocked revisions via svnmerge mark.dickinson sun, oct lines issue small performance boost for bitwise operations on longs. initial patch by gregory smith some tweaks added.",neutral,3.0
1874,a0e197be94d7dbe35578832bf024e60da41b4862,jason <jason@openbsd.org>,Thu Mar 30 02:49:35 2000 +0000,openbsd/src,932,2000Q1,932 openbsd/src 2000Q1,auto detect the size of the seeprom from freebsd from netbsd from linux?,neutral,3.0
1875,d6f9c011d2b2395fee57f0fcd271f5e7015a5878,Gary Palmer <gpalmer@FreeBSD.org>,Sat Oct 15 20:50:05 1994 +0000,freebsd/freebsd-src,1207,1994Q4,1207 freebsd/freebsd-src 1994Q4,fix up this makefile so that it handles clean' and cleandir' properly.,caution,3.0
1876,d960ab7b8daceba84413b25d91c2410eec1bbde2,Oleg Endo <olegendo@gcc.gnu.org>,Fri Feb 16 13:52:49 2018 +0000,gcc-mirror/gcc,848,2018Q1,848 gcc-mirror/gcc 2018Q1,"re pr unused bclr,bnot,bset insns gcc pr rx.c rx_fuse_in_memory_bitop convert shift operand to qimode. pr gcc..c test_, test_ adjust test cases. fromsvn",caution,5.0
1877,0d66ad572b03eb9d8921c649ba6f4b0cfdf2e8b6,Neil Booth <neil@daikokuya.demon.co.uk>,Sat Jun 1 23:27:50 2002 +0000,gcc-mirror/gcc,848,2002Q2,848 gcc-mirror/gcc 2002Q2,".h target_cpu_cpp_builtins new. .h target_cpu_cpp_builtins new. cpp_spec, cpp_predefines kill. .h cpp_predefines kill. target_os_cpp_builtins new. fromsvn",frustration,2.0
1878,50dba227a4d7408054fcab3c03c0c55ff6e3793d,jason <jason@openbsd.org>,Tue Dec 4 20:15:12 2001 +0000,openbsd/src,932,2001Q4,932 openbsd/src 2001Q4,add commented out entries for cgsix at sbus and wsdisplay at cgsix,neutral,3.0
1879,fcc6af50f0ce6edbfe41323d3b30bc02e77bda16,Andriy Gapon <avg@FreeBSD.org>,Sat Oct 20 09:40:34 2012 +0000,freebsd/freebsd-src,1207,2012Q4,1207 freebsd/freebsd-src 2012Q4,document acpi_cpu devd notification about _cst change based on prodding and a submission by lars engels . mfc after days,frustration,7.0
1880,ebeaeb7535cc7cd5d81abfc566bd54f6876506d0,miod <miod@openbsd.org>,Wed Jul 3 23:30:20 2002 +0000,openbsd/src,932,2002Q3,932 openbsd/src 2002Q3,xr fixes from pr,satisfaction,3.0
1881,85fbb2c0b43a011b00c44218223e077a5ad44a25,hausmann@webkit.org <hausmann@webkit.org@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Wed Jan 16 10:17:07 2008 +0000,chromium/chromium,4568,2008Q1,4568 chromium/chromium 2008Q1,trivially implement the themed search field by mapping it to a text field also add a bunch of notimplemented warnings for other places where we don't have an implementatin in rendertheme. bb,caution,4.0
1882,467be13057a9a2a9da30be6cabf7469933f614ea,schwarze <schwarze@openbsd.org>,Fri Jan 18 07:32:17 2019 +0000,openbsd/src,932,2019Q1,932 openbsd/src 2019Q1,"replace the vague, incorrect, and confusing bugs sections with caveats clearly stating which arguments have to be avoided, and mention the header files defining the constants required for the checks. feedback and ok guenther, ok bluhm.",satisfaction,4.0
1883,74621ca926cfc64244e4fd39ae03edcdeaa4113f,Alexander Golynski <agolynski@fb.com>,Wed Jan 15 14:03:29 2020 -0800,pytorch/pytorch,165,2020Q1,165 pytorch/pytorch 2020Q1,"add allgather_base as per our discussion re processgroup interface. summary introduce processgroupallgather_base. no implementation yet plan to add it one pg backend at a time in a follow up. pull request resolved test plan no functional changes, no tests yet. differential revision pulled by agolynski fbshipitsourceid cfdcdecdebaa",neutral,4.0
1884,bf0e3b62aee7d902d323995ec7f2bb788a594fcb,Iurii Zdebskyi <iuriiz@fb.com>,Wed Jun 5 10:08:50 2019 -0700,pytorch/pytorch,165,2019Q2,165 pytorch/pytorch 2019Q2,minor preparational jit changes summary pull request resolved ghimportsourceid fbbcdbfbccadbcdec reviewed by ezyang differential revision pulled by izdeby fbshipitsourceid cddaceefdecfddf,neutral,5.0
1885,226660aff3f29cac2c24320417ec1ffe7224825a,Andreas Tobler <andreast@gcc.gnu.org>,Thu Sep 4 16:58:22 2003 +0200,gcc-mirror/gcc,848,2003Q3,848 gcc-mirror/gcc 2003Q3,sorry forgot the changelog. fromsvn,neutral,4.0
1886,7a0898c727708186e2f92ce676fedd36f6e11d77,Ben L. Titzer <titzer@chromium.org>,Wed Jul 26 13:01:21 2017 +0200,v8/v8,323,2017Q3,323 v8/v8 2017Q3,integrate improvements to wasmmodulebuilder.js from spec repo. chromium.org bug,frustration,6.0
1887,82903dda9b13f982b9fa9d6a4e34e668fb30c561,vaeksare <42353187+vaeksare@users.noreply.github.com>,Wed Dec 5 21:24:58 2018 -0800,pytorch/pytorch,165,2018Q4,165 pytorch/pytorch 2018Q4,fixes for some windows compiler warnings summary implement some simple fixes to clean up windows build by fixing compiler warnings. three main types of warnings were fixes . gcc specific pragmas were changed to not be used on windows. . cmake flags that don't exist on windows were removed from windows build . fix a macro that was defined multiple times on windows. pull request resolved differential revision pulled by ezyang fbshipitsourceid dafeabcecddafdc,satisfaction,3.0
1888,13f01e65c43a3616cbc2ed5bcab0a8080fa1f488,mstarzinger@chromium.org <mstarzinger@chromium.org>,Wed Sep 10 09:52:50 2014 +0000,v8/v8,323,2014Q3,323 v8/v8 2014Q3,enable typed pipeline for turbofan. chromium.org review url cebaddcdecc,frustration,1.0
1889,dc0a8e318e4e0d5b977ad91d3b4032cd2a46987d,Kevin Lo <kevlo@FreeBSD.org>,Wed Mar 14 01:59:00 2007 +0000,freebsd/freebsd-src,1207,2007Q1,1207 freebsd/freebsd-src 2007Q1,make it compile,frustration,3.0
1890,7b3b69b5108f97e60412c352a5aaf774c4a908ff,melissa-barca <melissa@rstudio.com>,Mon Sep 14 17:05:55 2020 -0400,rstudio/rstudio,155,2020Q3,155 rstudio/rstudio 2020Q3,convert html callback to string before passing to front end,frustration,3.0
1891,27f8abfa249bab6665fbbce8637a73cf9a701c18,Afshin Darian <git@darian.af>,Wed Jan 11 12:43:40 2017 +0000,jupyterlab/jupyterlab,97,2017Q1,97 jupyterlab/jupyterlab 2017Q1,merge pull request from build switch to tsloader,neutral,4.0
1892,6bc0f0317d7f1276625e4472debf08fcc238651e,Andrey A. Chernov <ache@FreeBSD.org>,Sun Jan 4 20:45:41 1998 +0000,freebsd/freebsd-src,1207,1998Q1,1207 freebsd/freebsd-src 1998Q1,remove library funcs we already have,frustration,3.0
1893,c354fb9cda321db572e369f708b646a91ffe9461,Clemens Hammacher <clemensh@chromium.org>,Fri May 31 10:46:35 2019 +0200,v8/v8,323,2019Q2,323 v8/v8 2019Q2,"add histogram for bailout reasons this cl adds a new enum liftoffbailoutreason, and tracks this reason for each bailout. this will give us data to prioritize extensions of liftoff for new proposals or last missing instructions. since we also track the ksuccess case, we will also see what percentage of functions can be compiled with liftoff overall. chromium.org chromium.org",satisfaction,4.0
1894,3324db447fdb10b027e49b4d7f92abd97e17887a,Szymon Piechowicz <szymon@fb.com>,Tue Aug 1 10:02:05 2017 -0700,pytorch/pytorch,165,2017Q3,165 pytorch/pytorch 2017Q3,allow nets that don't use all input in net.clonepartial summary allow nets that don't use all input in net.clonepartial differential revision fbshipitsourceid ecfbadeddcdaccdcfa,neutral,4.0
1895,6d67984dee677ac96e8a65b6a3e91d4588891693,tb <tb@openbsd.org>,Fri Jan 5 13:21:52 2018 +0000,openbsd/src,932,2018Q1,932 openbsd/src 2018Q1,typos in comments 'it' 'if' and 'noityf' 'notify'. from klemens nanni,neutral,3.0
1896,9adf8fa8d61dca5d71468bc7fa95ef75fdb99da5,Junliang Yan <jyan@ca.ibm.com>,Sat Apr 14 16:14:12 2018 -0400,v8/v8,323,2018Q2,323 v8/v8 2018Q2,"change address typedef to uintptr_t port cddbcdefebffdeb original commit message the address type is 's generalpurpose type for manipulating memory addresses. per the c spec, pointer arithmetic and pointer comparisons are undefined behavior except within the same array since we generally don't operate within a c array, our generalpurpose type shouldn't be a pointer type. chromium.org, , bug",frustration,4.0
1897,99d7ad0bb0b38eb979a0442705e5c9efcd55e8e0,Victor Stinner <vstinner@wyplay.com>,Wed Feb 22 13:37:39 2012 +0100,python/cpython,462,2012Q1,462 python/cpython 2012Q1,microoptimize computation of maxchar in pyunicode_transformdecimaltoascii,neutral,4.0
1898,996335acf258d41e51f5f129992a698a5b6dc3b7,tedu <tedu@openbsd.org>,Thu May 30 18:31:34 2013 +0000,openbsd/src,932,2013Q2,932 openbsd/src 2013Q2,typo thing thin provisioning,neutral,4.0
1899,12754fe6b36634e35314d58fbb96ca077c4d181a,Chris Lattner <sabre@nondot.org>,Wed Aug 18 05:29:08 2004 +0000,llvm/llvm-project,1805,2004Q3,1805 llvm/llvm-project 2004Q3,switch over to using the asmprinter base class to do its constant printing massive thanks to the brg miester for doing the testing. llvmsvn,neutral,2.0
1900,21f0e4037d207f390e67ce09bd0d14cced9a757c,mglocker <mglocker@openbsd.org>,Fri Aug 21 19:02:46 2020 +0000,openbsd/src,932,2020Q3,932 openbsd/src 2020Q3,fido and umstc also attach to uhidev.,neutral,4.0
1901,77b8455903d53df9a0b509540b91d4883351de96,Kaveh R. Ghazi <ghazi@caip.rutgers.edu>,Tue Mar 13 19:55:18 2001 +0000,gcc-mirror/gcc,848,2001Q1,848 gcc-mirror/gcc 2001Q1,"system.h malloc, only poison these tokens when in_gcc is defined. system.h malloc, realloc, calloc, strdup only poison these tokens when in_gcc is defined. fromsvn",neutral,4.0
1902,57ee3c0f6eea835cfb094fd39cd1883ea4d6e33f,yangguo <yangguo@chromium.org>,Fri May 22 05:18:13 2015 -0700,v8/v8,323,2015Q2,323 v8/v8 2015Q2,"revert of implement sharedarraybuffer patchset of reason for revert breaks build original issue's description implement sharedarraybuffer. this adds a new external type sharedarraybuffer that uses a jsarraybuffer under the hood. it can be distinguished from an arraybuffer by the newlyadded is_shared bit. currently there is no difference in functionality between a sharedarraybuffer and an arraybuffer. however, a future cl will add the atomics api, which is only available on an sharedarraybuffer. all nonatomic accesses are identical to arraybuffer accesses. bug committed cr",neutral,3.0
1903,fc5b21380eee9b33e07a59dbdb91c05cfe18a3cf,Bryce McKinlay <bryce@albatross.co.nz>,Thu May 18 10:08:25 2000 +0000,gcc-mirror/gcc,848,2000Q2,848 gcc-mirror/gcc 2000Q2,"thread.java declare data' as object, not rawdata. bryce mckinlay thread.java declare data' as object, not rawdata. natthread.java initialize_native cast data' to jobject. rawdata.java clarify documentation. fromsvn",neutral,5.0
1904,f6b563af2d1d8dc1782546436990c0517f226ccf,Victor Stinner <victor.stinner@haypocalc.com>,Mon Mar 14 20:46:50 2011 -0400,python/cpython,462,2011Q1,462 python/cpython 2011Q1,"issue zipimport has a full unicode use unicode for module paths and names, selfarchive and selfprefix format module names and paths use r instead of 'u' to escape surrogate characters pep use pyimport_execcodemoduleobject instead of pyimport_execcodemoduleex use pyimport_addmoduleobject instead of pyimport_addmodule",satisfaction,3.0
1905,0b9f099afdac244e8b30ea10e776039955532248,Jakub Jelinek <jakub@redhat.com>,Wed Mar 8 09:52:05 2017 +0100,gcc-mirror/gcc,848,2017Q1,848 gcc-mirror/gcc 2017Q1,avr.md setmemhi make sure match_dup operand number comes before match_scratch. avr.md setmemhi make sure match_dup operand number comes before match_scratch. fromsvn,frustration,2.0
1906,2b3eb0dbac9fa3c56176bb9d42b69a97034ccd05,Nick Coghlan <ncoghlan@gmail.com>,Sun Jun 17 18:27:54 2012 +1000,python/cpython,462,2012Q2,462 python/cpython 2012Q2,merge from issue handle fedora 's approach to ndbm compatibility,frustration,3.0
1907,b0a4e2684391499f7e02735c2976957752cd17cb,Gabor Kovesdan <gabor@FreeBSD.org>,Tue Jan 8 15:36:06 2008 +0000,freebsd/freebsd-src,1207,2008Q1,1207 freebsd/freebsd-src 2008Q1,this driver will first appear in freebsd not . submitted by thompsa mfc after days,neutral,4.0
1908,a3cbda1b7caeb74630f09dc7e01bd59f30085f00,Paolo Carlini <paolo.carlini@oracle.com>,Sat Oct 28 16:10:10 2017 +0000,gcc-mirror/gcc,848,2017Q4,848 gcc-mirror/gcc 2017Q4,re pr c ice in parameter pack expansion paolo carlini pr c g..c new. fromsvn,neutral,5.0
1909,232f1f97ad3ed549374769697eda3e872aab95f3,Eric Botcazou <ebotcazou@adacore.com>,Mon Apr 27 10:29:07 2015 +0000,gcc-mirror/gcc,848,2015Q2,848 gcc-mirror/gcc 2015Q2,storlayout.c self_referential_component_ref_p new predicate. storlayout.c self_referential_component_ref_p new predicate. copy_self_referential_tree_r use it. self_referential_size punt for simple operations directly involving selfreferential component references. treecfg.c dump_function_to_file add missing final curly bracket. fromsvn,frustration,6.0
1910,ab26b86473918fa4c5da7bbf651aa3cafd614073,Giorgos Keramidas <keramida@FreeBSD.org>,Sun Jan 16 20:10:55 2011 +0000,freebsd/freebsd-src,1207,2011Q1,1207 freebsd/freebsd-src 2011Q1,"fix the mount example of xfdmitry marakasov s filesystems by including the readonly option. we only support ro mounts for xfs, so it's nice if the examples we show in the manpage are easy to . pr submitted by mfc after days",neutral,4.0
1911,f719733b7dcd3650ed846aca6ef6f34aeb16c88c,Mark Dickinson <dickinsm@gmail.com>,Fri Jul 9 22:12:52 2010 +0000,python/cpython,462,2010Q3,462 python/cpython 2010Q3,"revert temporary debugging commits , .",caution,2.0
1912,2bb96d8923338b4bc2cbed3128317b4ea6df95c4,Poul-Henning Kamp <phk@FreeBSD.org>,Mon Jan 23 02:36:22 1995 +0000,freebsd/freebsd-src,1207,1995Q1,1207 freebsd/freebsd-src 1995Q1,"nobody seems to need mem_no anymore, so i zapped it.",neutral,3.0
1913,edbe1f3bb15816dede9aa5cc63f9c9896a645f7a,Martin Liska <mliska@suse.cz>,Thu Jan 9 09:25:47 2020 +0100,gcc-mirror/gcc,848,2020Q1,848 gcc-mirror/gcc 2020Q1,one more usage of cgraph_nodedump_name. martin liska cgraphclones.c symbol_tablematerialize_all_clones use cgraph_nodedump_name. fromsvn,caution,1.0
1914,fcf7081cf9b5f2ccbc5167806fb8e377f100efec,Eric Botcazou <ebotcazou@gcc.gnu.org>,Sat Jun 2 10:57:54 2018 +0000,gcc-mirror/gcc,848,2018Q2,848 gcc-mirror/gcc 2018Q2,add missing directive fromsvn,neutral,4.0
1915,04359b5e1ed106cd9cb7290040bdf380598bda7b,Konstantin Belousov <kib@FreeBSD.org>,Thu Aug 29 07:34:14 2019 +0000,freebsd/freebsd-src,1207,2019Q3,1207 freebsd/freebsd-src 2019Q3,remove useless redefinition of nsfbufs in .c. sponsored by the freebsd foundation,neutral,4.0
1916,8a83a69363442100aa9435199e5d385716658255,Giovanni Bajo <giovannibajo@gcc.gnu.org>,Sun Jun 6 02:08:18 2004 +0000,gcc-mirror/gcc,848,2004Q2,848 gcc-mirror/gcc 2004Q2,"re pr c nested template problem pr c parser.c cp_parser_mem_initializer_id gracefully reject 'typename', and accept 'template'. pr c g..c new test. fromsvn",satisfaction,3.0
1917,d78d9a64cf27dee518e1a019722c649b18ffe53a,Ganbold Tsagaankhuu <ganbold@FreeBSD.org>,Tue Nov 25 19:06:20 2008 +0000,freebsd/freebsd-src,1207,2008Q4,1207 freebsd/freebsd-src 2008Q4,remove unused variable. found with coverity preventtm cid approved by njl,satisfaction,5.0
1918,8e807b59d87ba2d45014afab66c3d3bf5a647cf7,Hans-Peter Nilsson <hp@bitrange.com>,Sat Jul 25 23:25:09 2020 +0200,gcc-mirror/gcc,848,2020Q3,848 gcc-mirror/gcc 2020Q3,"mmix.c target_asm_output_ident override. funny that default_asm_output_ident_directive isn't the default anyway, since dotpseudos like .ident are treated as comments by mmixal, there's nothing lost compatibilitywise by supporting it. if mmixknuthmmixware had included elfos.h this'd have been the default. there might be enough reason to do that relocatable objects are elf but by default links to produce mmo. fixes cc.c and in c and c testing. committed. gcc mmix.c target_asm_output_ident override the default with default_asm_output_ident_directive.",satisfaction,4.0
1919,8d857afc8652b9b55b315dd7d17f5706bf2050e4,Jason Merrill <jason@redhat.com>,Tue May 31 15:49:22 2016 -0400,gcc-mirror/gcc,848,2016Q2,848 gcc-mirror/gcc 2016Q2,pt.c instantiate_decl avoid recalculation. fromsvn,satisfaction,5.0
1920,5e72f3ca0b55c3b23e1060d8610d356bd988eac0,Russ Cox <rsc@golang.org>,Mon Jan 30 23:48:57 2012 -0500,golang/go,219,2012Q1,219 golang/go 2012Q1,build fix buildscripts dev dev,frustration,5.0
1921,76232d39dcf2ef078d20448e50b5a0925ca61ad2,downsj <downsj@openbsd.org>,Wed Apr 16 09:49:00 1997 +0000,openbsd/src,932,1997Q2,932 openbsd/src 1997Q2,multiple include protection.,frustration,4.0
1922,116e8b669eddc96b0294c6cf114372a0d346072e,Bob Duff <duff@adacore.com>,Thu Jun 18 09:10:33 2020 -0400,gcc-mirror/gcc,848,2020Q2,848 gcc-mirror/gcc 2020Q2,"bug in enum_subtype'image in ada mode exp_imgv.adb expand_image_attribute add root_type, so constrained subtypes work.",satisfaction,3.0
1923,0e3c61d436655deaf3c4d176cdcdfa5b68a23179,Kai Wang <kaiw@FreeBSD.org>,Wed Jul 21 09:56:42 2010 +0000,freebsd/freebsd-src,1207,2010Q3,1207 freebsd/freebsd-src 2010Q3,changes for supporting gnu hash sections. obtained from elftoolchain mfc after month,neutral,4.0
1924,216358d6093fb743ba6adf599ae49bdef8a02b1a,Peng Lyu <penn.lv@gmail.com>,Thu Jun 13 11:44:24 2019 -0700,microsoft/vscode,303,2019Q2,303 microsoft/vscode 2019Q2,keyboard layout for darwin,neutral,3.0
1925,b5479a05012083db67ea3a3629cad4f48a403ece,mcbride <mcbride@openbsd.org>,Mon Apr 21 01:51:10 2008 +0000,openbsd/src,932,2008Q2,932 openbsd/src 2008Q2,test for blank lines and comments between and inline anchor and its rules.,neutral,4.0
1926,04aba254077ad9f7c52ad9feb9dc5a9b66dce7cf,Bruce Evans <bde@FreeBSD.org>,Wed Mar 12 16:49:28 1997 +0000,freebsd/freebsd-src,1207,1997Q1,1207 freebsd/freebsd-src 1997Q1,finished ? merging with cleaned up include mess. fixed misformatting in a comment.,frustration,5.0
1927,95a1574e4f619daff99236c605b2179456d08326,Nate Williams <nate@FreeBSD.org>,Fri Sep 20 05:51:12 1996 +0000,freebsd/freebsd-src,1207,1996Q3,1207 freebsd/freebsd-src 1996Q3,"whoops, i should've used the lint config file. more ts tv changes for timespec structure.",neutral,5.0
1928,f8afe107fa7a677dc611dd39532570ddaab3bfab,Michael Sullivan <sully@msully.net>,Wed Jun 13 15:07:19 2012 -0700,rust-lang/rust,635,2012Q2,635 rust-lang/rust 2012Q2,minor makefile cleanup.,satisfaction,4.0
1929,6530d55cd4407faaf426c1aeb752ec8e3dabe52c,hyatt <hyatt@bbb929c8-8fbe-4397-9dbb-9b2b20218538>,Tue Sep 4 23:23:36 2007 +0000,chromium/chromium,4568,2007Q3,4568 chromium/chromium 2007Q3,fix build bustage. bb,neutral,4.0
1930,2aae234ead0d70c7532f5dd358a0bea4c7fc80b5,Chris Lattner <sabre@nondot.org>,Fri Aug 15 05:21:30 2003 +0000,llvm/llvm-project,1805,2003Q3,1805 llvm/llvm-project 2003Q3,remove extraneous include llvmsvn,satisfaction,3.0
1931,bac68e4af3592dfcd6867fb8a73d2999daff744f,Brian Anderson <banderson@mozilla.com>,Sun May 22 00:40:55 2011 -0400,rust-lang/rust,635,2011Q2,635 rust-lang/rust 2011Q2,stdlib add regression tests for stdlist,caution,4.0
1932,d81139ab835241e158e43a607bb94385666ffef2,brad <brad@openbsd.org>,Thu Feb 14 05:04:59 2008 +0000,openbsd/src,932,2008Q1,932 openbsd/src 2008Q1,missed updating the sk_is_yukon macro when adding yukon supreme support. ok kettenis dlg,frustration,5.0
1933,27c339aa90068599ea5ee26a5becb5e5c2fa17b4,Jason Freeman <jfreeman@microsoft.com>,Fri Jul 17 14:16:28 2015 -0700,microsoft/TypeScript,142,2015Q3,142 microsoft/TypeScript 2015Q3,merge branch 'master' of into tupletypesany,frustration,6.0
1934,ee587f39ae44150e9105c7e401712e52cb9254fb,Jonathan Eskew <eskewj@amazon.com>,Fri Oct 6 13:31:56 2017 -0700,nodejs/node,142,2017Q4,142 nodejs/node 2017Q4,test add tests of querystring benchmark prurl lucas gu cheung,frustration,2.0
1935,cc6b046f4833561a03625def4d0a71b5dd2dd7b0,li-roy <8813817+li-roy@users.noreply.github.com>,Wed Jun 20 09:53:06 2018 -0700,pytorch/pytorch,165,2018Q2,165 pytorch/pytorch 2018Q2,implement flatten function implement flatten function address comments allow undo submodule change,satisfaction,2.0
1936,7b537d1dbe13d99ec5a0276d09d46884539bf68d,Thomas Kluyver <thomas@kluyver.me.uk>,Tue Dec 9 14:54:34 2014 -0800,ipython/ipython,87,2014Q4,87 ipython/ipython 2014Q4,merge pull request from display add ipythondisplayformatter,neutral,7.0
1937,eba77f5c40ab87e61064f134f5ecae155b6674b9,Ed Schouten <ed@FreeBSD.org>,Sat Sep 12 12:44:21 2009 +0000,freebsd/freebsd-src,1207,2009Q3,1207 freebsd/freebsd-src 2009Q3,commit all local modifications i have to libteken make support runtime configurable. this allows me to share libteken between syscons and my new vt driver. add a fix to print blanks after printing a double width character to prevent rendering artifacts. add some more utility functions that i use in the vt driver.,satisfaction,5.0
1938,09db53be574d29281165c080914f519b31cdcdcc,Brian Gaeke <gaeke@uiuc.edu>,Wed Dec 10 04:33:07 2003 +0000,llvm/llvm-project,1805,2003Q4,1805 llvm/llvm-project 2003Q4,fix apparent copyandpasteo. get rid of debug mac os x bison doesn't have it. sigh. llvmsvn,neutral,4.0
1939,6509542fb383d0e7fb7236c570faddaae2e3ada1,Peter Wemm <peter@FreeBSD.org>,Tue Jun 3 19:27:02 2008 +0000,freebsd/freebsd-src,1207,2008Q2,1207 freebsd/freebsd-src 2008Q2,"did not delete this, even though it is empty.",satisfaction,5.0
1940,a2f7b4ad34f5690f71d95d4e438b9a8006d45bd9,Janne Blomqvist <jb@gcc.gnu.org>,Sun Apr 28 21:16:25 2013 +0300,gcc-mirror/gcc,848,2013Q2,848 gcc-mirror/gcc 2013Q2,fix sign error in system_clock windows version. janne blomqvist .c system_clock_ fix sign error in windows version. fromsvn,caution,4.0
1941,2b597e4f54a4fb5ba50b9be617aa0cb2eb1ace9f,Guido van Rossum <guido@python.org>,Thu Jan 25 22:12:43 2001 +0000,python/cpython,462,2001Q1,462 python/cpython 2001Q1,"correct oneline typo, reported by yole sf, bug .",neutral,5.0
1942,9f8f4efee32849800cfcaeed33aefac921f9b96b,Kaveh R. Ghazi <ghazi@caip.rutgers.edu>,Tue Feb 15 16:36:35 2000 +0000,gcc-mirror/gcc,848,2000Q1,848 gcc-mirror/gcc 2000Q1,"makefile.in tree_h, depend on version.h. makefile.in tree_h, .o, gcc.h, mipstfile.o, .o, cpphash.o, cppinit.o, protoize.o, unprotoize.o depend on version.h. .c include version.h don't declare version_string'. .c likewise. alpha.c likewise. .h likewise. .h likewise. .h likewise. .h likewise. .h likewise. .h likewise. .h likewise. .h likewise. .c likewise. .c likewise. .h likewise. .c likewise. pe.h likewise. .h likewise. .h likewise. .c likewise. cpphash.c likewise. cppinit.c likewise. .c likewise. dwarfout.c likewise. gcc.c likewise. gcc.h likewise. mipstfile.c likewise. protoize.c likewise. toplev.c likewise. tree.h likewise. version.c version_string constify a char. version.h new file. ch grant.c don't declare version_string'. f .c don't declare version_string'. java makefile.in jvscan, jcfdump, gcjh depend on and link with version.o. jcfdump.o, gjavah.o, jvscan.o depend on version.h. gjavah.c include version.h. jcfdump.c likewise. jvscan.c likewise. fromsvn",neutral,5.0
1943,b591e5de31fe98fb92c37be84dfe813039069460,Alkis Evlogimenos <alkis@evlogimenos.com>,Tue Feb 17 08:06:31 2004 +0000,llvm/llvm-project,1805,2004Q1,1805 llvm/llvm-project 2004Q1,"add support for adcrm.mr and sbbrm,mr. llvmsvn",satisfaction,3.0
1944,b0cb3eaf5e99c90d39c63c3840b233f1c75af182,martijn <martijn@openbsd.org>,Fri Jun 15 08:26:31 2018 +0000,openbsd/src,932,2018Q2,932 openbsd/src 2018Q2,remove the nonbackwards option for get_third_addr. no change to current behaviour. ok tb,caution,3.0
1945,5ce3afe2d725e88a8b1be9ac6dbcbfe27792c417,Ng Zhi An <zhin@chromium.org>,Tue Feb 2 16:31:02 2021 -0800,v8/v8,323,2021Q1,323 v8/v8 2021Q1,"fix fxconvertlowixu isel and codegen the previous instruction selection was too loose, it only required registers for the inputs. the codegen also used unpcklpsdst, mask, and failed to use src at all. the test case was accidentally passing because dst src by chance. we fix this bug requiring that for avx, any register is fine, but for sse, require dst src. also redefine unpcklps to check dst src in the no avx case. bug",satisfaction,4.0
1946,6486012a1a4d667af2492d9a18a5a594df6a4c42,visa <visa@openbsd.org>,Mon May 6 12:54:51 2019 +0000,openbsd/src,932,2019Q2,932 openbsd/src 2019Q2,"fix unintentional delay of asts on mp make the interrupt and trap return paths check for asts with interrupts disabled. if there is no pending request, interrupts are kept disabled until return to userspace. this fixes delayed processing of an ast request that arrives from another cpu after the ast flag has been checked but before the cpu has finished the return path. the ipi that follows the setting of the ast flag forces kernel reentry and recheck of ast. noticed by guenther",satisfaction,3.0
1947,d1fe519cb8d2a7520ddf17e8bba2f96f943db62b,John David Anglin <dave.anglin@nrc-cnrc.gc.ca>,Wed Sep 3 22:50:07 2008 +0000,gcc-mirror/gcc,848,2008Q3,848 gcc-mirror/gcc 2008Q3,re pr visibility test fails pr hpux.h asm_output_external_real call default_elf_asm_output_external. fromsvn,neutral,4.0
1948,5132d8138aeb4e8dc6875fdcad24feeddfe55a73,Guilherme Polo <ggpolo@gmail.com>,Fri Feb 6 23:48:14 2009 +0000,python/cpython,462,2009Q1,462 python/cpython 2009Q1,"blocked revisions , via svnmerge guilherme.polo wed, jan lines added the ttk module. see issue ttk support for tkinter. guilherme.polo wed, jan lines added support for collecting tests only from specific packages. guilherme.polo wed, jan lines renaming test_tk_ to test_ttk_ since that is what they are testing. added ttk tests to the expected skips mapping just like where test_tcl was expected to be skipped too. guilherme.polo sun, feb lines restore tkinter.tk._loadtk so this test doesn't fail for problems related to ttk. guilherme.polo sun, feb lines use a single tcl interpreter through all these tests, this may help some failing buildbots. guilherme.polo mon, feb line restore the previous geometry before leaving the test guilherme.polo mon, feb line moving to importlib",frustration,4.0
1949,b818c07ef599faeaab20e4466fd713b282f1457a,claudio <claudio@openbsd.org>,Mon Jan 4 13:42:11 2021 +0000,openbsd/src,932,2021Q1,932 openbsd/src 2021Q1,rework roa_cmp so that the result does not depend on the endianess of the system. while at use memcmp in prefixset_cmp as well for address checks. ok florian,frustration,5.0
1950,4565cbea291d948bb6d471d5e8b634a62fe5e66a,Poul-Henning Kamp <phk@FreeBSD.org>,Sun Apr 19 17:22:30 1998 +0000,freebsd/freebsd-src,1207,1998Q2,1207 freebsd/freebsd-src 1998Q2,according to ftpftp.isi.numbers port numbers are divided into three ranges well known ports registered ports dynamic private ports this patch changes the local port range from to the range shown above plus fix the comment in in_pcb.c. warning this may have an impact on firewall configurations! pr reviewed by phk submitted by stephen j. roznowski,frustration,3.0
1951,8cec1624c5c14ad76268cb1c21fa2c5e770bbeb7,Revital Eres <eres@il.ibm.com>,Tue Jul 3 10:27:19 2007 +0000,gcc-mirror/gcc,848,2007Q3,848 gcc-mirror/gcc 2007Q3,modulosched print sccs and check it fromsvn,neutral,2.0
1952,f37bc0d8fd923eb8a11ad6d841b298112760f985,art <art@openbsd.org>,Tue Jan 5 10:39:25 1999 +0000,openbsd/src,932,1999Q1,932 openbsd/src 1999Q1,"we announce ualberta.ca as an official afs mirror, we should have the cellservdb entries for it too",neutral,3.0
1953,715e2ab149f1752fef5cf2107348b1b1e958111a,Alexandre Oliva <aoliva@redhat.com>,Wed Dec 27 16:35:00 2000 +0000,gcc-mirror/gcc,848,2000Q4,848 gcc-mirror/gcc 2000Q4,"rtl.c copy_most_rtx, copy frame_related flag. rtl.c copy_most_rtx, shallow_copy_rtx copy frame_related flag. fromsvn",caution,2.0
1954,7afdfd2dfa39cfe53336ddae9f26473ba4897e87,dlg <dlg@openbsd.org>,Tue Feb 16 08:39:05 2010 +0000,openbsd/src,932,2010Q1,932 openbsd/src 2010Q1,"implement support for fast hello packets. if routedeadtime is set to minimal rather than a number of seconds, the dead time is set to second and hellos are sent at the interval specified by fasthellointerval in msecs. this is non standard wrt to the ospf rfc, but it does interoperate with at least one other router vendor. this allows much better responsiveness to topology changes than the standard intervals allow. if i yank a cable to one of my upstreams, the routes adjust in a second rather than the default of i was running with before. the users dont even notice something changed. developed while working with joshua atterbury. ok claudio as part of a larger diff. dedicated to zan rowe who thinks she is a bigger nerd than me.",frustration,3.0
1955,c21a0ca39f5a3d8af67e2f12dacf019f22e49e8b,Kelsey Hightower <kelsey.hightower@gmail.com>,Mon Aug 11 00:34:59 2014 -0700,kubernetes/kubernetes,464,2014Q3,464 kubernetes/kubernetes 2014Q3,"breakup the registry package into separate packages. currently all registry implementations live in a single package, which makes it bit harder to maintain. the different registry implementations do not follow the same coding style and naming conventions, which makes the code harder to read. breakup the registry package into smaller packages based on the registry implementation. refactor the registry packages to follow a similar coding style and naming convention. this patch does not introduce any changes in behavior.",frustration,4.0
1956,960b9b7a2f6e9b4f0e6b692d604c53b3fd2f5d1c,Jeffrey Yasskin <jyasskin@gmail.com>,Thu Feb 28 04:45:36 2008 +0000,python/cpython,462,2008Q1,462 python/cpython 2008Q1,"move abc._abstract into object by adding a new flag py_tpflags_is_abstract, which forbids constructing types that have it set. the effect is to speed .python.exe m timeit s 'import abc' s 'class fooobject __metaclass__ abc.abcmeta' 'foo' up from . to this fixes issue .",satisfaction,4.0
1957,6b011221fd1dc2b4a7fd57ea1c98a69223524f54,Iain Sandoe <iain@sandoe.co.uk>,Wed Jun 26 19:00:16 2019 +0000,gcc-mirror/gcc,848,2019Q2,848 gcc-mirror/gcc 2019Q2,"make sure the gt files are built for all subtargets. the new gtlogue.h is common to all subtargets in the port, so it needs to be added for them. it seems better to place the common target_gtfiles in the powerpc section, rather than duplicating them in subtargets. this would make it less likely that a subtarget would be overlooked in any future file introductions. iain sandoe config.gcc powerpclinux move target_gtfiles from here powerpc to here. fromsvn",satisfaction,3.0
1958,7abab3d1d054c66bbec22a20405fcd6d4cebe028,Felix Yang <felix.yang@huawei.com>,Mon Jan 19 13:22:41 2015 +0000,gcc-mirror/gcc,848,2015Q1,848 gcc-mirror/gcc 2015Q1,"simd.md aarch_p new pattern. simd.md aarch_p new pattern. simdbuiltins.def smaxp, sminp, umaxp, uminp, smax_nanp, smin_nanp new builtins. arm_neon.h vpmax_s, vpmax_s, vpmax_s, vpmax_u, vpmax_u, vpmax_u, vpmaxq_s, vpmaxq_s, vpmaxq_s, vpmaxq_u, vpmaxq_u, vpmaxq_u, vpmax_f, vpmaxq_f, vpmaxq_f, vpmaxqd_f, vpmaxs_f, vpmaxnm_f, vpmaxnmq_f, vpmaxnmq_f, vpmaxnmqd_f, vpmaxnms_f, vpmin_s, vpmin_s, vpmin_s, vpmin_u, vpmin_u, vpmin_u, vpminq_s, vpminq_s, vpminq_s, vpminq_u, vpminq_u, vpminq_u, vpmin_f, vpminq_f, vpminq_f, vpminqd_f, vpmins_f, vpminnm_f, vpminnmq_f, vpminnmq_f, vpminnmqd_f, vpminnms_f rewrite using builtin functions. fromsvn",satisfaction,4.0
1959,315d905fd552d1ace2196310e527407f9b5bdbd8,Tobias Burnus <burnus@net-b.de>,Tue Jan 25 14:30:32 2011 +0100,gcc-mirror/gcc,848,2011Q1,848 gcc-mirror/gcc 2011Q1,re pr invalid check for assignment tobias burnus pr interface.c gfc_check_operator_interface fix definedassignment check. tobias burnus pr gfortran new. fromsvn,frustration,5.0
1960,28df0b5ae3b6d7905de50fad4b5091dc7eb695a3,Stan Shebs <shebs@apple.com>,Sun Apr 29 00:12:51 2001 +0000,gcc-mirror/gcc,848,2001Q2,848 gcc-mirror/gcc 2001Q2,objcact.c handle_class_ref rewrite to flush target specific code and use new macro act.c handle_class_ref rewrite to flush target specific code and use new macro asm_declare_unresolved_reference. .h asm_declare_unresolved_reference define. tm.texi asm_declare_unresolved_reference document. fromsvn,frustration,6.0
1961,862e1e62fcf86a05434abd3b83a7ad89c39c6f44,Mark Mitchell <mark@codesourcery.com>,Wed Jan 4 01:04:51 2006 +0000,gcc-mirror/gcc,848,2006Q1,848 gcc-mirror/gcc 2006Q1,"re pr c friend class nested in derived class problem pr c namelookup.c push_class_level_binding when a derived class provides a type binding, eliminate any type binding from a base class. pr c repo.c repo_emit_p always instantiate static data members initialized by constant expressions, so that there values are available. pr c g..c new test. pr c g..c new test. fromsvn",satisfaction,5.0
1962,44d251729691376ab96450f3b8e580a87c055b95,Andrew Pinski <pinskia@physics.uc.edu>,Tue Oct 4 17:25:50 2005 +0000,gcc-mirror/gcc,848,2005Q4,848 gcc-mirror/gcc 2005Q4,andrew pinski tree.c annotate_with_file_line fix typo. andrew pinski tree.c annotate_with_file_line fix typo. fromsvn,satisfaction,4.0
1963,2f7c702e1390332a1497188d5ff92339e21ffb80,Joe Groff <jgroff@apple.com>,Fri Dec 12 22:25:10 2014 +0000,apple/swift,556,2014Q4,556 apple/swift 2014Q4,add a test that exercises some vbignum routines from accelerate.framework. calculate ! using a . swift svn,frustration,4.0
1964,0056e7e15ac0c89cb6eab37d79900d174adb713e,Florian Hahn <flo@fhahn.com>,Wed Apr 7 22:26:01 2021 +0100,llvm/llvm-project,1805,2021Q2,1805 llvm/llvm-project 2021Q2,add another gep modulo test with shl with odd op.,frustration,2.0
1965,d9abfa1529800be6da5bc6090985b39a819155d6,Mu Tao <pamilty@gmail.com>,Thu Sep 12 20:12:28 2019 +0800,v8/v8,323,2019Q3,323 v8/v8 2019Q3,replace remaining mutable reference arguments port cfdcffbaebcc,caution,2.0
1966,01db51af7a328af203a7bea915d9e47ff56a77d6,Brian Somers <brian@FreeBSD.org>,Thu Oct 23 10:09:35 1997 +0000,freebsd/freebsd-src,1207,1997Q4,1207 freebsd/freebsd-src 1997Q4,fix various filter problems pr submitted by chiharu shibata,frustration,6.0
1967,bcf0f4e9655ef967218fee9f423a3b1ac458c3e7,anton <anton@openbsd.org>,Sat Nov 9 19:02:31 2019 +0000,openbsd/src,932,2019Q4,932 openbsd/src 2019Q4,replace the handrolled pipe lock with a rwlock. a necessary first step towards unlocking pipes. ok cheloha mpi visa,neutral,3.0
1968,f908b2b919a29aece4530eada4634281bfb07cf9,Roy Li <royboy@fb.com>,Wed Aug 1 12:50:30 2018 -0700,pytorch/pytorch,165,2018Q3,165 pytorch/pytorch 2018Q3,use google protobuf in pytorch onnx summary pull request resolved reviewed by houseroad differential revision pulled by liroy fbshipitsourceid cdbcdeebfbafdfbaf,frustration,3.0
1969,addca7072549d790f1e6862be08937880bddbef5,mstarzinger <mstarzinger@chromium.org>,Thu Mar 19 05:40:51 2015 -0700,v8/v8,323,2015Q1,323 v8/v8 2015Q1,remove stale todo from functiontester. chromium.org testrunjsexceptions review url cr,neutral,5.0
1970,04fc999c057dffee882e8711ba28ec51ee092698,Éric Araujo <merwok@netwok.org>,Wed Jun 8 04:06:50 2011 +0200,python/cpython,462,2011Q2,462 python/cpython 2011Q2,packaging cleanup remove use of script_name where obsolete,frustration,5.0
1971,15a5de99668137dd170d91e329595d1b12b0e9b9,Arnaud Charlet <charlet@gcc.gnu.org>,Tue Jun 12 11:56:58 2012 +0200,gcc-mirror/gcc,848,2012Q2,848 gcc-mirror/gcc 2012Q2,"ed schonberg sem_util.adb build_explicit_dereference if the expression is an entity, ensure that the type of the expression is the same as that of the entity. pat rogers projects.texi corrected instances of the word build that should be built instead. other similar changes and minor punctuation changes. fromsvn",frustration,4.0
1972,a7aa6bd1ea69a3c9ab875d4e468bdbdb31c2decc,Bill Paul <wpaul@FreeBSD.org>,Sat Jun 24 17:47:51 1995 +0000,freebsd/freebsd-src,1207,1995Q2,1207 freebsd/freebsd-src 1995Q2,"getnewyppasswd in yp_passwd.c doesn't generate correct encrypted password strings when des isn't used somehow the encrypted password is corrupted and it winds up containing control chars, which yppasswdd subsequently rejects. this breaks yppasswd on nondes freebsd systems using nis. fix scrap getnewyppasswd entirely and use getnewpasswd from local_password.c, since it already works properly and is virtually identical to getnewyppasswd anyway. wish i'd noticed this sooner. this fixes a problem just reported on comp.unix.bsd.freebsd.misc.",caution,3.0
1973,6684ef3f23f1aeb5f5034a982d2669011f3a5179,Wanchao Liang <wanchaol@users.noreply.github.com>,Wed Mar 27 14:39:33 2019 -0700,pytorch/pytorch,165,2019Q1,165 pytorch/pytorch 2019Q1,move fast rnn benchmark to summary pull request resolved differential revision pulled by wanchaol fbshipitsourceid bfdcecdbeecacaf,neutral,4.0
1974,843bdbb4bd48f024a7d952f7cd00c35a0987e5b4,Sheetal Nandi <shkamat@microsoft.com>,Mon Dec 21 13:01:21 2015 -0800,microsoft/TypeScript,142,2015Q4,142 microsoft/TypeScript 2015Q4,fix the breakpoints in for of destructuring,satisfaction,3.0
1975,13b74aef6249c65e2b085a581ae9dea8c88ad8d5,Yury Selivanov <yselivanov@sprymix.com>,Mon Aug 3 14:55:58 2015 -0400,python/cpython,462,2015Q3,462 python/cpython 2015Q3,. mention that 'async' is a bad name for modules,satisfaction,2.0
1976,85349e0846d6f429f90042da265c7b7a55300e88,jmc <jmc@openbsd.org>,Tue Aug 30 11:38:59 2011 +0000,openbsd/src,932,2011Q3,932 openbsd/src 2011Q3,remove some pointless ppcompact combinations either ingo or kristaps will update mandoc repo,satisfaction,5.0
1977,fe7056240b081ccf51ff08b3a15afbfad52a87ad,Fred Drake <fdrake@acm.org>,Fri Apr 4 11:31:14 2008 +0000,python/cpython,462,2008Q2,462 python/cpython 2008Q2,"my previous change did what i said it should not it changed the current directory to the directory in which the setup.py script lived which made __file__ wrong fixed, with test that the script is run in the current directory of the caller",neutral,6.0
1978,2f00fb3d0ba1174dee21c33162a5fdc4e583a061,Steven G. Kargl <kargl@gcc.gnu.org>,Wed Dec 12 00:53:08 2018 +0000,gcc-mirror/gcc,848,2018Q4,848 gcc-mirror/gcc 2018Q4,"re pr ice in gfc_format_decoder, at . steven g. kargl pr primary.c gfc_match_structure_constructor set the locus of an expression to avoid a null pointer dereference. steven g. kargl pr gfortran update testcase to use . gfortran new test. fromsvn",frustration,3.0
1979,4c3fca23b51ee202e7b3f2f3595eee65d8f15eae,matthieu <matthieu@openbsd.org>,Sun Apr 24 13:12:11 2011 +0000,openbsd/src,932,2011Q2,932 openbsd/src 2011Q2,sync with xorgdocs . changes,neutral,4.0
1980,b96855f1b5ddc15b93db18399583161c2ab646f2,Ng Zhi An <zhin@chromium.org>,Mon Jun 1 15:37:03 2020 -0700,v8/v8,323,2020Q2,323 v8/v8 2020Q2,"add bitwise ops this adds not, and, andnot, or, xor, and select. bug",frustration,5.0
1981,dfd8a0620dcb3130aec0c82b007edd7feb735236,Mohamed Hegazy <mhegazy@microsoft.com>,Sat Feb 14 15:50:06 2015 -0800,microsoft/TypeScript,142,2015Q1,142 microsoft/TypeScript 2015Q1,always default to using json and do not format it,neutral,6.0
1982,9073572843f7798c8be7d912f5138b5e821c87af,Ron Buckton <rbuckton@microsoft.com>,Tue Jun 14 18:04:48 2016 -0700,microsoft/TypeScript,142,2016Q2,142 microsoft/TypeScript 2016Q2,merge branch 'transforms' into transformsgenerators,frustration,5.0
1983,eb908811ae129194ab9d12f8755957e579a49411,GCC Administrator <gccadmin@gcc.gnu.org>,Mon Apr 9 23:17:05 2007 +0000,gcc-mirror/gcc,848,2007Q2,848 gcc-mirror/gcc 2007Q2,daily bump. fromsvn,neutral,6.0
1984,718b194db3915c561f1219159dd9aaaa08323023,espie <espie@openbsd.org>,Tue Dec 21 22:30:47 1999 +0000,openbsd/src,932,1999Q4,932 openbsd/src 1999Q4,"recursive definitions are not the real problem. trying to expand them is. so flag obvious recursive definitions for later, and give an error only if we expand them. some gnu files, including autoconf, do define some macros with themselves as the replacement text, for use in testifset patterns since type is no longer macrtype, those macros end up in builtins but this is not a problem, since expanding them is an error.",satisfaction,5.0
1985,6d4addd1f47d3f74e2fbdee126f3f16a464f1198,Andrew M. Kuchling <amk@amk.ca>,Mon Sep 25 14:40:15 2000 +0000,python/cpython,462,2000Q3,462 python/cpython 2000Q3,update url for python .,neutral,6.0
1986,71ade764add5ced9179fa9f7af69448185fddc9c,Ville Voutilainen <ville.voutilainen@gmail.com>,Mon Sep 26 23:51:42 2016 +0300,gcc-mirror/gcc,848,2016Q3,848 gcc-mirror/gcc 2016Q3,re pr libstdc unwrapping stdoptional constructor is not working for nontransferable object pr libstdc optional optionalconst optional defaultinitialize the base and use emplace. optionaloptional likewise. .cc new. fromsvn,neutral,4.0
1987,d6e007424f51cf9aaca2104c10fd18a0c3ad52ca,todd <todd@openbsd.org>,Wed Jul 25 18:48:35 2007 +0000,openbsd/src,932,2007Q3,932 openbsd/src 2007Q3,"bthub for , from johan",frustration,4.0
1988,c049b107223eb8f97c1049ab29b7bb2e293bbe9e,Jakub Jelinek <jakub@redhat.com>,Thu Feb 25 09:09:02 2016 +0100,gcc-mirror/gcc,848,2016Q1,848 gcc-mirror/gcc 2016Q1,"re pr rtl wrong code with frenameregisters x_ pr rtl regcprop.c include cfgrtl.h. copyprop_hardreg_forward_ if noop_p insn uses narrower than remembered mode, either delete it if noop_move_p, or treat like copy_p but not noop_p instruction. gccc new test. fromsvn",neutral,3.0
1989,66b461ce02570f05b7ddd76e2de1a82f3a6618e3,Tom Tromey <tromey@redhat.com>,Fri Aug 24 17:24:02 2001 +0000,gcc-mirror/gcc,848,2001Q3,848 gcc-mirror/gcc 2001Q3,decl.c init_decl_processing add throws' field to method descriptor. decl.c init_decl_processing add throws' field to method descriptor. class.c make_method_value compute throws' field for method. fromsvn,satisfaction,4.0
1990,44cb38cf56e4e605bbab98a617d0687614026dc5,Chris Demetriou <cgd@google.com>,Tue Sep 1 18:18:56 2009 -0700,gcc-mirror/gcc,848,2009Q3,848 gcc-mirror/gcc 2009Q3,maintainers write after approval add myself. chris demetriou maintainers write after approval add myself. fromsvn,neutral,3.0
1991,4b421e2daaa3e23db6b5a51f8ca5b2da0d894a56,Mike Silbersack <silby@FreeBSD.org>,Sun Oct 7 20:44:24 2007 +0000,freebsd/freebsd-src,1207,2007Q4,1207 freebsd/freebsd-src 2007Q4,add fbsdid to all files in netinet so that people can more easily include file version information in bug reports. approved by re kensmith,neutral,2.0
1992,56e13ae00611a97d28f5284513c45f829a9810c9,Ian Lance Taylor <ian@gcc.gnu.org>,Fri Jan 31 01:58:12 2014 +0000,gcc-mirror/gcc,848,2014Q1,848 gcc-mirror/gcc 2014Q1,compiler use backend interface for conditional expressions. fromsvn,frustration,3.0
1993,27b226b78675355795946dede4b1f8b0daaae8c3,Camillo Bruni <cbruni@chromium.org>,Mon Oct 26 11:51:34 2020 +0100,v8/v8,323,2020Q4,323 v8/v8 2020Q4,remove mapprocessor the command line tool never fully worked all the main features of the mapprocessor are now available in the systemanalyzer bug,frustration,5.0
1994,d52236b88f9c9633dbe71f018cea99bd0be275a2,Jonathan McPherson <jonathan@rstudio.com>,Fri Mar 13 13:45:17 2020 -0700,rstudio/rstudio,155,2020Q1,155 rstudio/rstudio 2020Q1,update jenkinsfile for release fork,,
1995,9e69c67ebe22ef755034638891ba979171b141bd,Owen Anderson <resistor@mac.com>,Sun Jun 4 00:56:30 2006 +0000,llvm/llvm-project,1805,2006Q2,1805 llvm/llvm-project 2006Q2,"update the regression tests, and add a new one encountered while compiling crtend. llvmsvn",,
1996,fe768182ef45893bbcdde7663ffb860b3ac3ffa0,Philippe Gervais <philippe.gervais@inria.fr>,Thu Jul 25 16:53:39 2013 +0200,scikit-learn/scikit-learn,103,2013Q3,103 scikit-learn/scikit-learn 2013Q3,"added pairwise_distances_argmin similar to euclidean_distances_argmin, but compute distances with any metric from scikitlearn or scipy.",,
1997,c8df72c446639286815357b723f257264e6b6162,Jakub Jelinek <jakub@redhat.com>,Mon Feb 4 09:52:18 2019 +0100,gcc-mirror/gcc,848,2019Q1,848 gcc-mirror/gcc 2019Q1,g.alias.c new test. fromsvn,,
1998,3c0c840ea1fadc767edbe37edebd53b1c364a864,John Fieber <jfieber@FreeBSD.org>,Sun Oct 15 16:51:16 1995 +0000,freebsd/freebsd-src,1207,1995Q4,1207 freebsd/freebsd-src 1995Q4,"remove hacks that go over the doc tree multiple times. if you need docs in a nondefault format, do make '.",,
1999,c8211b64cdee1dc71fa91945c8e5fa9880fcee2f,verwaest <verwaest@chromium.org>,Thu Jul 2 07:38:37 2015 -0700,v8/v8,323,2015Q3,323 v8/v8 2015Q3,distinguish slow from fast sloppy arguments bug url cr,,
